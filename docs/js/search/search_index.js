var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.064,1,2.054]],["body/classes/Account.html",[0,0.085,1,3.663,2,1.419,3,0.192,4,0.192,5,0.172,6,3.853,7,0.337,8,1.035,9,2.449,10,0.455,11,0.013,12,1.983,13,1.236,14,2.998,15,3.166,16,3.721,17,1.887,18,3.535,19,2.201,20,0.656,21,5.33,22,0.396,23,3.721,24,3.077,25,2.998,26,1.574,27,3.721,28,1.419,29,1.194,30,4.782,31,5.33,32,0.259,33,4.191,34,2.998,35,3.583,36,1.689,37,1.371,38,3.853,39,4.643,40,0.011,41,0.011]],["title/classes/AccountActivationRequest.html",[0,0.064,42,1.962]],["body/classes/AccountActivationRequest.html",[0,0.081,2,1.349,3,0.182,4,0.182,5,0.164,7,0.32,8,1.002,9,2.393,10,0.481,11,0.014,12,1.937,13,1.487,14,3.605,15,3.009,16,3.605,17,1.828,18,3.425,19,2.15,20,0.789,22,0.387,23,3.954,24,2.981,25,2.849,26,1.496,27,3.605,28,1.349,29,1.135,32,0.253,34,2.849,37,1.303,40,0.01,41,0.01,42,3.592,43,3.662,44,3.007,45,3.592,46,3.425,47,4.038,48,5.066,49,5.066,50,4.633,51,5.066,52,3.662,53,3.406,54,4.413]],["title/classes/AccountActivationRequestDto.html",[0,0.064,55,2.542]],["body/classes/AccountActivationRequestDto.html",[0,0.118,2,1.525,3,0.206,4,0.206,5,0.185,7,0.362,8,1.081,9,2.527,10,0.362,11,0.013,12,2.046,13,1.328,20,0.705,22,0.381,28,1.525,29,1.283,32,0.249,40,0.011,41,0.011,55,4.356,56,4.503,57,3.608,58,5.727,59,3.781,60,3.31,61,2.097,62,3.608,63,4.989]],["title/classes/AccountDto.html",[0,0.064,64,3.172]],["body/classes/AccountDto.html",[0,0.113,2,1.584,3,0.214,4,0.214,5,0.192,7,0.376,8,1.106,9,2.569,10,0.376,11,0.013,13,1.38,20,0.732,22,0.328,32,0.214,40,0.011,41,0.011,57,3.748,59,3.601,60,3.152,61,2.178,64,5.561,65,5.182,66,1.427,67,5.948]],["title/controllers/AccountsController.html",[68,1.798,69,2.917]],["body/controllers/AccountsController.html",[0,0.099,3,0.225,4,0.225,5,0.202,11,0.013,22,0.344,32,0.225,40,0.012,41,0.012,68,2.782,69,5.259,70,2.782,71,5.437,72,3.933,73,4.196,74,1.399,75,6.241]],["title/modules/AccountsModule.html",[76,1.325,77,2.917]],["body/modules/AccountsModule.html",[0,0.084,1,2.674,3,0.189,4,0.189,5,0.17,11,0.014,22,0.424,26,1.551,32,0.189,38,4.739,40,0.011,41,0.011,69,5.166,70,2.922,74,1.177,76,2.346,77,5.679,78,2.341,79,2.341,80,2.553,81,2.553,82,2.341,83,3.475,84,2.553,85,4.575,86,4.575,87,5.281,88,3.187,89,2.553,90,2.553,91,5.252,92,5.252,93,5.252,94,2.954,95,5.252,96,2.674,97,2.954,98,1.218,99,5.252,100,2.954,101,1.447]],["title/injectables/AccountsService.html",[87,2.712,102,1.038]],["body/injectables/AccountsService.html",[0,0.1,3,0.226,4,0.226,5,0.203,11,0.013,22,0.346,32,0.226,40,0.012,41,0.012,74,1.407,87,4.908,102,1.878,103,2.685,104,5.469]],["title/classes/Admin.html",[0,0.064,105,1.726]],["body/classes/Admin.html",[0,0.093,1,1.936,2,0.476,3,0.064,4,0.064,5,0.058,7,0.24,8,0.464,10,0.49,11,0.014,12,1.731,13,0.688,14,1.668,15,1.762,16,2.978,17,2.083,18,3.357,19,2.147,20,0.365,22,0.346,23,4.268,24,3.124,25,1.005,26,0.528,27,2.138,28,0.476,29,0.4,32,0.219,34,1.005,35,1.201,36,1.556,37,1.138,40,0.005,41,0.005,42,1.442,44,0.764,45,2.574,46,2.365,47,2.396,66,1.506,73,3.3,98,0.688,101,0.817,105,2.511,106,1.061,107,1.031,108,3.549,109,1.787,110,4.055,111,3.828,112,3.828,113,2.144,114,1.787,115,1.869,116,2.144,117,1.733,118,0.734,119,2.916,120,1.061,121,1.126,122,2.387,123,1.126,124,1.733,125,0.869,126,2.014,127,0.955,128,2.387,129,0.91,130,2.387,131,1.126,132,0.654,133,0.869,134,2.32,135,2.413,136,2.144,137,1.291,138,1.869,139,2.144,140,3.199,141,3.199,142,4.983,143,3.199,144,3.199,145,3.199,146,3.199,147,3.199,148,3.199,149,3.199,150,3.199,151,3.199,152,3.199,153,1.291,154,3.828,155,0.907,156,1.201,157,0.796,158,1.291,159,0.796,160,1.085,161,2.144,162,2.5,163,0.492,164,1.291,165,0.846,166,1.291,167,4.541,168,1.201,169,0.869,170,1.291,171,1.291,172,0.764,173,2.748,174,2.748,175,1.291,176,2.144,177,0.831,178,0.831,179,3.199,180,0.91,181,1.201,182,2.138,183,3.549,184,0.796,185,1.201,186,1.201,187,1.291,188,1.172,189,1.994,190,1.291,191,1.994,192,1.291,193,0.91,194,1.201,195,1.869,196,1.291,197,1.201,198,1.291,199,1.291,200,1.291,201,1.291,202,1.291,203,1.869,204,1.291,205,0.955,206,1.005,207,1.201,208,1.201,209,1.291,210,1.291,211,1.201,212,1.762,213,1.291,214,1.291,215,1.291,216,1.126,217,1.126,218,1.201,219,0.91,220,1.201,221,0.91,222,1.201]],["title/controllers/AdminController.html",[68,1.798,223,2.917]],["body/controllers/AdminController.html",[0,0.056,3,0.126,4,0.126,5,0.113,7,0.222,10,0.402,11,0.014,13,1.559,20,0.86,22,0.405,32,0.126,36,2.33,40,0.008,41,0.008,46,1.874,55,4.532,62,4.84,68,1.563,70,1.563,72,2.209,74,0.786,98,1.475,101,1.852,105,1.5,107,1.238,124,2.467,125,1.705,132,1.284,162,3.115,184,2.229,223,3.616,224,3.055,225,1.53,226,2.641,227,4.357,228,5.538,229,5.079,230,2.871,231,4.357,232,5.079,233,3.055,234,5.002,235,3.507,236,2.087,237,2.138,238,2.712,239,5.002,240,3.507,241,3.055,242,5.538,243,5.538,244,3.507,245,3.92,246,3.507,247,2.535,248,5.002,249,3.362,250,3.507,251,2.083,252,3.055,253,5.002,254,3.507,255,3.055,256,5.002,257,3.507,258,2.971,259,5.002,260,3.055,261,2.357,262,3.507,263,2.968,264,2.535,265,3.055,266,3.674,267,3.055,268,2.535,269,3.055,270,3.507,271,5.002,272,3.055,273,3.507,274,3.507,275,1.151,276,1.5,277,2.229,278,1.976,279,3.507,280,1.441,281,3.507,282,3.507,283,3.507,284,3.507,285,3.507,286,3.507,287,3.507,288,1.785,289,2.304,290,3.507,291,1.785,292,1.5,293,1.441,294,3.507,295,3.055,296,3.507,297,3.507,298,3.507,299,3.507,300,3.507,301,3.507,302,3.507]],["title/modules/AdminModule.html",[76,1.325,303,2.712]],["body/modules/AdminModule.html",[0,0.062,3,0.14,4,0.14,5,0.125,10,0.245,11,0.014,20,0.661,22,0.427,26,1.146,32,0.14,40,0.009,41,0.009,42,1.886,53,3.61,70,2.393,74,0.869,76,2.022,78,1.729,79,1.729,80,1.886,81,1.886,82,1.729,83,2.994,84,2.994,88,2.611,89,1.886,90,1.886,94,2.182,96,3.384,97,2.182,98,1.246,100,3.464,101,1.069,107,0.756,223,4.452,225,1.187,226,2.346,230,2.867,236,1.274,237,1.643,266,4.977,267,3.38,275,1.274,280,1.594,303,5.265,304,3.38,305,3.38,306,3.38,307,3.38,308,3.675,309,4.06,310,3.879,311,3.38,312,4.678,313,5.79,314,3.879,315,4.678,316,3.879,317,4.678,318,3.38,319,3.879,320,3.05,321,3.38,322,2.608,323,2.804,324,2.804,325,3.38,326,2.804,327,2.182,328,4.14,329,4.163,330,2.073,331,2.608,332,3.882,333,3.19,334,2.804,335,3.882,336,3.61,337,2.804,338,2.869,339,3.05,340,3.05,341,3.38,342,3.879,343,3.38,344,3.38,345,3.38,346,3.879,347,3.38,348,3.879]],["title/injectables/AdminSeeder.html",[102,1.038,349,2.712]],["body/injectables/AdminSeeder.html",[0,0.068,3,0.154,4,0.154,5,0.139,7,0.271,10,0.363,11,0.014,17,1.977,19,1.984,20,0.798,22,0.419,26,1.267,29,0.961,32,0.154,36,1.822,37,1.668,40,0.009,41,0.009,44,1.834,74,0.961,98,0.995,102,1.479,103,1.834,105,2.774,107,0.835,117,2.029,118,1.762,132,1.571,133,2.085,155,1.312,157,1.912,159,1.912,160,1.64,163,1.182,165,1.224,177,1.995,178,1.995,184,1.912,225,1.759,226,2.626,230,3.057,236,1.408,237,1.759,275,1.408,276,2.459,277,1.912,278,1.695,280,1.762,288,2.184,289,2.563,291,2.184,292,1.834,293,1.762,349,3.865,350,3.736,351,5.449,352,3.1,353,4.117,354,4.289,355,3.865,356,4.289,357,4.289,358,2.548,359,2.883,360,2.703,361,2.703,362,2.883,363,4.289,364,5.75,365,2.883,366,5.75,367,3.865,368,4.289,369,3.1,370,4.289,371,4.289,372,4.289,373,4.289,374,4.289,375,4.289,376,3.372,377,4.289,378,5.75,379,3.372,380,2.548,381,2.883,382,3.1,383,3.302,384,3.1,385,3.1]],["title/injectables/AdminService.html",[102,1.038,266,2.542]],["body/injectables/AdminService.html",[0,0.058,1,1.845,3,0.13,4,0.13,5,0.117,7,0.229,9,1.234,10,0.408,11,0.014,17,1.461,19,1.109,20,0.87,22,0.389,26,1.071,29,0.812,32,0.13,37,1.751,40,0.008,41,0.008,42,1.762,44,1.55,52,2.62,55,4.576,62,4.752,74,0.812,98,1.497,101,1.778,102,1.317,103,1.55,107,1.257,115,2.284,225,1.566,226,2.814,227,4.461,228,5.621,230,2.903,231,4.461,232,5.173,233,4.461,236,2.118,237,2.082,238,3.001,252,4.461,255,3.158,263,3.697,264,2.62,265,3.158,266,3.227,275,1.19,276,2.19,277,2.282,278,2.023,280,1.489,289,2.869,292,2.76,293,2.797,321,3.158,353,3.833,358,2.153,380,2.153,381,2.437,386,3.158,387,3.625,388,3.625,389,5.121,390,3.625,391,3.625,392,3.625,393,3.625,394,3.625,395,3.625,396,3.625,397,3.625,398,5.121,399,2.85,400,3.527,401,5.121,402,3.625,403,5.121,404,4.818,405,2.62,406,3.625,407,3.625,408,5.121,409,3.625,410,5.121,411,1.686,412,3.625,413,3.625,414,3.625]],["title/modules/AppModule.html",[76,1.325,415,2.917]],["body/modules/AppModule.html",[0,0.062,3,0.141,4,0.141,5,0.127,11,0.014,17,1.117,19,1.653,22,0.439,24,2.513,26,1.156,32,0.141,37,1.007,40,0.009,41,0.009,42,1.903,53,3.633,74,0.877,76,2.032,78,1.745,79,1.745,80,1.903,81,1.903,82,1.745,83,1.903,84,1.903,88,2.627,89,1.903,90,1.903,94,2.202,96,2.751,97,2.202,98,1.253,100,3.48,101,1.489,105,1.674,134,1.547,135,1.608,180,2.751,193,2.751,219,2.751,221,2.751,303,4.867,308,3.686,309,4.072,328,2.632,329,3.753,330,2.092,338,2.092,341,3.41,415,5.939,416,3.41,417,3.41,418,4.867,419,4.561,420,4.867,421,4.867,422,4.561,423,3.915,424,3.915,425,3.915,426,3.915,427,3.915,428,3.915,429,3.915,430,3.915,431,3.915,432,3.915,433,3.915,434,3.915,435,3.915,436,3.915,437,3.915,438,3.915,439,3.915,440,3.915,441,3.915,442,2.83,443,2.83,444,2.83,445,2.83]],["title/controllers/AuthController.html",[68,1.798,446,2.917]],["body/controllers/AuthController.html",[0,0.052,3,0.116,4,0.116,5,0.105,7,0.205,9,1.607,10,0.43,11,0.014,13,1.421,17,0.924,19,2.201,20,0.754,22,0.387,32,0.116,37,1.806,40,0.008,41,0.008,66,0.653,68,1.443,70,1.443,72,2.04,74,0.725,98,1.421,101,1.688,107,1.193,169,1.574,172,2.786,225,1.444,226,2.697,236,2.011,237,1.874,238,2.196,258,3.311,260,2.82,261,2.176,278,1.279,288,1.648,289,2.421,291,1.648,383,1.648,404,4.285,411,2.196,446,3.413,447,2.82,448,2.546,449,5.675,450,4.856,451,5.574,452,4.114,453,2.82,454,3.462,455,6.975,456,4.722,457,3.238,458,3.238,459,4.722,460,4.722,461,3.238,462,3.86,463,3.238,464,4.722,465,3.238,466,3.238,467,2.82,468,3.462,469,3.238,470,3.238,471,4.114,472,6.127,473,3.238,474,2.34,475,2.546,476,2.546,477,3.238,478,2.82,479,2.838,480,2.82,481,1.923,482,2.82,483,2.176,484,2.34,485,2.546,486,2.546,487,3.238,488,3.238,489,2.34,490,3.238,491,3.238,492,3.238,493,3.238,494,5.574,495,3.238,496,6.801,497,5.574,498,4.722,499,4.722,500,4.722,501,4.114,502,2.34,503,3.238,504,2.546,505,2.34,506,2.546,507,3.174,508,3.238,509,2.546,510,2.546,511,3.238,512,4.722,513,2.82,514,3.238,515,3.238,516,5.574,517,4.114,518,4.722,519,4.722,520,5.574,521,3.238,522,3.238,523,3.238]],["title/modules/AuthModule.html",[76,1.325,308,2.054]],["body/modules/AuthModule.html",[0,0.07,3,0.159,4,0.159,5,0.143,11,0.014,17,1.264,22,0.422,24,2.733,26,1.309,32,0.159,37,1.139,40,0.009,41,0.009,70,2.619,74,0.993,76,2.164,78,1.975,79,1.975,80,2.154,81,2.154,82,1.975,83,3.205,84,3.205,88,2.856,89,2.154,90,2.154,94,2.492,96,3.356,97,2.492,98,1.028,100,3.708,101,1.221,105,1.895,134,1.75,135,1.82,180,2.991,193,2.991,219,2.991,221,2.991,308,3.9,326,3.202,327,2.492,328,4.432,329,4.309,330,2.367,332,4.247,333,3.49,334,3.202,335,4.247,336,3.95,337,3.202,338,3.14,339,3.483,340,3.483,361,2.791,442,3.202,443,3.202,444,3.202,445,3.202,446,4.765,479,4.108,480,3.859,524,3.859,525,3.859,526,3.859,527,4.43,528,4.43]],["title/injectables/AuthService.html",[102,1.038,479,2.054]],["body/injectables/AuthService.html",[0,0.031,1,2.052,3,0.07,4,0.07,5,0.063,7,0.123,9,1.585,10,0.408,11,0.014,17,1.961,19,0.594,20,0.859,22,0.372,26,0.573,29,0.435,32,0.07,36,1.747,37,2.002,40,0.005,41,0.005,46,1.037,66,1.387,74,0.435,98,1.408,101,1.861,102,0.817,103,0.83,105,0.83,107,1.183,115,1.223,117,0.685,124,0.685,126,0.738,132,0.711,133,0.944,134,0.767,135,0.798,155,0.971,157,0.865,159,0.865,160,1.15,163,0.535,165,0.554,168,1.305,169,2.68,172,2.985,188,0.767,225,0.971,226,2.825,230,2.265,236,1.993,237,2.103,238,0.903,249,1.305,275,0.637,276,1.358,277,3.011,278,1.592,280,0.798,289,3.023,292,2.596,293,2.656,327,1.092,329,3.1,330,1.037,333,2.394,336,3.13,353,2.766,355,2.709,358,1.153,359,1.305,360,1.223,361,1.223,362,1.305,365,2.135,367,3.13,369,2.296,380,1.153,381,1.305,382,1.403,383,0.988,399,1.526,400,1.153,411,1.477,449,3.51,450,2.766,452,2.766,453,2.766,454,2.614,462,4.742,467,2.766,468,2.806,478,1.691,479,1.617,481,1.153,482,1.691,501,3.51,502,2.296,504,1.526,505,2.296,506,1.526,507,3.911,510,3.168,529,1.691,530,3.176,531,3.176,532,4.656,533,4.656,534,4.656,535,4.656,536,4.656,537,4.03,538,1.691,539,4.575,540,1.941,541,3.176,542,1.941,543,3.176,544,1.941,545,1.941,546,1.941,547,1.941,548,1.941,549,1.941,550,1.941,551,3.176,552,1.941,553,1.941,554,1.941,555,1.941,556,1.941,557,1.941,558,1.941,559,3.176,560,1.941,561,2.497,562,1.223,563,1.941,564,1.941,565,1.691,566,1.691,567,1.941,568,1.941,569,1.941,570,1.941,571,1.526,572,1.941,573,2.766,574,4.03,575,1.941,576,1.941,577,1.941,578,1.941,579,1.941,580,1.941,581,1.941,582,1.941,583,1.941,584,1.941,585,5.512,586,1.941,587,1.941,588,3.176,589,3.176,590,1.941,591,1.941,592,4.056,593,1.941,594,1.941,595,1.941,596,1.941,597,1.691,598,1.941,599,3.176,600,1.941,601,1.941,602,1.941,603,1.941,604,1.941,605,1.941,606,3.176,607,3.176,608,3.176,609,3.176,610,1.941,611,3.176,612,1.691,613,3.176,614,1.526,615,1.941,616,1.691,617,1.941,618,1.941,619,2.497,620,1.941,621,1.941,622,3.176,623,1.941,624,1.941,625,1.941,626,4.03,627,1.941,628,1.941,629,1.691,630,3.176,631,1.941,632,1.941,633,1.941,634,3.661,635,2.766,636,1.526,637,1.941,638,1.941,639,1.941,640,3.176,641,3.176,642,2.766,643,1.941,644,1.941,645,1.941,646,4.656,647,1.941,648,1.941,649,1.941]],["title/classes/Comment.html",[0,0.064,650,2.712]],["body/classes/Comment.html",[0,0.071,2,1.182,3,0.16,4,0.16,5,0.143,7,0.417,8,0.92,9,2.246,10,0.498,11,0.014,12,2.07,13,1.63,14,3.952,15,3.92,16,3.952,17,1.678,18,3.755,19,2.344,20,0.865,22,0.364,23,4.112,24,2.737,25,2.497,26,1.311,27,3.309,28,1.182,29,0.995,32,0.237,34,2.497,37,1.142,40,0.009,41,0.009,46,3.144,66,1.418,107,1.146,636,3.491,650,5.295,651,3.209,652,4.436,653,5.189,654,5.749,655,4.439,656,5.884,657,5.884,658,5.884,659,4.439,660,6.121,661,4.439,662,4.439,663,4.253,664,4.439,665,3.209,666,3.209,667,3.867]],["title/controllers/CommentsController.html",[68,1.798,668,2.917]],["body/controllers/CommentsController.html",[0,0.071,3,0.16,4,0.16,5,0.143,7,0.28,10,0.417,11,0.014,12,2.07,13,1.63,20,0.865,22,0.387,28,1.182,29,0.995,32,0.16,40,0.009,41,0.009,68,1.979,70,1.979,72,2.797,74,0.995,98,1.531,101,1.936,107,1.285,142,2.984,225,1.8,226,2.849,236,2.167,237,2.149,238,3.268,258,2.637,261,4.436,278,1.754,289,2.776,489,3.209,652,2.984,668,4.253,669,3.867,670,5.126,671,5.126,672,6.121,673,5.126,674,3.867,675,5.051,676,4.439,677,3.867,678,5.884,679,4.439,680,6.121,681,4.439,682,3.867,683,5.884,684,4.439,685,3.867,686,4.158,687,3.867,688,3.867,689,4.439,690,4.439,691,4.439,692,4.439,693,4.439,694,4.439,695,4.439,696,4.439]],["title/modules/CommentsModule.html",[76,1.325,418,2.712]],["body/modules/CommentsModule.html",[0,0.081,3,0.184,4,0.184,5,0.165,11,0.014,22,0.421,26,1.511,32,0.184,40,0.01,41,0.01,70,2.874,74,1.146,76,2.318,78,2.28,79,2.28,80,2.486,81,2.486,82,2.28,83,3.433,84,3.433,88,3.135,89,2.486,90,2.486,94,2.876,96,2.604,97,2.876,98,1.186,100,2.876,101,1.409,418,5.326,650,3.438,666,4.661,668,5.104,686,5.19,687,4.455,697,4.455,698,4.455,699,4.455,700,5.115,701,4.455,702,5.115,703,5.115]],["title/injectables/CommentsService.html",[102,1.038,686,2.542]],["body/injectables/CommentsService.html",[0,0.065,3,0.148,4,0.148,5,0.133,7,0.259,10,0.43,11,0.014,12,2.023,20,0.876,22,0.392,26,1.211,28,1.092,29,0.919,32,0.148,37,1.75,40,0.009,41,0.009,74,0.919,98,1.578,101,1.875,102,1.435,103,1.754,107,1.325,225,1.706,226,2.814,236,2.234,237,2.081,238,3.165,276,2.386,277,1.828,278,1.62,289,2.688,292,2.386,293,2.605,353,4.042,358,2.436,400,3.314,650,4.936,652,4.784,665,2.965,670,4.86,671,4.86,672,5.928,673,4.86,674,4.86,675,4.936,677,4.86,680,5.928,682,4.86,686,3.515,688,3.573,701,3.573,704,3.573,705,4.101,706,4.101,707,5.579,708,4.101,709,4.101,710,4.101,711,4.101,712,4.101,713,4.101,714,5.579,715,4.101,716,4.101,717,4.101,718,5.579,719,5.579,720,4.101,721,4.101]],["title/classes/ConnectDto.html",[0,0.064,722,2.712]],["body/classes/ConnectDto.html",[0,0.108,2,1.481,3,0.2,4,0.2,5,0.18,7,0.351,8,1.062,9,2.496,10,0.429,11,0.013,12,1.872,13,1.576,20,0.836,22,0.404,28,1.481,29,1.247,32,0.2,40,0.011,41,0.011,57,3.506,59,3.459,60,3.269,61,2.038,722,4.567,723,4.847,724,5.759,725,5.564,726,5.564,727,5.564,728,2.588,729,4.847,730,5.564]],["title/classes/CreateCommentDto.html",[0,0.064,675,2.712]],["body/classes/CreateCommentDto.html",[0,0.106,2,1.433,3,0.194,4,0.194,5,0.174,7,0.34,8,1.041,9,2.46,10,0.457,11,0.013,12,2.081,13,1.676,20,0.89,22,0.367,28,1.433,29,1.206,32,0.194,40,0.011,41,0.011,57,3.392,59,3.389,60,3.221,61,1.971,66,1.343,107,1.297,652,4.858,653,5.682,675,4.475,731,4.689,732,4.232,733,5.383,734,3.392,735,5.383,736,5.383,737,2.967,738,4.194,739,4.194]],["title/classes/EmailDto.html",[0,0.064,740,2.054]],["body/classes/EmailDto.html",[0,0.122,2,1.192,3,0.161,4,0.161,5,0.145,7,0.283,8,0.925,10,0.374,11,0.013,13,1.372,20,0.728,22,0.326,32,0.271,36,2.588,40,0.009,41,0.009,60,3.692,61,1.639,66,1.64,132,1.639,155,1.369,160,2.148,163,1.826,165,1.688,454,2.279,468,2.279,728,2.082,737,3.692,740,3.012,741,2.659,742,3.236,743,4.476,744,3.009,745,4.476,746,3.564,747,2.821,748,4.175,749,4.619,750,2.279,751,2.279,752,2.637,753,2.279]],["title/injectables/HashPasswordPipe.html",[102,1.038,474,2.917]],["body/injectables/HashPasswordPipe.html",[0,0.084,3,0.189,4,0.189,5,0.17,7,0.332,10,0.332,11,0.014,18,2.806,20,0.646,22,0.361,32,0.189,37,1.351,40,0.011,41,0.011,74,1.177,98,1.218,101,1.447,102,1.686,103,2.246,107,1.023,138,4.131,165,1.498,184,2.341,225,2.005,226,2.522,236,1.724,237,1.606,238,2.443,247,4.739,275,1.724,288,2.674,289,2.075,291,2.674,292,2.804,293,2.693,359,3.53,360,3.309,367,4.407,474,4.739,475,5.154,476,5.154,754,4.575,755,6.556,756,5.252,757,5.711,758,4.575,759,6.556,760,5.252,761,5.252,762,5.252,763,5.252]],["title/interfaces/IAccount.html",[30,2.917,764,1.151]],["body/interfaces/IAccount.html",[3,0.218,4,0.218,5,0.196,7,0.383,8,1.119,9,2.675,10,0.383,11,0.013,12,2.097,22,0.334,28,1.615,29,1.359,30,5.172,32,0.218,40,0.011,41,0.011,764,1.73,765,2.703,766,5.284]],["title/interfaces/IAccountActivationRequest.html",[50,2.917,764,1.151]],["body/interfaces/IAccountActivationRequest.html",[3,0.218,4,0.218,5,0.196,7,0.383,8,1.119,9,2.675,10,0.383,11,0.013,12,2.097,22,0.334,28,1.615,29,1.359,32,0.218,40,0.011,41,0.011,50,5.172,764,1.73,765,2.703,767,5.284]],["title/interfaces/IComment.html",[663,2.917,764,1.151]],["body/interfaces/IComment.html",[3,0.202,4,0.202,5,0.181,7,0.354,8,1.068,9,2.606,10,0.484,11,0.013,12,2.2,22,0.309,28,1.493,29,1.256,32,0.202,40,0.011,41,0.011,66,1.485,107,1.33,652,5.148,653,6.021,654,6.671,660,6.411,663,4.934,764,1.6,765,2.499,768,4.885]],["title/interfaces/IConnect.html",[764,1.151,769,3.172]],["body/interfaces/IConnect.html",[3,0.21,4,0.21,5,0.189,7,0.369,8,1.094,9,2.641,10,0.442,11,0.013,12,2.063,22,0.385,28,1.553,29,1.308,32,0.21,40,0.011,41,0.011,724,5.937,729,5.083,764,1.665,765,2.601,769,5.498,770,5.083]],["title/interfaces/ILogin.html",[764,1.151,771,2.542]],["body/interfaces/ILogin.html",[3,0.2,4,0.2,5,0.179,7,0.351,8,1.061,10,0.428,11,0.013,32,0.275,40,0.011,41,0.011,66,1.686,155,1.697,160,2.233,163,2.019,165,2.233,752,2.473,764,2.177,765,2.473,771,4.274,772,3.731,773,3.497,774,3.497,775,3.497]],["title/interfaces/IMail.html",[764,1.151,776,3.172]],["body/interfaces/IMail.html",[3,0.179,4,0.179,5,0.161,7,0.315,8,0.992,10,0.498,11,0.013,22,0.405,32,0.179,40,0.01,41,0.01,66,1.624,107,1.599,117,2.814,118,2.048,124,2.814,125,2.423,126,3.032,127,2.663,128,3.57,129,2.537,157,3.273,159,3.273,188,2.902,764,1.422,765,2.221,776,4.987,777,4.342]],["title/interfaces/IMessage.html",[764,1.151,778,2.712]],["body/interfaces/IMessage.html",[3,0.213,4,0.213,5,0.191,7,0.374,8,1.102,9,2.653,10,0.445,11,0.013,12,2.075,22,0.326,28,1.575,29,1.326,32,0.213,40,0.011,41,0.011,66,1.52,411,3.626,764,1.687,765,2.637,778,4.739,779,5.153]],["title/interfaces/IPhoneNumber.html",[764,1.151,774,2.542]],["body/interfaces/IPhoneNumber.html",[3,0.203,4,0.203,5,0.183,7,0.357,8,1.073,10,0.357,11,0.013,32,0.276,40,0.011,41,0.011,66,1.677,155,1.729,160,1.956,163,2.204,165,1.956,752,2.519,764,2.19,765,2.519,771,3.561,772,3.799,773,3.561,774,4.321,775,3.561]],["title/interfaces/IRegister.html",[764,1.151,773,2.542]],["body/interfaces/IRegister.html",[3,0.193,4,0.193,5,0.173,7,0.338,8,1.038,10,0.476,11,0.013,32,0.271,40,0.011,41,0.011,66,1.697,155,2.305,160,2.21,163,2.175,165,2.21,752,2.387,764,2.15,765,2.387,771,3.375,772,3.601,773,4.182,774,3.375,775,3.375]],["title/interfaces/IResponse.html",[562,2.542,764,1.151]],["body/interfaces/IResponse.html",[3,0.185,4,0.185,5,0.166,7,0.325,8,1.011,10,0.494,11,0.013,32,0.185,40,0.01,41,0.01,66,1.663,107,1.605,162,3.154,163,2.046,172,3.176,411,3.454,502,5.368,505,5.368,506,5.564,507,4.992,562,4.075,764,1.466,765,2.29,780,4.477,781,7.813]],["title/interfaces/IUser.html",[481,2.397,764,1.151]],["body/interfaces/IUser.html",[3,0.129,4,0.129,5,0.116,7,0.226,8,0.794,10,0.514,11,0.014,22,0.407,32,0.129,36,2.343,40,0.008,41,0.008,44,2.745,45,3.657,66,1.647,107,1.603,117,2.61,118,1.472,119,4.392,120,2.128,121,2.257,122,3.595,123,2.257,124,2.61,125,1.742,126,2.812,127,1.914,128,3.121,129,1.824,130,3.595,131,2.257,132,1.312,134,1.415,135,1.472,155,1.963,157,2.861,159,2.861,160,1.831,162,3.137,163,1.769,165,1.831,172,2.745,177,2.986,178,2.986,188,2.536,195,4.045,203,4.045,448,2.817,481,3.017,764,1.022,765,1.597,782,3.121,783,3.582,784,3.582,785,5.9,786,5.9]],["title/interfaces/IVerifyCode.html",[764,1.151,775,2.542]],["body/interfaces/IVerifyCode.html",[3,0.2,4,0.2,5,0.179,7,0.351,8,1.061,10,0.428,11,0.013,32,0.275,40,0.011,41,0.011,66,1.686,155,1.697,160,1.935,163,2.194,165,1.935,752,3.401,764,2.177,765,2.473,771,3.497,772,3.731,773,3.497,774,3.497,775,4.274]],["title/classes/LoginDto.html",[0,0.064,454,2.054]],["body/classes/LoginDto.html",[0,0.122,2,1.192,3,0.161,4,0.161,5,0.145,7,0.283,8,0.925,10,0.374,11,0.013,13,1.372,20,0.728,22,0.326,32,0.271,36,2.544,40,0.009,41,0.009,60,3.692,61,1.639,66,1.648,132,1.639,155,1.369,160,2.148,163,1.826,165,2.011,454,3.012,468,2.279,728,2.082,734,2.821,737,3.692,740,2.279,741,2.659,742,3.236,746,3.564,747,2.821,748,4.175,749,4.619,750,2.279,751,2.279,752,2.637,753,2.279,787,4.476,788,4.476]],["title/classes/MailDto.html",[0,0.064,789,2.712]],["body/classes/MailDto.html",[0,0.093,2,1.17,3,0.158,4,0.158,5,0.142,7,0.278,8,0.914,10,0.483,11,0.014,13,1.773,19,2.008,20,0.941,22,0.401,32,0.158,40,0.009,41,0.009,60,2.605,61,1.609,66,1.512,107,1.57,117,2.644,118,1.805,124,2.644,125,2.136,126,2.848,127,2.348,128,3.192,129,2.237,157,2.926,159,2.926,188,2.594,728,2.044,737,2.926,738,4.817,739,3.682,746,2.841,789,3.928,790,3.828,791,4.394,792,4.394,793,3.928,794,4.394,795,2.954,796,4.394,797,4.394,798,4.394,799,4.394,800,4.414,801,4.394,802,4.394,803,4.394,804,4.394,805,4.394,806,4.394,807,4.394,808,4.394,809,2.954]],["title/modules/MailerModule.html",[76,1.325,419,2.542]],["body/modules/MailerModule.html",[0,0.084,3,0.189,4,0.189,5,0.17,11,0.013,22,0.412,32,0.189,40,0.011,41,0.011,74,1.177,76,2.346,78,2.341,79,2.341,80,2.553,81,2.553,82,2.341,83,3.475,84,3.475,88,3.187,89,2.553,90,2.553,96,3.337,308,3.999,309,3.687,320,4.129,331,3.53,419,5.119,810,4.575,811,5.252,812,4.575,813,4.575,814,4.91,815,5.252,816,3.894,817,5.252]],["title/injectables/MailerService.html",[102,1.038,814,2.397]],["body/injectables/MailerService.html",[0,0.034,3,0.177,4,0.077,5,0.069,7,0.135,8,0.537,10,0.364,11,0.014,17,1.229,20,0.854,22,0.334,32,0.077,37,1.715,40,0.006,41,0.006,47,2.165,74,0.48,98,1.253,101,1.736,102,0.884,103,0.915,107,0.96,117,0.755,124,0.755,126,0.814,134,1.948,135,2.489,160,2.183,184,0.954,188,0.846,197,1.439,212,1.271,225,1.051,226,2.294,236,1.619,237,1.988,238,0.995,258,2.558,263,3.207,264,1.547,276,1.47,277,2.897,278,2.568,288,2.192,289,1.948,291,1.75,292,1.842,293,2.489,329,3.243,330,1.144,338,1.144,383,2.192,384,1.547,400,2.041,404,3.818,405,1.547,448,1.683,479,3.085,517,1.864,538,1.864,561,1.683,592,4.704,629,4.295,636,2.702,740,2.935,752,2.973,753,2.935,789,3.63,814,2.041,816,1.271,818,1.864,819,5.766,820,3.752,821,4.931,822,4.931,823,4.931,824,4.931,825,4.931,826,4.931,827,2.994,828,2.994,829,2.994,830,2.14,831,2.14,832,2.14,833,2.14,834,2.14,835,2.14,836,2.14,837,2.994,838,2.14,839,3.437,840,2.14,841,2.994,842,2.14,843,2.14,844,3.752,845,2.14,846,3.437,847,1.864,848,1.683,849,2.14,850,1.683,851,1.547,852,2.14,853,2.14,854,2.14,855,2.14,856,2.14,857,2.14,858,2.14,859,2.14,860,2.14,861,2.14,862,2.14,863,1.864,864,2.14,865,2.14,866,2.14,867,2.14,868,2.14,869,2.14,870,2.14,871,2.14,872,4.295,873,1.864,874,1.864,875,2.14,876,2.14,877,3.437,878,4.931,879,3.437,880,5.278,881,5.4,882,3.437,883,2.14,884,2.14,885,3.437,886,2.14,887,2.14,888,1.864,889,3.437,890,2.14,891,2.14,892,2.14,893,4.931,894,2.14,895,2.14,896,2.994,897,2.14,898,3.437,899,1.864,900,2.14,901,4.295,902,2.14,903,5.766,904,2.14,905,2.14,906,2.14,907,2.14,908,5.4,909,6.5,910,2.14,911,2.14,912,5.4,913,5.766,914,2.14,915,2.14,916,2.14,917,2.14,918,6.059,919,4.764,920,2.14,921,2.14,922,4.931,923,4.931,924,3.437,925,2.14,926,2.14,927,2.14,928,2.14,929,2.14,930,2.14,931,3.437,932,3.437,933,2.994,934,3.437,935,3.437,936,3.437,937,4.307,938,2.14,939,4.931,940,2.14,941,4.931,942,3.437,943,3.437,944,2.14,945,2.14,946,2.14,947,2.14,948,2.14,949,2.14,950,2.14,951,2.14,952,2.14,953,2.14,954,2.14,955,3.437,956,2.14,957,2.14,958,2.14,959,2.14,960,2.14,961,2.14,962,2.14,963,3.437,964,2.14,965,2.14,966,2.14,967,2.14,968,2.14,969,2.14,970,2.14,971,2.14,972,2.14,973,2.14,974,2.14,975,2.14,976,2.14,977,2.14,978,2.14,979,2.14,980,2.14,981,2.14]],["title/classes/Message.html",[0,0.064,411,1.877]],["body/classes/Message.html",[0,0.081,2,1.349,3,0.182,4,0.182,5,0.164,7,0.32,8,1.002,9,2.393,10,0.481,11,0.013,12,1.937,13,1.487,14,3.605,15,3.009,16,3.605,17,1.828,18,3.948,19,2.331,20,0.789,22,0.387,23,3.954,24,2.981,25,2.849,26,1.496,27,3.605,28,1.349,29,1.135,32,0.253,34,2.849,37,1.303,40,0.01,41,0.01,66,1.491,275,2.104,411,3.621,778,4.726,982,3.662,983,5.066,984,5.066,985,4.413,986,3.983,987,3.662,988,4.413]],["title/classes/MessageDto.html",[0,0.064,989,2.917]],["body/classes/MessageDto.html",[0,0.107,2,1.466,3,0.198,4,0.198,5,0.178,7,0.348,8,1.056,9,2.485,10,0.426,11,0.013,12,1.86,13,1.566,20,0.831,22,0.402,28,1.466,29,1.234,32,0.198,40,0.011,41,0.011,57,3.47,59,3.437,60,3.254,61,2.017,66,1.362,275,2.216,411,3.396,734,3.47,737,3.009,778,4.908,985,4.797,989,4.88,990,4.797,991,5.507,992,5.507]],["title/classes/MessagesGateway.html",[0,0.064,993,2.712]],["body/classes/MessagesGateway.html",[0,0.057,2,0.952,3,0.129,4,0.129,5,0.116,7,0.226,8,0.793,10,0.444,11,0.014,13,1.177,17,1.682,20,0.89,22,0.388,32,0.129,37,1.516,40,0.008,41,0.008,74,0.801,98,1.571,107,1.319,169,3.118,225,1.552,226,2.809,230,2.972,236,2.223,237,2.071,275,1.665,276,2.169,277,2.261,278,2.004,280,2.084,288,1.821,289,2.004,291,1.821,292,1.53,293,1.469,327,2.011,333,2.124,383,1.821,479,3.683,507,3.41,509,2.812,539,5.531,561,2.812,616,3.116,850,2.812,888,3.116,989,5.229,993,3.41,994,3.116,995,5.895,996,5.895,997,5.895,998,7.787,999,5.073,1000,5.073,1001,5.073,1002,5.073,1003,3.116,1004,5.073,1005,5.895,1006,5.073,1007,3.577,1008,5.073,1009,7.234,1010,3.577,1011,4.419,1012,5.073,1013,3.577,1014,3.577,1015,5.073,1016,3.577,1017,3.577,1018,5.073,1019,3.577,1020,3.577,1021,3.116,1022,3.116,1023,3.577,1024,3.577,1025,3.577,1026,3.577,1027,3.577,1028,5.073,1029,3.577,1030,5.073,1031,3.577,1032,3.577,1033,3.116,1034,3.116,1035,3.577,1036,3.116,1037,3.577,1038,3.577,1039,3.577,1040,3.577,1041,3.577,1042,3.577]],["title/modules/MessagesModule.html",[76,1.325,420,2.712]],["body/modules/MessagesModule.html",[0,0.074,3,0.167,4,0.167,5,0.15,11,0.014,20,0.57,22,0.427,26,1.368,32,0.167,40,0.01,41,0.01,74,1.038,76,2.212,78,2.064,79,2.064,80,2.251,81,2.251,82,2.064,83,2.941,84,3.275,88,2.941,89,2.251,90,2.251,94,2.604,96,3.43,97,2.604,98,1.074,100,3.402,101,1.276,225,1.416,230,3.045,237,1.416,251,2.75,275,1.52,280,1.902,308,3.87,326,3.347,327,2.604,328,4.066,329,4.017,330,2.474,331,3.113,332,3.347,333,2.75,334,3.347,335,3.347,336,3.113,337,3.347,338,2.474,411,2.154,420,5.205,987,4.373,993,5.279,1043,4.034,1044,4.034,1045,4.63,1046,4.63,1047,4.63,1048,4.63,1049,4.63,1050,4.63,1051,4.63]],["title/classes/PhoneNumberDto.html",[0,0.064,750,2.054]],["body/classes/PhoneNumberDto.html",[0,0.122,2,1.192,3,0.161,4,0.161,5,0.145,7,0.283,8,0.925,10,0.374,11,0.013,13,1.372,20,0.728,22,0.326,32,0.271,36,2.588,40,0.009,41,0.009,60,3.692,61,1.639,66,1.64,132,1.639,155,1.369,160,2.011,163,2.02,165,1.688,454,2.279,468,2.279,728,2.082,737,3.692,740,2.279,741,2.659,744,3.009,746,3.564,747,2.821,748,4.175,749,4.619,750,3.012,751,2.279,752,2.637,753,2.279,1052,3.52,1053,4.476,1054,4.476]],["title/injectables/RefreshTokenPipe.html",[102,1.038,484,2.917]],["body/injectables/RefreshTokenPipe.html",[0,0.086,3,0.194,4,0.194,5,0.174,7,0.341,10,0.341,11,0.013,20,0.664,22,0.367,32,0.194,37,1.388,40,0.011,41,0.011,74,1.209,98,1.252,101,1.487,102,1.715,103,2.308,107,1.051,138,4.201,169,2.624,172,3.094,225,2.039,226,2.554,236,1.772,237,1.651,275,1.772,292,2.308,293,2.217,404,4.892,462,4.201,483,3.628,484,4.819,485,5.242,486,5.242,513,4.701,757,5.808,758,4.701,1055,4.701,1056,6.667,1057,5.397,1058,5.397,1059,5.397,1060,5.397]],["title/classes/RegisterDto.html",[0,0.064,468,2.054]],["body/classes/RegisterDto.html",[0,0.12,2,1.122,3,0.152,4,0.152,5,0.136,7,0.266,8,0.889,10,0.454,11,0.013,13,1.666,20,0.884,22,0.313,32,0.266,36,2.567,40,0.009,41,0.009,60,3.669,61,1.543,66,1.65,132,1.543,155,1.966,160,2.111,163,1.98,165,1.963,454,2.145,468,2.893,728,1.96,734,3.58,737,3.669,740,2.145,741,2.503,742,3.046,744,2.832,746,3.492,747,2.655,748,4.051,749,4.526,750,2.145,751,2.145,752,2.532,753,2.145,1052,3.313,1061,4.214,1062,4.214,1063,4.214,1064,4.214,1065,4.214]],["title/classes/RequestDto.html",[0,0.064,62,2.542]],["body/classes/RequestDto.html",[0,0.118,2,1.525,3,0.206,4,0.206,5,0.185,7,0.362,8,1.081,9,1.949,10,0.362,11,0.013,12,2.046,13,1.328,20,0.705,22,0.381,28,1.525,29,1.283,32,0.249,40,0.011,41,0.011,55,3.608,56,4.503,57,3.608,59,3.781,60,3.31,61,2.097,62,4.356,63,6.47,1066,5.727]],["title/guards/RolesGuard.html",[1067,3.172,1068,3.172]],["body/guards/RolesGuard.html",[0,0.08,3,0.182,4,0.182,5,0.163,7,0.319,10,0.404,11,0.014,17,1.442,19,1.546,20,0.788,22,0.407,32,0.182,36,1.601,37,1.646,40,0.01,41,0.01,45,3.111,74,1.133,98,1.484,101,1.763,102,1.646,107,1.247,225,1.957,236,2.101,237,1.546,275,1.659,276,2.162,489,3.654,1068,5.032,1069,5.054,1070,4.403,1071,7.382,1072,5.054,1073,7.78,1074,5.054,1075,6.4,1076,7.382,1077,5.054,1078,5.054,1079,4.403,1080,5.054,1081,3.974,1082,5.054,1083,6.4,1084,5.054,1085,5.054,1086,5.054,1087,5.054,1088,5.054,1089,5.054]],["title/modules/SeedersModule.html",[76,1.325,421,2.712]],["body/modules/SeedersModule.html",[0,0.073,3,0.165,4,0.165,5,0.148,11,0.014,17,1.307,22,0.418,24,2.794,26,1.353,32,0.165,37,1.178,40,0.01,41,0.01,74,1.027,76,2.2,78,2.042,79,2.042,80,2.227,81,2.227,82,2.042,83,3.258,84,3.258,88,2.92,89,2.227,90,2.227,94,2.577,96,2.332,97,2.577,98,1.063,100,2.577,101,1.262,105,1.959,134,1.81,135,1.882,180,3.058,193,3.058,219,3.058,221,3.058,349,5.452,361,2.887,421,5.481,442,3.312,443,3.312,444,3.312,445,3.312,1090,3.991,1091,3.991,1092,3.991,1093,5.452,1094,5.452,1095,4.581,1096,4.581,1097,4.581,1098,4.581]],["title/classes/Student.html",[0,0.064,135,1.658]],["body/classes/Student.html",[0,0.093,1,1.49,2,0.468,3,0.063,4,0.063,5,0.057,7,0.238,8,0.458,10,0.49,11,0.014,12,1.669,13,0.872,14,2.115,15,1.739,16,2.738,17,2.039,18,3.504,19,2.187,20,0.463,22,0.344,23,4.257,24,3.109,25,0.989,26,0.519,27,2.115,28,0.468,29,0.394,32,0.218,34,0.989,35,1.182,36,1.542,37,1.127,40,0.005,41,0.005,42,0.855,44,0.752,45,2.554,46,2.342,47,2.369,66,1.511,73,1.968,98,0.679,101,0.807,105,2.082,106,1.045,107,0.854,108,2.116,110,3.798,111,3.519,112,3.519,113,1.271,115,1.108,116,1.271,117,1.718,118,0.723,119,2.891,120,1.045,121,1.108,122,2.366,123,1.108,124,1.718,125,0.855,126,2.493,127,0.94,128,2.708,129,0.895,130,2.366,131,1.108,132,0.644,133,0.855,134,2.393,135,2.694,136,2.116,137,1.271,138,1.844,139,2.116,140,3.169,141,3.169,142,4.968,143,3.169,144,3.169,145,3.169,146,3.169,147,3.169,148,3.169,149,3.169,150,3.169,151,3.169,152,3.169,153,1.271,154,3.798,155,0.895,156,1.182,157,0.784,158,1.271,159,0.784,160,1.073,161,2.116,162,2.483,163,0.485,164,1.271,165,0.835,166,1.271,167,4.74,168,1.182,169,0.855,170,1.271,171,1.271,172,0.752,173,2.718,174,2.718,175,1.271,176,2.116,177,0.818,178,0.818,179,3.169,180,0.895,181,1.182,182,2.115,183,4.027,184,1.305,185,1.968,186,1.968,187,2.116,188,1.923,189,2.528,190,2.116,191,3.272,192,2.116,193,0.895,194,1.182,195,1.844,196,1.271,197,1.182,198,1.271,199,1.271,200,1.271,201,1.271,202,1.271,203,1.844,204,1.271,205,0.94,206,0.989,207,1.182,208,1.182,209,1.271,210,1.271,211,1.182,212,1.739,213,1.271,214,1.271,215,1.271,216,1.108,217,1.108,218,1.182,219,0.895,220,1.182,221,0.895,222,1.182,1099,1.759,1100,1.759,1101,1.759]],["title/injectables/StudentSeeder.html",[102,1.038,1093,2.712]],["body/injectables/StudentSeeder.html",[0,0.055,3,0.124,4,0.124,5,0.111,7,0.217,10,0.311,11,0.014,17,0.98,19,1.763,20,0.709,22,0.416,26,1.014,29,0.769,32,0.124,36,1.561,37,1.715,40,0.008,41,0.008,44,1.469,74,0.769,98,0.797,102,1.267,103,1.469,107,0.669,117,2.449,118,1.411,124,2.449,125,1.669,126,2.639,127,1.835,128,1.669,129,1.748,132,1.258,133,1.669,135,2.587,155,2.039,157,2.972,159,2.972,160,1.98,163,1.837,165,1.902,177,1.597,178,1.597,184,1.53,188,2.634,212,2.927,225,1.507,226,2.449,230,2.851,236,1.127,237,1.507,245,2.308,275,1.127,276,2.107,277,1.53,278,1.357,280,1.411,288,1.748,289,2.277,291,1.748,292,1.469,293,1.411,351,4.951,352,2.482,353,3.74,355,3.312,358,2.04,359,2.308,360,2.164,361,2.164,362,2.308,365,2.308,367,3.312,369,2.482,376,3.874,379,2.7,380,2.04,381,2.308,382,2.482,383,2.934,384,2.482,385,2.482,614,2.7,933,2.991,1093,3.312,1102,2.991,1103,3.434,1104,3.434,1105,3.434,1106,3.434,1107,3.434,1108,3.434,1109,3.434,1110,3.434,1111,3.434,1112,6.297,1113,3.434,1114,3.434,1115,3.434,1116,3.434,1117,3.434,1118,3.434,1119,3.434,1120,3.434,1121,4.293,1122,2.991,1123,3.434,1124,2.991,1125,2.991,1126,3.434,1127,3.434,1128,3.434,1129,3.434,1130,3.434,1131,2.991,1132,3.434,1133,3.434,1134,3.434,1135,3.434,1136,3.434,1137,3.434,1138,3.434,1139,3.434,1140,3.434,1141,3.434,1142,4.928,1143,4.928,1144,3.434,1145,4.928,1146,4.928,1147,3.434,1148,5.763,1149,3.434,1150,3.434,1151,3.434,1152,3.434,1153,3.434,1154,3.434,1155,3.434,1156,2.991,1157,3.434]],["title/classes/Tutor.html",[0,0.064,134,1.594]],["body/classes/Tutor.html",[0,0.09,1,1.417,2,0.441,3,0.06,4,0.06,5,0.054,7,0.227,8,0.435,10,0.494,11,0.014,12,1.63,13,1.257,14,3.047,15,2.507,16,2.647,17,2.011,18,3.572,19,2.198,20,0.667,22,0.337,23,4.213,24,3.054,25,0.931,26,0.489,27,2.025,28,0.441,29,0.371,32,0.213,34,0.931,35,1.113,36,1.491,37,1.085,40,0.004,41,0.004,42,0.805,44,0.708,45,2.478,46,2.515,47,2.269,66,1.503,73,1.871,98,0.646,101,0.767,105,2.013,106,0.984,107,0.993,108,2.012,110,3.917,111,3.402,112,3.402,113,1.197,115,1.043,116,1.197,117,1.661,118,0.68,119,3.631,120,0.984,121,1.043,122,2.972,123,1.043,124,1.661,125,0.805,126,1.938,127,0.885,128,2.634,129,0.843,130,2.972,131,1.043,132,0.606,133,0.805,134,2.542,135,2.431,136,2.012,137,1.197,138,1.754,139,2.012,140,3.051,141,3.051,142,4.91,143,3.051,144,3.051,145,3.051,146,3.051,147,3.051,148,3.051,149,3.051,150,3.051,151,3.051,152,3.051,153,1.197,154,3.684,155,0.851,156,1.113,157,0.738,158,1.197,159,0.738,160,1.027,161,2.012,162,2.867,163,0.456,164,1.197,165,0.794,166,1.197,167,4.908,168,1.113,169,0.805,170,1.197,171,1.197,172,0.708,173,2.603,174,2.603,175,1.197,176,2.012,177,0.77,178,0.77,179,3.051,180,0.843,181,1.113,182,2.025,183,4.111,184,0.738,185,1.113,186,1.113,187,1.197,188,1.1,189,2.42,190,1.197,191,1.871,192,1.197,193,0.843,194,1.113,195,2.965,196,2.012,197,1.871,198,2.012,199,2.012,200,2.012,201,2.012,202,2.012,203,2.965,204,2.012,205,1.924,206,1.565,207,1.871,208,1.871,209,2.012,210,2.012,211,1.113,212,2.795,213,2.012,214,2.012,215,2.012,216,1.754,217,1.754,218,1.871,219,0.843,220,1.113,221,0.843,222,1.113,1158,1.656,1159,1.656,1160,1.656,1161,1.656,1162,1.656,1163,1.656,1164,1.656]],["title/injectables/TutorSeeder.html",[102,1.038,1094,2.712]],["body/injectables/TutorSeeder.html",[0,0.05,3,0.114,4,0.114,5,0.102,7,0.2,10,0.293,11,0.014,17,0.903,19,1.683,20,0.677,22,0.419,26,0.935,29,0.709,32,0.114,36,1.472,37,1.66,40,0.007,41,0.007,44,1.354,74,0.709,98,0.734,102,1.195,103,1.354,107,0.617,117,2.382,118,1.301,119,4.008,120,1.881,121,1.995,122,3.28,123,1.995,124,2.382,125,1.539,128,1.539,129,1.612,130,3.28,131,1.995,132,1.16,133,1.539,134,2.395,155,1.975,157,2.877,159,2.877,160,1.925,163,1.779,165,1.842,177,1.473,178,1.473,184,1.411,191,3.123,195,4.068,203,4.068,205,3.45,211,3.123,216,1.995,217,2.927,225,1.421,226,2.382,230,2.772,236,1.039,237,1.421,245,2.128,275,1.039,276,1.987,277,1.411,278,1.251,280,1.301,288,1.612,289,2.174,291,1.612,292,1.354,293,1.301,351,4.766,352,2.289,353,3.601,355,3.123,358,1.881,359,2.128,360,1.995,361,1.995,362,2.128,365,2.128,367,3.123,369,2.289,376,3.653,379,2.489,380,1.881,381,2.128,382,2.289,383,2.802,384,2.289,385,2.289,612,2.758,619,2.489,1094,3.123,1121,4.047,1122,2.758,1124,5.281,1125,5.281,1131,2.758,1156,2.758,1165,2.758,1166,3.166,1167,3.166,1168,3.166,1169,3.166,1170,3.166,1171,3.166,1172,3.166,1173,3.166,1174,3.166,1175,6.062,1176,4.646,1177,4.646,1178,4.646,1179,3.166,1180,3.166,1181,3.166,1182,3.166,1183,3.166,1184,3.166,1185,3.166,1186,3.166,1187,3.166,1188,3.166,1189,3.166,1190,3.166,1191,3.166,1192,3.166,1193,3.166,1194,3.166,1195,4.646,1196,3.166,1197,3.166,1198,3.166,1199,3.166,1200,3.166,1201,3.166,1202,3.166,1203,2.758,1204,3.166,1205,3.166,1206,3.166,1207,4.646,1208,4.646,1209,3.166,1210,5.503,1211,3.166,1212,3.166,1213,3.166,1214,3.166,1215,3.166,1216,3.166,1217,3.166,1218,3.166,1219,3.166,1220,3.166,1221,3.166,1222,3.166,1223,3.166]],["title/controllers/TwilioController.html",[68,1.798,1224,2.917]],["body/controllers/TwilioController.html",[0,0.082,3,0.185,4,0.185,5,0.166,7,0.325,10,0.325,11,0.013,13,1.192,20,0.796,22,0.356,32,0.185,40,0.01,41,0.01,66,1.577,68,2.29,70,2.29,72,3.238,74,1.151,98,1.192,101,1.416,107,1.001,169,3.144,225,1.978,226,2.498,230,3.21,236,1.687,237,1.978,238,2.39,251,3.052,258,4.203,261,3.455,275,1.687,278,2.03,280,2.111,489,3.715,634,5.839,1224,4.675,1225,4.477,1226,4.04,1227,6.165,1228,4.477,1229,6.467,1230,5.139,1231,5.634,1232,5.139,1233,4.203,1234,4.477,1235,5.139,1236,5.139,1237,5.139]],["title/modules/TwilioModule.html",[76,1.325,422,2.542]],["body/modules/TwilioModule.html",[0,0.079,3,0.178,4,0.178,5,0.16,11,0.013,20,0.608,22,0.417,32,0.178,40,0.01,41,0.01,70,2.811,74,1.107,76,2.281,78,2.201,79,2.201,80,2.401,81,2.401,82,2.201,83,3.377,84,3.377,88,3.066,89,2.401,90,2.401,96,3.21,225,1.511,230,3.107,237,1.511,251,2.933,275,1.621,280,2.029,308,3.937,309,3.547,320,3.883,331,3.32,422,5.064,816,3.746,1224,5.022,1233,4.869,1234,4.302,1238,4.302,1239,4.939,1240,4.302,1241,4.302,1242,4.939,1243,4.939,1244,4.939,1245,4.939]],["title/injectables/TwilioService.html",[102,1.038,1233,2.397]],["body/injectables/TwilioService.html",[0,0.037,3,0.083,4,0.083,5,0.074,7,0.145,8,0.569,10,0.376,11,0.014,17,1.465,19,0.704,20,0.905,22,0.328,32,0.083,37,2.026,40,0.006,41,0.006,66,1.201,74,0.515,98,1.191,101,1.917,102,0.936,103,0.984,107,1.001,156,1.546,162,1.025,163,1.64,169,1.77,225,1.113,226,2.856,230,2.445,236,1.686,237,2.196,238,2.768,251,1.366,258,1.366,263,3.291,264,1.663,275,0.755,276,1.557,277,3.523,278,2.351,280,0.945,289,2.934,292,2.197,293,2.656,329,3.506,330,1.229,338,1.229,380,1.366,383,1.171,400,2.162,405,1.663,411,1.693,462,4.296,479,3.03,504,1.809,507,1.546,510,1.809,634,4.038,635,4.474,642,2.004,750,3.174,751,3.174,752,2.779,816,1.366,820,3.935,844,3.935,848,1.809,850,1.809,851,1.663,863,2.004,872,3.935,873,2.004,880,4.875,896,3.935,899,2.004,1011,3.935,1036,2.004,1226,3.552,1227,3.171,1228,3.171,1231,3.171,1233,2.162,1246,2.004,1247,5.136,1248,5.136,1249,5.136,1250,5.136,1251,5.136,1252,5.136,1253,5.136,1254,5.136,1255,5.136,1256,3.171,1257,3.935,1258,2.3,1259,3.64,1260,2.3,1261,2.3,1262,2.3,1263,2.3,1264,2.3,1265,2.3,1266,2.3,1267,2.3,1268,2.3,1269,2.3,1270,2.3,1271,3.171,1272,2.3,1273,2.004,1274,2.3,1275,2.3,1276,2.3,1277,5.596,1278,2.3,1279,5.136,1280,2.3,1281,5.596,1282,2.3,1283,5.596,1284,2.3,1285,5.136,1286,3.64,1287,2.3,1288,3.64,1289,2.3,1290,3.64,1291,2.3,1292,2.3,1293,2.3,1294,3.64,1295,2.3,1296,4.517,1297,2.3,1298,2.3,1299,2.3,1300,2.3,1301,2.3,1302,2.3,1303,2.3,1304,2.3,1305,2.3,1306,2.3,1307,2.3,1308,2.3,1309,2.004,1310,3.64,1311,2.3,1312,2.3,1313,2.3,1314,2.3,1315,2.3,1316,2.3,1317,2.3,1318,1.809,1319,2.3,1320,2.3,1321,2.3,1322,2.3,1323,2.3,1324,2.3,1325,3.64]],["title/classes/UpdateAdminDto.html",[0,0.064,1326,2.542]],["body/classes/UpdateAdminDto.html",[0,0.106,2,0.905,3,0.122,4,0.122,5,0.11,7,0.215,8,0.765,10,0.487,11,0.013,12,0.937,13,1.79,19,1.04,20,0.95,22,0.316,28,0.905,29,0.762,32,0.226,40,0.008,41,0.008,44,2.452,45,3.363,59,2.492,61,1.246,66,1.638,107,1.595,117,2.441,118,1.397,122,1.654,124,2.023,126,1.293,130,1.654,155,1.753,160,1.635,162,2.181,163,1.58,165,1.635,172,2.452,177,2.666,178,2.666,182,3.526,188,1.344,205,1.818,206,1.913,728,1.582,737,3.361,738,5.114,739,4.186,746,2.379,793,4.792,795,2.286,800,2.286,809,2.286,1326,3.084,1327,2.286,1328,4.659,1329,4.144,1330,4.144,1331,3.401,1332,3.401,1333,3.401,1334,2.459,1335,5.842,1336,2.674,1337,2.674,1338,4.144,1339,2.674,1340,2.674,1341,2.674,1342,2.674,1343,2.674,1344,2.674,1345,2.674,1346,4.144,1347,4.532,1348,2.143,1349,2.143,1350,2.459,1351,2.459]],["title/classes/UpdateStudentDto.html",[0,0.064,1348,2.542]],["body/classes/UpdateStudentDto.html",[0,0.106,2,0.923,3,0.125,4,0.125,5,0.112,7,0.219,8,0.776,10,0.484,11,0.013,12,0.955,13,1.778,19,1.06,20,0.943,22,0.319,28,0.923,29,0.777,32,0.228,40,0.008,41,0.008,44,2.478,45,3.385,59,2.526,61,1.27,66,1.636,107,1.589,117,2.457,118,1.424,122,1.686,124,1.224,126,2.203,130,1.686,155,1.772,160,1.653,162,2.211,163,1.597,165,1.653,172,2.478,177,2.695,178,2.695,182,3.557,188,2.289,205,1.853,206,1.95,728,1.613,732,2.726,737,3.375,738,5.125,739,4.217,746,2.412,793,4.499,795,2.331,800,2.331,809,2.331,1326,2.185,1327,2.331,1328,4.674,1329,2.506,1330,2.506,1334,2.506,1335,5.869,1336,2.726,1337,2.726,1338,4.188,1339,2.726,1340,2.726,1341,2.726,1342,2.726,1343,2.726,1344,2.726,1345,2.726,1346,4.188,1347,4.572,1348,3.126,1349,2.185,1350,2.506,1351,2.506,1352,3.467,1353,3.467]],["title/classes/UpdateTutorDto.html",[0,0.064,1349,2.542]],["body/classes/UpdateTutorDto.html",[0,0.103,2,0.855,3,0.116,4,0.116,5,0.104,7,0.203,8,0.734,10,0.494,11,0.013,12,1.294,13,1.815,19,1.436,20,0.963,22,0.306,28,0.855,29,0.72,32,0.22,40,0.008,41,0.008,44,2.374,45,3.298,59,2.391,61,1.177,66,1.627,107,1.607,117,2.394,118,1.32,122,2.698,124,1.134,126,1.222,130,2.698,155,1.698,160,1.583,162,2.721,163,1.529,165,1.583,172,2.374,177,2.581,178,2.581,182,3.434,188,1.27,205,2.966,206,3.121,728,1.495,732,3.693,737,3.318,738,5.08,739,4.092,746,2.283,793,4.366,795,2.16,800,2.16,809,2.16,1326,2.025,1327,2.16,1328,4.615,1329,2.323,1330,2.323,1334,2.323,1335,5.76,1336,2.527,1337,2.527,1338,4.012,1339,2.527,1340,2.527,1341,2.527,1342,2.527,1343,2.527,1344,2.527,1345,2.527,1346,4.012,1347,4.413,1348,2.025,1349,2.959,1350,4.012,1351,4.012,1354,3.213,1355,3.213,1356,4.696,1357,3.213,1358,3.213,1359,3.213,1360,3.213,1361,3.213]],["title/classes/UpdateUserDto.html",[0,0.064,1328,2.397]],["body/classes/UpdateUserDto.html",[0,0.109,2,0.993,3,0.134,4,0.134,5,0.121,7,0.236,8,0.817,10,0.48,11,0.013,12,1.028,13,1.761,19,1.141,20,0.935,22,0.332,28,0.993,29,0.836,32,0.235,40,0.008,41,0.008,44,2.58,45,3.467,59,2.661,61,1.367,66,1.638,107,1.581,117,2.517,118,1.533,122,1.814,124,1.317,126,1.419,130,1.814,155,1.845,160,1.721,162,2.33,163,1.662,165,1.721,172,2.58,177,2.806,178,2.806,182,3.393,188,1.474,205,1.994,206,2.099,728,1.736,737,3.428,738,5.166,739,4.335,746,2.541,793,4.394,795,2.508,800,2.508,809,2.508,1326,2.351,1327,2.508,1328,4.087,1329,2.697,1330,2.697,1334,2.697,1338,4.36,1346,4.36,1347,4.725,1348,2.351,1349,2.351,1350,2.697,1351,2.697,1362,3.732,1363,3.732,1364,3.732,1365,3.732,1366,3.732,1367,3.732,1368,3.732,1369,3.732,1370,3.732]],["title/classes/User.html",[0,0.064,17,1.151]],["body/classes/User.html",[0,0.088,1,1.748,2,0.413,3,0.056,4,0.056,5,0.05,7,0.286,8,0.412,10,0.496,11,0.014,12,1.524,13,1.493,14,3.619,16,2.276,17,2.124,18,3.504,19,2.251,20,0.792,22,0.329,23,4.165,24,2.993,25,0.873,26,0.458,27,1.931,28,0.413,29,0.348,32,0.207,34,0.873,35,1.043,36,1.89,37,1.041,40,0.004,41,0.004,42,0.755,44,1.469,45,3.061,46,2.808,47,3.105,66,1.578,73,1.772,98,0.939,101,0.726,105,1.939,106,0.922,107,1.277,108,1.905,110,3.277,111,2.926,112,2.926,113,1.122,115,0.978,116,1.122,117,2.105,118,0.638,119,2.693,120,0.922,121,0.978,122,2.204,123,0.978,124,2.105,125,0.755,126,1.874,127,0.829,128,2.204,129,0.79,130,2.204,131,0.978,132,0.568,133,0.755,134,2.184,135,2.272,136,1.905,137,1.122,138,1.66,139,1.905,140,2.926,141,2.926,142,4.845,143,2.926,144,2.926,145,2.926,146,2.926,147,2.926,148,2.926,149,2.926,150,2.926,151,2.926,152,2.926,153,1.122,154,4.552,155,1.387,156,1.772,157,1.531,158,1.905,159,1.531,160,1.499,161,2.926,162,2.569,163,0.946,164,1.905,165,1.293,166,1.905,167,4.651,168,1.772,169,1.281,170,1.905,171,1.905,172,1.469,173,3.562,174,3.562,175,1.905,176,2.926,177,1.597,178,1.597,179,2.926,180,0.79,181,1.043,182,1.931,183,3.277,184,0.692,185,1.043,186,1.043,187,1.122,188,1.041,189,1.772,190,1.122,191,1.772,192,1.122,193,0.79,194,1.043,195,1.66,196,1.122,197,1.043,198,1.122,199,1.122,200,1.122,201,1.122,202,1.122,203,1.66,204,1.122,205,0.829,206,0.873,207,1.043,208,1.043,209,1.122,210,1.122,211,1.043,212,1.565,213,1.122,214,1.122,215,1.122,216,0.978,217,0.978,218,1.043,219,0.79,220,1.043,221,0.79,222,1.043,1371,1.552,1372,1.552,1373,1.552,1374,1.552,1375,1.552,1376,1.552,1377,1.552,1378,1.552,1379,1.552,1380,1.552,1381,1.552,1382,1.552,1383,1.552]],["title/controllers/UsersController.html",[68,1.798,1384,2.917]],["body/controllers/UsersController.html",[0,0.05,3,0.114,4,0.114,5,0.102,7,0.2,9,1.579,10,0.426,11,0.014,12,1.515,13,1.564,20,0.858,22,0.419,28,0.842,29,0.708,32,0.114,36,1.002,37,0.813,40,0.007,41,0.007,68,1.409,70,1.409,72,1.992,74,0.708,98,1.564,101,1.858,107,1.314,117,1.638,124,1.638,126,1.765,132,1.158,157,2.068,159,2.068,188,1.833,225,1.419,226,2.755,230,2.771,236,2.214,237,2.132,238,2.818,245,2.125,251,1.878,258,3.266,261,2.125,263,2.799,268,2.285,269,2.754,275,1.038,276,1.352,277,2.451,278,2.172,280,1.299,289,2.549,338,1.689,404,4.392,462,2.924,471,4.043,481,1.878,483,2.125,562,1.992,685,2.754,722,4.685,740,3.434,750,3.548,751,3.548,752,3.186,753,3.434,814,3.598,816,1.878,827,4.043,829,4.043,837,2.754,841,2.754,848,2.486,851,3.355,1233,3.598,1256,4.79,1257,4.79,1271,2.754,1273,2.754,1384,3.355,1385,2.754,1386,4.043,1387,4.79,1388,2.754,1389,3.162,1390,3.162,1391,2.754,1392,4.641,1393,3.162,1394,3.162,1395,4.641,1396,3.162,1397,6.058,1398,4.641,1399,3.162,1400,4.641,1401,3.162,1402,4.641,1403,3.162,1404,2.754,1405,2.754,1406,2.754,1407,3.162,1408,2.754,1409,2.754,1410,3.162,1411,3.162,1412,3.162,1413,3.162,1414,3.162,1415,3.162,1416,3.162,1417,3.162,1418,3.162,1419,3.162,1420,3.162,1421,3.162,1422,3.162,1423,2.754,1424,3.162]],["title/modules/UsersModule.html",[76,1.325,309,2.269]],["body/modules/UsersModule.html",[0,0.06,3,0.135,4,0.135,5,0.121,10,0.237,11,0.014,17,1.072,20,0.646,22,0.429,24,2.443,26,1.11,32,0.135,37,0.966,40,0.008,41,0.008,70,2.341,74,0.842,76,1.988,78,1.675,79,1.675,80,1.827,81,1.827,82,1.675,83,2.944,84,2.944,88,2.553,89,1.827,90,1.827,94,2.113,96,3.338,97,2.113,98,1.218,100,3.405,101,1.035,105,1.607,107,0.732,134,1.485,135,1.544,180,2.674,193,2.674,219,2.674,221,2.674,225,1.149,230,2.834,236,1.234,237,1.606,251,3.12,263,4,275,1.234,280,1.544,308,3.639,309,4.277,311,3.273,312,4.575,313,5.711,315,4.575,317,4.575,318,3.273,322,2.526,323,2.716,324,2.716,325,3.273,326,2.716,327,2.113,328,4.07,329,4.126,330,2.008,331,2.526,332,3.797,333,3.12,334,2.716,335,3.797,336,3.531,337,2.716,338,2.806,339,2.954,340,2.954,343,3.273,344,3.273,345,3.273,347,3.273,419,3.309,422,3.309,442,2.716,443,2.716,444,2.716,445,2.716,816,3.597,1384,4.377,1404,3.273,1425,3.273,1426,3.273,1427,3.273,1428,3.758,1429,3.758,1430,3.758,1431,3.758,1432,3.758,1433,3.273,1434,3.758,1435,3.758,1436,3.758,1437,3.758,1438,3.758]],["title/injectables/UsersService.html",[102,1.038,263,2.054]],["body/injectables/UsersService.html",[0,0.036,3,0.082,4,0.082,5,0.074,7,0.145,9,2.021,10,0.393,11,0.014,12,1.636,17,2.095,19,1.109,20,0.794,22,0.405,26,0.676,28,0.609,29,0.513,32,0.082,36,2.157,37,1.844,40,0.006,41,0.006,66,1.426,74,0.513,98,1.443,101,1.636,102,0.932,103,0.978,107,1.212,117,2.345,118,0.94,124,2.531,125,1.112,126,2.527,127,1.223,128,2.49,129,1.165,132,0.838,133,1.112,134,1.432,157,2.488,159,2.488,160,1.694,162,2.647,163,1.24,165,0.653,172,0.978,184,1.02,188,2.205,212,2.153,225,1.109,226,2.714,229,3.158,230,2.44,236,2.043,237,1.903,238,2.382,241,3.158,242,5.42,243,5.789,245,3.992,249,2.437,263,1.845,275,0.751,276,1.55,277,1.616,278,1.432,280,0.94,288,1.845,289,2.458,291,1.845,292,2.76,293,2.73,295,1.993,338,1.223,352,1.654,353,3.042,355,2.437,358,1.359,362,1.538,365,2.437,380,2.674,383,1.845,399,4.026,400,3.316,405,1.654,411,2.382,462,3.227,481,1.359,502,3.702,505,3.702,562,1.442,597,1.993,614,1.799,619,4.026,722,4.182,724,1.654,789,3.026,814,3.833,816,1.359,828,3.158,851,1.654,901,1.993,919,4.389,1328,3.833,1386,3.922,1387,3.922,1388,1.993,1391,1.993,1405,1.993,1406,1.993,1408,1.993,1409,1.993,1433,1.993,1439,1.993,1440,3.625,1441,3.625,1442,4.502,1443,2.288,1444,2.288,1445,2.288,1446,3.625,1447,2.288,1448,3.625,1449,2.288,1450,2.288,1451,2.288,1452,2.288,1453,2.288,1454,2.288,1455,2.288,1456,2.288,1457,4.502,1458,2.288,1459,2.288,1460,2.288,1461,2.288,1462,2.288,1463,2.288,1464,3.625,1465,2.288,1466,3.625,1467,4.502,1468,2.288,1469,2.288,1470,2.288,1471,2.288,1472,2.288,1473,2.288]],["title/injectables/VerifyAccessTokenMiddleware.html",[102,1.038,322,2.712]],["body/injectables/VerifyAccessTokenMiddleware.html",[0,0.072,3,0.162,4,0.162,5,0.145,7,0.284,10,0.375,11,0.014,20,0.73,22,0.389,32,0.162,37,1.708,40,0.01,41,0.01,74,1.007,98,1.376,102,1.526,103,1.922,107,1.156,169,3.433,225,1.815,226,2.344,236,1.948,237,1.375,275,1.476,276,2.537,277,2.644,278,2.344,288,2.288,289,2.344,291,2.288,292,2.537,293,2.437,322,3.988,323,4.8,324,5.104,327,2.528,333,2.67,383,2.288,400,2.67,404,4.751,455,6.698,479,3.914,483,3.022,509,3.534,539,5.928,573,5.168,1003,3.916,1033,3.916,1034,3.916,1423,3.916,1474,3.916,1475,5.932,1476,4.495,1477,5.932,1478,7.061,1479,7.061,1480,4.495,1481,5.932,1482,4.495,1483,4.495,1484,4.495,1485,5.932,1486,4.495]],["title/classes/VerifyEmailCodeDto.html",[0,0.064,753,2.054]],["body/classes/VerifyEmailCodeDto.html",[0,0.122,2,1.167,3,0.158,4,0.158,5,0.142,7,0.277,8,0.913,10,0.414,11,0.013,13,1.521,20,0.807,22,0.322,32,0.269,36,2.581,40,0.009,41,0.009,60,3.684,61,1.606,66,1.644,132,1.606,155,1.341,160,2.136,163,1.807,165,1.665,454,2.233,468,2.233,728,2.04,734,2.763,737,3.684,740,2.233,741,2.605,742,3.17,744,2.948,746,3.54,747,2.763,748,4.133,749,4.588,750,2.233,751,2.233,752,3.117,753,2.971,1487,4.385,1488,4.385,1489,4.385]],["title/classes/VerifyPhoneNumberCodeDto.html",[0,0.064,751,2.054]],["body/classes/VerifyPhoneNumberCodeDto.html",[0,0.122,2,1.167,3,0.158,4,0.158,5,0.142,7,0.277,8,0.913,10,0.414,11,0.013,13,1.521,20,0.807,22,0.322,32,0.269,36,2.581,40,0.009,41,0.009,60,3.684,61,1.606,66,1.644,132,1.606,155,1.341,160,1.995,163,2.006,165,1.665,454,2.233,468,2.233,728,2.04,734,2.763,737,3.684,740,2.233,741,2.605,744,2.948,746,3.54,747,2.763,748,4.133,749,4.588,750,2.233,751,2.971,752,3.117,753,2.233,1052,3.448,1490,4.385,1491,4.385,1492,4.385]],["title/coverage.html",[1493,4.806]],["body/coverage.html",[0,0.128,1,1.375,5,0.087,6,3.617,10,0.402,11,0.014,17,0.771,30,1.953,33,2.124,38,1.953,40,0.007,41,0.007,42,1.313,43,3.617,50,1.953,52,1.953,53,1.816,55,1.702,56,3.243,62,1.702,64,2.124,65,2.353,68,2.834,69,1.953,71,2.353,82,1.204,87,1.816,102,1.915,104,2.353,105,1.155,106,4.152,133,1.313,134,1.067,135,1.11,180,1.375,193,1.375,219,1.375,221,1.375,223,1.953,224,2.353,263,1.375,266,1.702,268,1.953,293,1.11,322,1.816,323,1.953,324,1.953,349,1.816,350,2.353,386,2.353,411,1.256,446,1.953,447,2.353,454,1.375,468,1.375,474,1.953,475,2.124,476,2.124,479,1.375,481,1.605,484,1.953,485,2.124,486,2.124,529,2.353,562,1.702,650,1.816,651,3.617,663,1.953,665,1.953,666,1.953,668,1.953,669,2.353,675,1.816,686,1.702,704,2.353,722,1.816,723,2.353,731,2.353,740,1.375,741,3.777,750,1.375,751,1.375,753,1.375,754,2.353,764,2.098,766,2.353,767,2.353,768,2.353,769,2.124,770,2.353,771,1.702,772,3.765,773,1.702,774,1.702,775,1.702,776,2.124,777,2.353,778,1.816,779,2.353,780,2.353,782,2.353,789,1.816,790,2.353,814,1.605,818,2.353,919,6.645,982,3.617,986,2.124,987,1.953,989,1.953,990,2.353,993,1.816,994,2.353,1055,2.353,1067,2.124,1068,2.124,1070,2.353,1081,2.124,1093,1.816,1094,1.816,1102,2.353,1165,2.353,1224,1.953,1225,2.353,1233,1.605,1246,2.353,1326,1.702,1327,3.765,1328,1.605,1348,1.702,1349,1.702,1384,1.953,1385,2.353,1439,2.353,1474,2.353,1493,2.353,1494,2.701,1495,2.701,1496,2.701,1497,2.353,1498,7.252,1499,2.353,1500,7.805,1501,2.353,1502,2.353,1503,7.523,1504,5.004,1505,6.99,1506,2.353,1507,2.701,1508,6.032,1509,5.601,1510,2.701,1511,4.125,1512,6.359,1513,2.701,1514,2.701,1515,5.601,1516,4.125,1517,4.125,1518,2.701,1519,2.701,1520,2.701,1521,2.701,1522,2.701,1523,4.125,1524,2.701,1525,2.701,1526,2.701,1527,2.701,1528,2.701,1529,2.701,1530,2.701]],["title/dependencies.html",[79,2.164,1531,2.931]],["body/dependencies.html",[0,0.096,11,0.014,26,1.365,28,1.23,29,1.035,40,0.01,41,0.01,61,1.692,74,1.035,79,2.059,272,4.025,327,2.599,330,2.469,360,2.911,385,3.34,483,4.061,565,4.025,566,4.025,847,4.025,1021,4.025,1022,5.262,1079,4.025,1226,4.749,1309,4.025,1532,6.73,1533,4.621,1534,6.041,1535,4.621,1536,4.621,1537,4.621,1538,7.406,1539,4.621,1540,4.621,1541,4.621,1542,4.621,1543,4.621,1544,4.621,1545,4.621,1546,6.041,1547,4.621,1548,4.621,1549,4.621,1550,4.621,1551,4.621,1552,4.621,1553,4.621,1554,4.621,1555,4.621,1556,4.621,1557,4.621,1558,4.621,1559,4.621,1560,4.621,1561,4.621,1562,4.621,1563,4.621,1564,4.621,1565,4.621,1566,4.621,1567,4.621,1568,4.621,1569,4.621,1570,4.621,1571,4.621,1572,6.041,1573,4.621,1574,4.621,1575,4.621,1576,4.621,1577,6.73,1578,4.621,1579,4.621,1580,4.621,1581,4.621,1582,4.621,1583,4.621,1584,4.621,1585,4.621,1586,4.621,1587,4.621,1588,4.621,1589,4.621,1590,4.621,1591,4.621,1592,4.621,1593,4.621,1594,4.621]],["title/miscellaneous/enumerations.html",[1595,1.892,1596,4.23]],["body/miscellaneous/enumerations.html",[7,0.152,11,0.014,36,1.193,40,0.006,41,0.006,105,1.61,117,1.329,119,2.236,120,1.426,122,1.83,124,1.329,126,2.791,128,1.83,130,1.83,134,1.487,135,1.547,184,1.07,185,1.613,186,2.53,189,2.53,207,2.53,208,2.53,216,1.512,217,4.134,218,5.209,247,6.163,249,4.411,571,1.887,724,3.801,874,2.091,1203,2.091,1595,1.35,1596,2.091,1597,2.4,1598,2.4,1599,2.4,1600,2.4,1601,2.4,1602,2.4,1603,2.4,1604,2.4,1605,3.764,1606,2.4,1607,2.4,1608,2.4,1609,3.764,1610,6.561,1611,5.716,1612,2.4,1613,2.4,1614,3.764,1615,2.4,1616,2.4,1617,3.764,1618,2.4,1619,2.4,1620,3.764,1621,2.4,1622,2.4,1623,3.764,1624,2.4,1625,2.4,1626,3.764,1627,2.4,1628,2.4,1629,3.764,1630,2.4,1631,2.4,1632,4.644,1633,3.764,1634,3.764,1635,3.764,1636,3.764,1637,3.764,1638,3.764,1639,2.4,1640,2.4,1641,3.764,1642,3.764,1643,2.4,1644,2.4,1645,3.764,1646,3.764,1647,3.764,1648,3.764,1649,3.764,1650,3.764,1651,3.764,1652,3.764,1653,3.764,1654,3.764,1655,3.764,1656,3.764,1657,2.4,1658,2.4,1659,2.4,1660,2.4,1661,3.764,1662,3.764,1663,3.764,1664,3.764,1665,3.764,1666,3.764,1667,3.764,1668,2.4,1669,2.4,1670,3.764,1671,3.764,1672,2.4,1673,2.4,1674,2.4,1675,2.4,1676,3.764,1677,2.4,1678,2.4,1679,2.4,1680,2.4,1681,2.4,1682,2.4,1683,2.4,1684,2.4,1685,2.4,1686,2.4,1687,2.4,1688,2.4,1689,2.4,1690,2.4,1691,2.4,1692,2.4,1693,2.4,1694,4.644,1695,5.259,1696,5.259,1697,5.259,1698,4.644,1699,2.4,1700,6.061,1701,3.764,1702,2.4,1703,3.764,1704,3.764,1705,3.764,1706,3.764,1707,3.764,1708,2.4,1709,2.4,1710,2.4,1711,3.764,1712,3.764,1713,3.764,1714,3.764,1715,3.764,1716,3.764,1717,3.764,1718,3.764,1719,3.764,1720,3.764,1721,3.764,1722,3.764,1723,2.4,1724,2.4,1725,3.764,1726,3.764,1727,4.644,1728,2.4,1729,3.764,1730,3.764,1731,3.764,1732,3.764,1733,2.4,1734,2.4,1735,2.4,1736,3.764,1737,2.4,1738,2.4,1739,2.4,1740,2.4,1741,2.4,1742,2.4,1743,2.4,1744,2.4]],["title/miscellaneous/functions.html",[1595,1.892,1745,4.23]],["body/miscellaneous/functions.html",[7,0.406,11,0.012,40,0.012,41,0.012,82,3.474,1506,5.6,1595,3.615,1745,5.6,1746,6.428]],["title/index.html",[7,0.213,1747,3.364,1748,3.364]],["body/index.html",[11,0.012,40,0.012,41,0.012]],["title/modules.html",[78,2.459]],["body/modules.html",[11,0.011,40,0.011,41,0.011,77,4.118,78,2.539,303,3.829,308,2.9,309,3.204,415,4.118,418,3.829,419,3.589,420,3.829,421,3.829,422,3.589,1749,8.281,1750,8.281,1751,8.281,1752,8.281]],["title/overview.html",[1753,4.806]],["body/overview.html",[2,0.997,11,0.013,40,0.008,41,0.008,70,1.669,76,1.229,77,4.732,78,1.669,79,1.669,80,1.82,81,1.82,82,1.669,83,1.82,84,1.82,85,3.262,86,3.262,87,4.063,88,2.547,89,1.82,90,1.82,103,1.601,184,1.669,249,2.517,263,3.731,266,4.618,303,5.175,304,3.262,305,3.262,306,3.262,307,3.262,308,3.961,309,4.274,349,4.927,415,5.87,416,3.262,417,3.262,418,4.799,419,4.712,420,4.799,421,5.278,422,4.712,479,3.731,524,3.262,525,3.262,526,3.262,571,2.944,686,4.618,697,3.262,698,3.262,699,3.262,765,1.669,810,3.262,812,3.262,813,3.262,814,4.353,993,4.4,1043,3.262,1044,3.262,1067,2.944,1090,3.262,1091,3.262,1092,3.262,1093,4.927,1094,4.927,1233,4.353,1238,3.262,1240,3.262,1241,3.262,1425,3.262,1426,3.262,1427,3.262,1611,3.262,1753,3.262,1754,3.744,1755,3.744]],["title/properties.html",[8,0.759,1531,2.931]],["body/properties.html",[8,0.996,11,0.013,40,0.012,41,0.012,1756,6.371,1757,6.371,1758,6.371,1759,6.371,1760,6.371,1761,6.371]],["title/miscellaneous/typealiases.html",[1595,1.892,1762,4.856]],["body/miscellaneous/typealiases.html",[6,4.435,7,0.388,10,0.388,11,0.012,33,5.663,40,0.012,41,0.012,43,4.435,52,5.206,106,3.644,133,3.502,651,4.435,665,5.206,982,4.435,986,5.663,1595,3.45,1763,6.135,1764,5.344,1765,5.344,1766,5.344,1767,5.344,1768,5.344]],["title/miscellaneous/variables.html",[1318,3.818,1595,1.892]],["body/miscellaneous/variables.html",[6,3.645,7,0.319,10,0.404,11,0.013,36,1.598,38,4.619,39,4.393,40,0.01,41,0.01,42,2.451,43,3.645,46,4.37,53,4.296,54,4.393,66,1.29,106,2.995,180,3.253,181,3.39,193,3.253,194,3.39,219,3.253,220,3.39,221,3.253,222,3.39,247,5.912,268,5.501,651,3.645,666,4.619,667,4.393,982,3.645,987,4.619,988,4.393,1081,5.024,1318,3.965,1497,4.393,1499,5.567,1501,4.393,1502,4.393,1595,2.836,1764,4.393,1765,4.393,1766,4.393,1767,4.393,1768,6.425,1769,5.043,1770,5.043,1771,5.043,1772,5.043,1773,5.043]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":919,"title":{},"body":{"injectables/MailerService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1757,"title":{},"body":{"properties.html":{}}}],["0.0.100",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["0.1",{"_index":930,"title":{},"body":{"injectables/MailerService.html":{}}}],["0.14.1",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1500,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1528,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":249,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["1.6",{"_index":946,"title":{},"body":{"injectables/MailerService.html":{}}}],["1.7.9",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["1/5",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":184,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["10.0.3",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":197,"title":{},"body":{"classes/Admin.html":{},"injectables/MailerService.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["10px",{"_index":934,"title":{},"body":{"injectables/MailerService.html":{}}}],["11",{"_index":1690,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["12",{"_index":1611,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["12px",{"_index":953,"title":{},"body":{"injectables/MailerService.html":{}}}],["13",{"_index":1754,"title":{},"body":{"overview.html":{}}}],["13/14",{"_index":1527,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":1194,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["15000",{"_index":1185,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["15px",{"_index":948,"title":{},"body":{"injectables/MailerService.html":{}}}],["16.4.7",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":943,"title":{},"body":{"injectables/MailerService.html":{}}}],["17.7.2",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["17000",{"_index":1202,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["2",{"_index":216,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.2",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["2.0.6",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["2.29.0",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TutorSeeder.html":{},"injectables/UsersService.html":{}}}],["20px",{"_index":913,"title":{},"body":{"injectables/MailerService.html":{}}}],["24px",{"_index":940,"title":{},"body":{"injectables/MailerService.html":{}}}],["26",{"_index":1755,"title":{},"body":{"overview.html":{}}}],["2px",{"_index":927,"title":{},"body":{"injectables/MailerService.html":{}}}],["3",{"_index":874,"title":{},"body":{"injectables/MailerService.html":{},"miscellaneous/enumerations.html":{}}}],["3.1.10",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["3.1.4",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":952,"title":{},"body":{"injectables/MailerService.html":{}}}],["333",{"_index":911,"title":{},"body":{"injectables/MailerService.html":{}}}],["4",{"_index":217,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["4.0.1",{"_index":1572,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["4caf50",{"_index":932,"title":{},"body":{"injectables/MailerService.html":{}}}],["4px",{"_index":928,"title":{},"body":{"injectables/MailerService.html":{}}}],["5",{"_index":1203,"title":{},"body":{"injectables/TutorSeeder.html":{},"miscellaneous/enumerations.html":{}}}],["5.0.1",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":1568,"title":{},"body":{"dependencies.html":{}}}],["5px",{"_index":937,"title":{},"body":{"injectables/MailerService.html":{}}}],["6",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.9.16",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":875,"title":{},"body":{"injectables/MailerService.html":{}}}],["600px",{"_index":917,"title":{},"body":{"injectables/MailerService.html":{}}}],["66",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1684,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["7.8.1",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1523,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1686,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["8.1.0",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["8.9.1",{"_index":1573,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":924,"title":{},"body":{"injectables/MailerService.html":{}}}],["9",{"_index":1610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["9.0.2",{"_index":1570,"title":{},"body":{"dependencies.html":{}}}],["92",{"_index":1526,"title":{},"body":{"coverage.html":{}}}],["92300100100",{"_index":1111,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["92300200200",{"_index":1120,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["92300300300",{"_index":1174,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["92300300301",{"_index":1130,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["92300400400",{"_index":1184,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["92300400401",{"_index":1139,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["92300500500",{"_index":1193,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["92300600600",{"_index":1201,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["923390113141",{"_index":374,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["999",{"_index":954,"title":{},"body":{"injectables/MailerService.html":{}}}],["__v",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["_id",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["a_level",{"_index":1693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abbottabad",{"_index":1646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accept",{"_index":975,"title":{},"body":{"injectables/MailerService.html":{}}}],["access",{"_index":324,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"coverage.html":{}}}],["accesstoken",{"_index":507,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IResponse.html":{},"classes/MessagesGateway.html":{},"injectables/TwilioService.html":{}}}],["accesstoken(accountsid",{"_index":1322,"title":{},"body":{"injectables/TwilioService.html":{}}}],["accesstoken.videogrant",{"_index":1321,"title":{},"body":{"injectables/TwilioService.html":{}}}],["accesstokensecret",{"_index":1485,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"modules/AccountsModule.html":{},"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"coverage.html":{}}}],["account.name",{"_index":99,"title":{},"body":{"modules/AccountsModule.html":{}}}],["account.schema",{"_index":95,"title":{},"body":{"modules/AccountsModule.html":{}}}],["accountactivationrequest",{"_index":42,"title":{"classes/AccountActivationRequest.html":{}},"body":{"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountactivationrequest.name",{"_index":341,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{}}}],["accountactivationrequestdocument",{"_index":52,"title":{},"body":{"classes/AccountActivationRequest.html":{},"injectables/AdminService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["accountactivationrequestdto",{"_index":55,"title":{"classes/AccountActivationRequestDto.html":{}},"body":{"classes/AccountActivationRequestDto.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/RequestDto.html":{},"coverage.html":{}}}],["accountactivationrequestdto.userid",{"_index":398,"title":{},"body":{"injectables/AdminService.html":{}}}],["accountactivationrequestschema",{"_index":53,"title":{},"body":{"classes/AccountActivationRequest.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountdocument",{"_index":33,"title":{},"body":{"classes/Account.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["accountdto",{"_index":64,"title":{"classes/AccountDto.html":{}},"body":{"classes/AccountDto.html":{},"coverage.html":{}}}],["accounting",{"_index":1718,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accounts",{"_index":73,"title":{},"body":{"controllers/AccountsController.html":{},"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["accounts.controller",{"_index":93,"title":{},"body":{"modules/AccountsModule.html":{}}}],["accounts.service",{"_index":92,"title":{},"body":{"modules/AccountsModule.html":{}}}],["accountschema",{"_index":38,"title":{},"body":{"classes/Account.html":{},"modules/AccountsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountscontroller",{"_index":69,"title":{"controllers/AccountsController.html":{}},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"coverage.html":{}}}],["accountsid",{"_index":1277,"title":{},"body":{"injectables/TwilioService.html":{}}}],["accountsmodule",{"_index":77,"title":{"modules/AccountsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules.html":{},"overview.html":{}}}],["accountsservice",{"_index":87,"title":{"injectables/AccountsService.html":{}},"body":{"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"coverage.html":{},"overview.html":{}}}],["activation",{"_index":115,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["active",{"_index":175,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["active\\n",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":1329,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["admin",{"_index":105,"title":{"classes/Admin.html":{}},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["admin.controller",{"_index":319,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.save",{"_index":377,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["admin.schema",{"_index":321,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{}}}],["admin.seeder",{"_index":1096,"title":{},"body":{"modules/SeedersModule.html":{}}}],["admin.service",{"_index":267,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/accounts/users",{"_index":346,"title":{},"body":{"modules/AdminModule.html":{}}}],["admincontroller",{"_index":223,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminexists",{"_index":364,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["adminmodule",{"_index":303,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminschema",{"_index":221,"title":{},"body":{"classes/Admin.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminseeder",{"_index":349,"title":{"injectables/AdminSeeder.html":{}},"body":{"injectables/AdminSeeder.html":{},"modules/SeedersModule.html":{},"coverage.html":{},"overview.html":{}}}],["adminservice",{"_index":266,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["afterinit",{"_index":999,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["afterinit(server",{"_index":1006,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["again",{"_index":891,"title":{},"body":{"injectables/MailerService.html":{}}}],["agriculture",{"_index":1730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alex",{"_index":1108,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["alex.johnson@example.com",{"_index":1110,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["alex_johnson",{"_index":1107,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["alias",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1763,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":935,"title":{},"body":{"injectables/MailerService.html":{}}}],["already",{"_index":381,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["anna",{"_index":1198,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["anna.brown@example.com",{"_index":1200,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["anna_brown",{"_index":1197,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["apikey",{"_index":1281,"title":{},"body":{"injectables/TwilioService.html":{}}}],["apioperation",{"_index":271,"title":{},"body":{"controllers/AdminController.html":{}}}],["apisecret",{"_index":1283,"title":{},"body":{"injectables/TwilioService.html":{}}}],["apitags",{"_index":270,"title":{},"body":{"controllers/AdminController.html":{}}}],["apitags('admin",{"_index":274,"title":{},"body":{"controllers/AdminController.html":{}}}],["apply(verifyaccesstokenmiddleware",{"_index":343,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["appmodule",{"_index":415,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approve",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["approveaccountactivationrequest",{"_index":227,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["approveaccountactivationrequest(@body",{"_index":299,"title":{},"body":{"controllers/AdminController.html":{}}}],["approveaccountactivationrequest(requestdto",{"_index":233,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["approved",{"_index":412,"title":{},"body":{"injectables/AdminService.html":{}}}],["architecture",{"_index":1729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arial",{"_index":905,"title":{},"body":{"injectables/MailerService.html":{}}}],["array",{"_index":110,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["art",{"_index":1720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["asad",{"_index":372,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["asadullah",{"_index":370,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["associated",{"_index":192,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["async",{"_index":226,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/RefreshTokenPipe.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["auth",{"_index":448,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IUser.html":{},"injectables/MailerService.html":{}}}],["auth.controller",{"_index":528,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":480,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":331,"title":{},"body":{"modules/AdminModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{}}}],["auth/auth.service",{"_index":850,"title":{},"body":{"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/TwilioService.html":{}}}],["auth/dtos/auth.dto",{"_index":848,"title":{},"body":{"injectables/MailerService.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{}}}],["authcontroller",{"_index":446,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":166,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["authmodule",{"_index":308,"title":{"modules/AuthModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1761,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":479,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/TwilioService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1279,"title":{},"body":{"injectables/TwilioService.html":{}}}],["auto",{"_index":920,"title":{},"body":{"injectables/MailerService.html":{}}}],["availability",{"_index":130,"title":{},"body":{"classes/Admin.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["availability.fri_1pm_4pm",{"_index":1196,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["availability.mon_1pm_4pm",{"_index":1179,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["availability.mon_9am_12pm",{"_index":1195,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["availability.sun_9am_12pm",{"_index":1205,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["availability.tue_1pm_4pm",{"_index":1188,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["availability.tue_9am_12pm",{"_index":1187,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["await",{"_index":289,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["axios",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["bachelors",{"_index":1696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["background",{"_index":908,"title":{},"body":{"injectables/MailerService.html":{}}}],["badrequestexception",{"_index":758,"title":{},"body":{"injectables/HashPasswordPipe.html":{},"injectables/RefreshTokenPipe.html":{}}}],["badrequestexception('error",{"_index":761,"title":{},"body":{"injectables/HashPasswordPipe.html":{}}}],["badrequestexception('password",{"_index":763,"title":{},"body":{"injectables/HashPasswordPipe.html":{}}}],["badrequestexception('refresh",{"_index":1058,"title":{},"body":{"injectables/RefreshTokenPipe.html":{}}}],["bahawalpur",{"_index":1654,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["base",{"_index":136,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["basic",{"_index":783,"title":{},"body":{"interfaces/IUser.html":{}}}],["bcrypt",{"_index":359,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["bcrypt.compare(plainpassword",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash('adminpassword123",{"_index":368,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["bcrypt.hash(studentdata.password",{"_index":1147,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["bcrypt.hash(tutordata.password",{"_index":1209,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["bcrypt.hash(value.password",{"_index":760,"title":{},"body":{"injectables/HashPasswordPipe.html":{}}}],["bcryptjs",{"_index":360,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"dependencies.html":{}}}],["becoming",{"_index":973,"title":{},"body":{"injectables/MailerService.html":{}}}],["below",{"_index":963,"title":{},"body":{"injectables/MailerService.html":{}}}],["bhakkar",{"_index":1647,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["biology",{"_index":1716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["block",{"_index":958,"title":{},"body":{"injectables/MailerService.html":{}}}],["body",{"_index":258,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CommentsController.html":{},"injectables/MailerService.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{}}}],["bold",{"_index":950,"title":{},"body":{"injectables/MailerService.html":{}}}],["boolean",{"_index":45,"title":{},"body":{"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"interfaces/IUser.html":{},"guards/RolesGuard.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":82,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["border",{"_index":922,"title":{},"body":{"injectables/MailerService.html":{}}}],["box",{"_index":925,"title":{},"body":{"injectables/MailerService.html":{}}}],["break",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["brown",{"_index":1199,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["browse",{"_index":1752,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1749,"title":{},"body":{"modules.html":{}}}],["business",{"_index":1712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["button",{"_index":955,"title":{},"body":{"injectables/MailerService.html":{}}}],["cache",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["canactivate",{"_index":1071,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":1075,"title":{},"body":{"guards/RolesGuard.html":{}}}],["case",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch",{"_index":291,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"controllers/AuthController.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["center",{"_index":936,"title":{},"body":{"injectables/MailerService.html":{}}}],["chakwal",{"_index":1661,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["charged",{"_index":196,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["chemistry",{"_index":1715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["chiniot",{"_index":1656,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["city",{"_index":124,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AuthService.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"injectables/MailerService.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["city.gujranwala",{"_index":1176,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["city.islamabad",{"_index":1113,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["city.karachi",{"_index":1122,"title":{},"body":{"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["city.lahore",{"_index":1131,"title":{},"body":{"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["city.peshawar",{"_index":1140,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["clark",{"_index":1128,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"overview.html":{}}}],["click",{"_index":977,"title":{},"body":{"injectables/MailerService.html":{}}}],["client",{"_index":1011,"title":{},"body":{"classes/MessagesGateway.html":{},"injectables/TwilioService.html":{}}}],["client.data.user",{"_index":1035,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["client.disconnect",{"_index":1037,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["client.handshake.auth.token",{"_index":1031,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["client.id",{"_index":1030,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["client.messages.create",{"_index":1299,"title":{},"body":{"injectables/TwilioService.html":{}}}],["client.video.v1.rooms('dailystandup').fetch",{"_index":1311,"title":{},"body":{"injectables/TwilioService.html":{}}}],["client.video.v1.rooms.create",{"_index":1306,"title":{},"body":{"injectables/TwilioService.html":{}}}],["cluster_accountsmodule",{"_index":85,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_providers",{"_index":86,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_adminmodule",{"_index":304,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":307,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":305,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":306,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":525,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":526,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commentsmodule",{"_index":697,"title":{},"body":{"modules/CommentsModule.html":{},"overview.html":{}}}],["cluster_commentsmodule_exports",{"_index":698,"title":{},"body":{"modules/CommentsModule.html":{},"overview.html":{}}}],["cluster_commentsmodule_providers",{"_index":699,"title":{},"body":{"modules/CommentsModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":810,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_exports",{"_index":812,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_imports",{"_index":811,"title":{},"body":{"modules/MailerModule.html":{}}}],["cluster_mailermodule_providers",{"_index":813,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_messagesmodule",{"_index":1043,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_messagesmodule_exports",{"_index":1044,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_messagesmodule_imports",{"_index":1045,"title":{},"body":{"modules/MessagesModule.html":{}}}],["cluster_seedersmodule",{"_index":1090,"title":{},"body":{"modules/SeedersModule.html":{},"overview.html":{}}}],["cluster_seedersmodule_exports",{"_index":1091,"title":{},"body":{"modules/SeedersModule.html":{},"overview.html":{}}}],["cluster_seedersmodule_providers",{"_index":1092,"title":{},"body":{"modules/SeedersModule.html":{},"overview.html":{}}}],["cluster_twiliomodule",{"_index":1238,"title":{},"body":{"modules/TwilioModule.html":{},"overview.html":{}}}],["cluster_twiliomodule_exports",{"_index":1240,"title":{},"body":{"modules/TwilioModule.html":{},"overview.html":{}}}],["cluster_twiliomodule_imports",{"_index":1239,"title":{},"body":{"modules/TwilioModule.html":{}}}],["cluster_twiliomodule_providers",{"_index":1241,"title":{},"body":{"modules/TwilioModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1425,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1426,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1428,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":1427,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":752,"title":{},"body":{"classes/EmailDto.html":{},"interfaces/ILogin.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"injectables/MailerService.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["color",{"_index":909,"title":{},"body":{"injectables/MailerService.html":{}}}],["command",{"_index":1574,"title":{},"body":{"dependencies.html":{}}}],["comment",{"_index":650,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"coverage.html":{}}}],["comment.name",{"_index":703,"title":{},"body":{"modules/CommentsModule.html":{}}}],["comment.save",{"_index":720,"title":{},"body":{"injectables/CommentsService.html":{}}}],["comment.schema",{"_index":701,"title":{},"body":{"modules/CommentsModule.html":{},"injectables/CommentsService.html":{}}}],["commentdocument",{"_index":665,"title":{},"body":{"classes/Comment.html":{},"injectables/CommentsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["commentid",{"_index":680,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["commentmodel",{"_index":707,"title":{},"body":{"injectables/CommentsService.html":{}}}],["comments",{"_index":652,"title":{},"body":{"classes/Comment.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/CreateCommentDto.html":{},"interfaces/IComment.html":{}}}],["comments.controller",{"_index":702,"title":{},"body":{"modules/CommentsModule.html":{}}}],["comments.service",{"_index":687,"title":{},"body":{"controllers/CommentsController.html":{},"modules/CommentsModule.html":{}}}],["commentschema",{"_index":666,"title":{},"body":{"classes/Comment.html":{},"modules/CommentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentscontroller",{"_index":668,"title":{"controllers/CommentsController.html":{}},"body":{"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"coverage.html":{}}}],["commentsmodule",{"_index":418,"title":{"modules/CommentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommentsModule.html":{},"modules.html":{},"overview.html":{}}}],["commentsservice",{"_index":686,"title":{"injectables/CommentsService.html":{}},"body":{"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"coverage.html":{},"overview.html":{}}}],["common/interfaces/response.interface",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["computer",{"_index":1703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["computer_engineering",{"_index":1728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["computer_science",{"_index":1702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["configmodule",{"_index":328,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["configmodule.forroot",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":329,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/MailerService.html":{},"modules/MessagesModule.html":{},"injectables/TwilioService.html":{},"modules/UsersModule.html":{}}}],["configservice.get('access_token_expiry",{"_index":337,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["configservice.get('access_token_secret",{"_index":334,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('refresh_token_expiry",{"_index":340,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["configservice.get('refresh_token_secret",{"_index":339,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["configure",{"_index":311,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["configure(consumer",{"_index":312,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["configured",{"_index":1316,"title":{},"body":{"injectables/TwilioService.html":{}}}],["connect",{"_index":724,"title":{},"body":{"classes/ConnectDto.html":{},"interfaces/IConnect.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["connectdto",{"_index":722,"title":{"classes/ConnectDto.html":{}},"body":{"classes/ConnectDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["connected",{"_index":1029,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["connecting",{"_index":971,"title":{},"body":{"injectables/MailerService.html":{}}}],["connection",{"_index":901,"title":{},"body":{"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["connectuser",{"_index":1386,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["connectuser(@body",{"_index":1422,"title":{},"body":{"controllers/UsersController.html":{}}}],["connectuser(connectdto",{"_index":1388,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["console.error('connection",{"_index":1038,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["console.error('error",{"_index":384,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/MailerService.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["console.error(`${error.message",{"_index":1472,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.info(`phone",{"_index":1304,"title":{},"body":{"injectables/TwilioService.html":{}}}],["console.info(`verification",{"_index":886,"title":{},"body":{"injectables/MailerService.html":{}}}],["console.info(info",{"_index":981,"title":{},"body":{"injectables/MailerService.html":{}}}],["console.log",{"_index":1156,"title":{},"body":{"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["console.log('admin",{"_index":378,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["console.log('admincontroller",{"_index":279,"title":{},"body":{"controllers/AdminController.html":{}}}],["console.log('adminmodule",{"_index":342,"title":{},"body":{"modules/AdminModule.html":{}}}],["console.log('adminseeder",{"_index":363,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["console.log('adminservice",{"_index":396,"title":{},"body":{"injectables/AdminService.html":{}}}],["console.log('authservice",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('invalid",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('messagesgateway",{"_index":1026,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["console.log('messagesmodule",{"_index":1051,"title":{},"body":{"modules/MessagesModule.html":{}}}],["console.log('sending",{"_index":1293,"title":{},"body":{"injectables/TwilioService.html":{}}}],["console.log('studentseeder",{"_index":1106,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["console.log('tutorseeder",{"_index":1169,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["console.log('twiliocontroller",{"_index":1236,"title":{},"body":{"controllers/TwilioController.html":{}}}],["console.log('twiliomodule",{"_index":1245,"title":{},"body":{"modules/TwilioModule.html":{}}}],["console.log('twilioservice",{"_index":1276,"title":{},"body":{"injectables/TwilioService.html":{}}}],["console.log('user",{"_index":1036,"title":{},"body":{"classes/MessagesGateway.html":{},"injectables/TwilioService.html":{}}}],["console.log('userscontroller",{"_index":1411,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('usersmodule",{"_index":1436,"title":{},"body":{"modules/UsersModule.html":{}}}],["console.log('usersservice",{"_index":1456,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('websocket",{"_index":1027,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["console.log(`client",{"_index":1028,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["console.log(`student",{"_index":1157,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["console.log(`tutor",{"_index":1223,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["console.log(room.sid",{"_index":1310,"title":{},"body":{"injectables/TwilioService.html":{}}}],["console.log(token.tojwt",{"_index":1324,"title":{},"body":{"injectables/TwilioService.html":{}}}],["console.warn(`no",{"_index":895,"title":{},"body":{"injectables/MailerService.html":{}}}],["console.warn(`verification",{"_index":898,"title":{},"body":{"injectables/MailerService.html":{}}}],["const",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessagesGateway.html":{},"injectables/RefreshTokenPipe.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["constructor",{"_index":276,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/CommentsService.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"guards/RolesGuard.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["constructor(authservice",{"_index":1258,"title":{},"body":{"injectables/TwilioService.html":{}}}],["constructor(commentmodel",{"_index":705,"title":{},"body":{"injectables/CommentsService.html":{}}}],["constructor(configservice",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{}}}],["constructor(jwtservice",{"_index":1003,"title":{},"body":{"classes/MessagesGateway.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["constructor(private",{"_index":489,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CommentsController.html":{},"guards/RolesGuard.html":{},"controllers/TwilioController.html":{}}}],["constructor(reflector",{"_index":1072,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(requestmodel",{"_index":387,"title":{},"body":{"injectables/AdminService.html":{}}}],["constructor(usermodel",{"_index":352,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/UsersService.html":{}}}],["consumer",{"_index":315,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["container",{"_index":914,"title":{},"body":{"injectables/MailerService.html":{}}}],["content",{"_index":653,"title":{},"body":{"classes/Comment.html":{},"classes/CreateCommentDto.html":{},"interfaces/IComment.html":{}}}],["context",{"_index":1078,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":1086,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1085,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1087,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":68,"title":{"controllers/AccountsController.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CommentsController.html":{},"controllers/TwilioController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AccountsController.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CommentsController.html":{},"controllers/TwilioController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('accounts",{"_index":75,"title":{},"body":{"controllers/AccountsController.html":{}}}],["controller('admin",{"_index":273,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":488,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('comments",{"_index":689,"title":{},"body":{"controllers/CommentsController.html":{}}}],["controller('twilio",{"_index":1235,"title":{},"body":{"controllers/TwilioController.html":{}}}],["controller('users",{"_index":1410,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":70,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["cookieoptions",{"_index":496,"title":{},"body":{"controllers/AuthController.html":{}}}],["cookies",{"_index":1060,"title":{},"body":{"injectables/RefreshTokenPipe.html":{}}}],["cors",{"_index":1024,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["count",{"_index":1458,"title":{},"body":{"injectables/UsersService.html":{}}}],["coverage",{"_index":1493,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":179,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["createcomment",{"_index":670,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["createcomment(@body",{"_index":693,"title":{},"body":{"controllers/CommentsController.html":{}}}],["createcomment(createcommentdto",{"_index":674,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["createcommentdto",{"_index":675,"title":{"classes/CreateCommentDto.html":{}},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["createdat",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["createroom",{"_index":1247,"title":{},"body":{"injectables/TwilioService.html":{}}}],["createtransport",{"_index":846,"title":{},"body":{"injectables/MailerService.html":{}}}],["credentials",{"_index":510,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TwilioService.html":{}}}],["crypto",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["cryptojs.lib.wordarray.random(4",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":505,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IResponse.html":{},"injectables/UsersService.html":{}}}],["date",{"_index":660,"title":{},"body":{"classes/Comment.html":{},"interfaces/IComment.html":{}}}],["date.now",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{},"classes/Comment.html":{},"injectables/MailerService.html":{}}}],["davis",{"_index":1137,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["declarations",{"_index":81,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decodedtoken",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoration",{"_index":959,"title":{},"body":{"injectables/MailerService.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/TwilioController.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["default",{"_index":46,"title":{},"body":{"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["delete",{"_index":142,"title":{},"body":{"classes/Admin.html":{},"controllers/CommentsController.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["delete(':commentid",{"_index":678,"title":{},"body":{"controllers/CommentsController.html":{}}}],["deletecomment",{"_index":671,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["deletecomment(@param('commentid",{"_index":695,"title":{},"body":{"controllers/CommentsController.html":{}}}],["deletecomment(commentid",{"_index":677,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["dependencies",{"_index":79,"title":{"dependencies.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dera",{"_index":1658,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dera_ghazi_khan",{"_index":1657,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":1758,"title":{},"body":{"properties.html":{}}}],["details",{"_index":962,"title":{},"body":{"injectables/MailerService.html":{}}}],["diploma",{"_index":1742,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["diploma/certification",{"_index":1743,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disconnected",{"_index":1040,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["discriminatorkey",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["display",{"_index":956,"title":{},"body":{"injectables/MailerService.html":{}}}],["doc",{"_index":139,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["document",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"classes/Message.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["documentation",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":1172,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["dotenv",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["dtos/admin.dto",{"_index":265,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["dtos/auth.dto",{"_index":478,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/comment.dto",{"_index":688,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["dtos/connect.dto",{"_index":1408,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/mail.dto",{"_index":849,"title":{},"body":{"injectables/MailerService.html":{}}}],["dtos/message.dto",{"_index":1023,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["dtos/user.dto",{"_index":1454,"title":{},"body":{"injectables/UsersService.html":{}}}],["e.g",{"_index":183,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["each",{"_index":800,"title":{},"body":{"classes/MailDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["economics",{"_index":1711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["education",{"_index":1710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ejs",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":160,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"classes/EmailDto.html":{},"interfaces/ILogin.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"injectables/MailerService.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["emaildto",{"_index":740,"title":{"classes/EmailDto.html":{}},"body":{"classes/EmailDto.html":{},"classes/LoginDto.html":{},"injectables/MailerService.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"controllers/UsersController.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{}}}],["emma",{"_index":1136,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["emma.davis@example.com",{"_index":1138,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["emma_davis",{"_index":1135,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["encrypted",{"_index":164,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["engineering",{"_index":1727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["english",{"_index":1701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["entrepreneurship",{"_index":1736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum",{"_index":167,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["enumerations",{"_index":1596,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/role.enum",{"_index":1080,"title":{},"body":{"guards/RolesGuard.html":{}}}],["env",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1317,"title":{},"body":{"injectables/TwilioService.html":{}}}],["environmental",{"_index":1735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["environmental_science",{"_index":1734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":383,"title":{},"body":{"injectables/AdminSeeder.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["error('access",{"_index":1484,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["error('activation",{"_index":413,"title":{},"body":{"injectables/AdminService.html":{}}}],["error('failed",{"_index":1465,"title":{},"body":{"injectables/UsersService.html":{}}}],["error('invalid",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('no",{"_index":1463,"title":{},"body":{"injectables/UsersService.html":{}}}],["error('user",{"_index":399,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["error('verification",{"_index":403,"title":{},"body":{"injectables/AdminService.html":{}}}],["error(`${error.message",{"_index":1473,"title":{},"body":{"injectables/UsersService.html":{}}}],["error(`comment",{"_index":718,"title":{},"body":{"injectables/CommentsService.html":{}}}],["error(error?.message",{"_index":1486,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["error.message",{"_index":888,"title":{},"body":{"injectables/MailerService.html":{},"classes/MessagesGateway.html":{}}}],["etc",{"_index":209,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["exec",{"_index":717,"title":{},"body":{"injectables/CommentsService.html":{}}}],["executioncontext",{"_index":1076,"title":{},"body":{"guards/RolesGuard.html":{}}}],["existingrequest",{"_index":401,"title":{},"body":{"injectables/AdminService.html":{}}}],["existinguser",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":382,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["experience",{"_index":203,"title":{},"body":{"classes/Admin.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{}}}],["expire",{"_index":883,"title":{},"body":{"injectables/MailerService.html":{}}}],["expired",{"_index":899,"title":{},"body":{"injectables/MailerService.html":{},"injectables/TwilioService.html":{}}}],["expiresin",{"_index":336,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["expiry",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{}}}],["export",{"_index":32,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["exports",{"_index":84,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":483,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenPipe.html":{},"controllers/UsersController.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":182,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["f1f1f1",{"_index":947,"title":{},"body":{"injectables/MailerService.html":{}}}],["f4f7fa",{"_index":910,"title":{},"body":{"injectables/MailerService.html":{}}}],["failed",{"_index":889,"title":{},"body":{"injectables/MailerService.html":{}}}],["faisalabad",{"_index":1640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":47,"title":{},"body":{"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"injectables/MailerService.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["family",{"_index":904,"title":{},"body":{"injectables/MailerService.html":{}}}],["female",{"_index":1671,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fetchroom",{"_index":1248,"title":{},"body":{"injectables/TwilioService.html":{}}}],["fff",{"_index":921,"title":{},"body":{"injectables/MailerService.html":{}}}],["fields",{"_index":786,"title":{},"body":{"interfaces/IUser.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{}}}],["find",{"_index":878,"title":{},"body":{"injectables/MailerService.html":{}}}],["findallaverificationrequests",{"_index":228,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findallcomments",{"_index":672,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["findallusers",{"_index":229,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UsersService.html":{}}}],["findallusers(city",{"_index":241,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UsersService.html":{}}}],["findbyid(commentid",{"_index":715,"title":{},"body":{"injectables/CommentsService.html":{}}}],["findbyid(user._id",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["findonecomment",{"_index":673,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["findonecomment(@param('commentid",{"_index":691,"title":{},"body":{"controllers/CommentsController.html":{}}}],["findonecomment(commentid",{"_index":682,"title":{},"body":{"controllers/CommentsController.html":{},"injectables/CommentsService.html":{}}}],["finduserbyemail",{"_index":1440,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyemail(email",{"_index":1446,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyphonenumber",{"_index":1441,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyphonenumber(phonenumber",{"_index":1448,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":156,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TwilioService.html":{},"classes/User.html":{}}}],["firstname",{"_index":157,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["font",{"_index":903,"title":{},"body":{"injectables/MailerService.html":{}}}],["footer",{"_index":951,"title":{},"body":{"injectables/MailerService.html":{}}}],["forbiddenexception",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('there",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["forroutes",{"_index":344,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["forwardref",{"_index":816,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["found",{"_index":400,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/CommentsService.html":{},"injectables/MailerService.html":{},"injectables/TwilioService.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["fri",{"_index":1623,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fri_1pm_4pm",{"_index":1624,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fri_9am_12pm",{"_index":1622,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fsd",{"_index":1639,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["function",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1745,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":117,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"injectables/MailerService.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["gender.female",{"_index":1121,"title":{},"body":{"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["gender.male",{"_index":376,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["genders",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["genders_key",{"_index":1499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["generateaccesstoken",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateaccesstoken(user",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["generaterefreshtoken",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["generaterefreshtoken(user",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetwilioaccesstoken",{"_index":1227,"title":{},"body":{"controllers/TwilioController.html":{},"injectables/TwilioService.html":{}}}],["generatetwilioaccesstoken(identity",{"_index":1228,"title":{},"body":{"controllers/TwilioController.html":{},"injectables/TwilioService.html":{}}}],["generateverificationcode",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["geography",{"_index":1705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get(':commentid",{"_index":683,"title":{},"body":{"controllers/CommentsController.html":{}}}],["get(':userid",{"_index":1392,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('accounts/requests",{"_index":239,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('accounts/users",{"_index":281,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('accounts/users')@roles(role.admin)@apioperation({summary",{"_index":244,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('refresh",{"_index":464,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccesstoken",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["getaccesstokenexpiry",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["getaccountsid",{"_index":1249,"title":{},"body":{"injectables/TwilioService.html":{}}}],["getauthtoken",{"_index":1250,"title":{},"body":{"injectables/TwilioService.html":{}}}],["getmyphonenumber",{"_index":1251,"title":{},"body":{"injectables/TwilioService.html":{}}}],["getrefreshtoken",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["getrefreshtokenexpiry",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsmtpauthpass",{"_index":821,"title":{},"body":{"injectables/MailerService.html":{}}}],["getsmtpauthuser",{"_index":822,"title":{},"body":{"injectables/MailerService.html":{}}}],["getsmtphost",{"_index":823,"title":{},"body":{"injectables/MailerService.html":{}}}],["getsmtpport",{"_index":824,"title":{},"body":{"injectables/MailerService.html":{}}}],["getsmtpsecure",{"_index":825,"title":{},"body":{"injectables/MailerService.html":{}}}],["getsmtpservice",{"_index":826,"title":{},"body":{"injectables/MailerService.html":{}}}],["getting",{"_index":1747,"title":{"index.html":{}},"body":{}}],["gettwilioapikey",{"_index":1252,"title":{},"body":{"injectables/TwilioService.html":{}}}],["gettwilioapisecret",{"_index":1253,"title":{},"body":{"injectables/TwilioService.html":{}}}],["gettwilioclient",{"_index":1254,"title":{},"body":{"injectables/TwilioService.html":{}}}],["gettwiliophonenumber",{"_index":1255,"title":{},"body":{"injectables/TwilioService.html":{}}}],["getuserbyid",{"_index":1387,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuserbyid(userid",{"_index":1391,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuserbyidandupdate",{"_index":1442,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyidandupdate(userid",{"_index":1451,"title":{},"body":{"injectables/UsersService.html":{}}}],["ghazi",{"_index":1659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gilgit",{"_index":1652,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["go",{"_index":1307,"title":{},"body":{"injectables/TwilioService.html":{}}}],["grade",{"_index":126,"title":{},"body":{"classes/Admin.html":{},"injectables/AuthService.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"injectables/MailerService.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["grade.grade_10",{"_index":1114,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["grade.grade_12",{"_index":1123,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["grade.grade_8",{"_index":1141,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["grade.o_level",{"_index":1132,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["grade_1",{"_index":1677,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_10",{"_index":1688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_11",{"_index":1689,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_12",{"_index":1691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_2",{"_index":1678,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_3",{"_index":1679,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_4",{"_index":1680,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_5",{"_index":1681,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_6",{"_index":1682,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_7",{"_index":1683,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_8",{"_index":1685,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grade_9",{"_index":1687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guard",{"_index":1067,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1069,"title":{},"body":{"guards/RolesGuard.html":{}}}],["gujranwala",{"_index":1642,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h1",{"_index":938,"title":{},"body":{"injectables/MailerService.html":{}}}],["handleconnection",{"_index":1000,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handleconnection(client",{"_index":1008,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handled",{"_index":116,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["handledisconnect",{"_index":1001,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handledisconnect(client",{"_index":1012,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handlemessage",{"_index":1002,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handlemessage(@messagebody",{"_index":1041,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["handlemessage(messagedto",{"_index":1014,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["hashedpassword",{"_index":367,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["hashing",{"_index":762,"title":{},"body":{"injectables/HashPasswordPipe.html":{}}}],["hashpasswordpipe",{"_index":474,"title":{"injectables/HashPasswordPipe.html":{}},"body":{"controllers/AuthController.html":{},"injectables/HashPasswordPipe.html":{},"coverage.html":{}}}],["header",{"_index":931,"title":{},"body":{"injectables/MailerService.html":{}}}],["height",{"_index":945,"title":{},"body":{"injectables/MailerService.html":{}}}],["hello",{"_index":902,"title":{},"body":{"injectables/MailerService.html":{}}}],["history",{"_index":1704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["host",{"_index":855,"title":{},"body":{"injectables/MailerService.html":{}}}],["hour",{"_index":200,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["hourly",{"_index":207,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["html",{"_index":882,"title":{},"body":{"injectables/MailerService.html":{}}}],["httpexception",{"_index":259,"title":{},"body":{"controllers/AdminController.html":{}}}],["httponly",{"_index":497,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpstatus",{"_index":260,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["httpstatus.internal_server_error",{"_index":296,"title":{},"body":{"controllers/AdminController.html":{}}}],["httpstatus.ok",{"_index":503,"title":{},"body":{"controllers/AuthController.html":{}}}],["hyderabad",{"_index":1650,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["iaccount",{"_index":30,"title":{"interfaces/IAccount.html":{}},"body":{"classes/Account.html":{},"interfaces/IAccount.html":{},"coverage.html":{}}}],["iaccountactivationrequest",{"_index":50,"title":{"interfaces/IAccountActivationRequest.html":{}},"body":{"classes/AccountActivationRequest.html":{},"interfaces/IAccountActivationRequest.html":{},"coverage.html":{}}}],["icomment",{"_index":663,"title":{"interfaces/IComment.html":{}},"body":{"classes/Comment.html":{},"interfaces/IComment.html":{},"coverage.html":{}}}],["iconnect",{"_index":769,"title":{"interfaces/IConnect.html":{}},"body":{"interfaces/IConnect.html":{},"coverage.html":{}}}],["id",{"_index":719,"title":{},"body":{"injectables/CommentsService.html":{}}}],["identifier",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1231,"title":{},"body":{"controllers/TwilioController.html":{},"injectables/TwilioService.html":{}}}],["ignore",{"_index":980,"title":{},"body":{"injectables/MailerService.html":{}}}],["ilogin",{"_index":771,"title":{"interfaces/ILogin.html":{}},"body":{"interfaces/ILogin.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IVerifyCode.html":{},"coverage.html":{}}}],["imail",{"_index":776,"title":{"interfaces/IMail.html":{}},"body":{"interfaces/IMail.html":{},"coverage.html":{}}}],["imessage",{"_index":778,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IMessage.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"coverage.html":{}}}],["implemented",{"_index":656,"title":{},"body":{"classes/Comment.html":{}}}],["implements",{"_index":275,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/HashPasswordPipe.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/RefreshTokenPipe.html":{},"guards/RolesGuard.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["import",{"_index":22,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IUser.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["imports",{"_index":96,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":173,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["information",{"_index":784,"title":{},"body":{"interfaces/IUser.html":{}}}],["inherited",{"_index":1335,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["initialized",{"_index":280,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":338,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/MailerService.html":{},"modules/MessagesModule.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":851,"title":{},"body":{"injectables/MailerService.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":102,"title":{"injectables/AccountsService.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"injectables/RefreshTokenPipe.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}},"body":{"injectables/AccountsService.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"injectables/RefreshTokenPipe.html":{},"guards/RolesGuard.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"coverage.html":{}}}],["injectables",{"_index":103,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"injectables/RefreshTokenPipe.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"overview.html":{}}}],["injectmodel",{"_index":358,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/CommentsService.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/UsersService.html":{}}}],["injectmodel(accountactivationrequest.name",{"_index":395,"title":{},"body":{"injectables/AdminService.html":{}}}],["injectmodel(comment.name",{"_index":712,"title":{},"body":{"injectables/CommentsService.html":{}}}],["injectmodel(user.name",{"_index":362,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/UsersService.html":{}}}],["inline",{"_index":957,"title":{},"body":{"injectables/MailerService.html":{}}}],["interest",{"_index":128,"title":{},"body":{"classes/Admin.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["interest.art",{"_index":1125,"title":{},"body":{"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["interest.biology",{"_index":1142,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["interest.history",{"_index":1134,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["interest.mathematics",{"_index":1115,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["interest.music",{"_index":1133,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["interest.physics",{"_index":1143,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["interest.science",{"_index":1116,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["interest.sociology",{"_index":1124,"title":{},"body":{"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["interested",{"_index":970,"title":{},"body":{"injectables/MailerService.html":{}}}],["interests",{"_index":188,"title":{},"body":{"classes/Admin.html":{},"injectables/AuthService.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"injectables/MailerService.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["interface",{"_index":764,"title":{"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{}},"body":{"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"coverage.html":{}}}],["interfaces",{"_index":765,"title":{},"body":{"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"overview.html":{}}}],["interfaces/account.interface",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["interfaces/admin.interface",{"_index":51,"title":{},"body":{"classes/AccountActivationRequest.html":{}}}],["interfaces/comment.interface",{"_index":664,"title":{},"body":{"classes/Comment.html":{}}}],["interfaces/message.interface",{"_index":985,"title":{},"body":{"classes/Message.html":{},"classes/MessageDto.html":{}}}],["interfaces/user.interface",{"_index":1406,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["intermediate",{"_index":1695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid",{"_index":509,"title":{},"body":{"controllers/AuthController.html":{},"classes/MessagesGateway.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["ioredis",{"_index":1567,"title":{},"body":{"dependencies.html":{}}}],["iphonenumber",{"_index":774,"title":{"interfaces/IPhoneNumber.html":{}},"body":{"interfaces/ILogin.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IVerifyCode.html":{},"coverage.html":{}}}],["iregister",{"_index":773,"title":{"interfaces/IRegister.html":{}},"body":{"interfaces/ILogin.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IVerifyCode.html":{},"coverage.html":{}}}],["iresponse",{"_index":562,"title":{"interfaces/IResponse.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["isactive",{"_index":44,"title":{},"body":{"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isarray",{"_index":739,"title":{},"body":{"classes/CreateCommentDto.html":{},"classes/MailDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["isboolean",{"_index":1347,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail",{"_index":746,"title":{},"body":{"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["isemailverified",{"_index":178,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isenum",{"_index":728,"title":{},"body":{"classes/ConnectDto.html":{},"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["isenum(city",{"_index":808,"title":{},"body":{"classes/MailDto.html":{}}}],["isenum(connect",{"_index":730,"title":{},"body":{"classes/ConnectDto.html":{}}}],["isenum(gender",{"_index":809,"title":{},"body":{"classes/MailDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["isenum(grade",{"_index":806,"title":{},"body":{"classes/MailDto.html":{}}}],["isenum(interest",{"_index":807,"title":{},"body":{"classes/MailDto.html":{}}}],["isenum(role",{"_index":749,"title":{},"body":{"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["isglobal",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["islamabad",{"_index":1632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["islamabad_rural",{"_index":1643,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ismongoid",{"_index":59,"title":{},"body":{"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/MessageDto.html":{},"classes/RequestDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty",{"_index":60,"title":{},"body":{"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"classes/MessageDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["isnotempty()@isemail",{"_index":804,"title":{},"body":{"classes/MailDto.html":{}}}],["isnotempty()@isenum(connect",{"_index":725,"title":{},"body":{"classes/ConnectDto.html":{}}}],["isnotempty()@ismongoid",{"_index":57,"title":{},"body":{"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/MessageDto.html":{},"classes/RequestDto.html":{}}}],["isnotempty()@isstring",{"_index":734,"title":{},"body":{"classes/CreateCommentDto.html":{},"classes/LoginDto.html":{},"classes/MessageDto.html":{},"classes/RegisterDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["isnotempty()@isstring()@isemail",{"_index":742,"title":{},"body":{"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/VerifyEmailCodeDto.html":{}}}],["isnotempty()@isstring()@isenum(role",{"_index":744,"title":{},"body":{"classes/EmailDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["isnotempty()@isstring()@isphonenumber('pk",{"_index":1052,"title":{},"body":{"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["isnumber",{"_index":1346,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":738,"title":{},"body":{"classes/CreateCommentDto.html":{},"classes/MailDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isarray",{"_index":732,"title":{},"body":{"classes/CreateCommentDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["isoptional()@isarray()@ismongoid({each",{"_index":1359,"title":{},"body":{"classes/UpdateTutorDto.html":{}}}],["isoptional()@isboolean",{"_index":1338,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isemail",{"_index":1334,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isenum(city",{"_index":791,"title":{},"body":{"classes/MailDto.html":{}}}],["isoptional()@isenum(gender",{"_index":795,"title":{},"body":{"classes/MailDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isenum(grade",{"_index":797,"title":{},"body":{"classes/MailDto.html":{}}}],["isoptional()@isenum(interest",{"_index":799,"title":{},"body":{"classes/MailDto.html":{}}}],["isoptional()@isnumber",{"_index":1356,"title":{},"body":{"classes/UpdateTutorDto.html":{}}}],["isoptional()@isstring",{"_index":793,"title":{},"body":{"classes/MailDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["ispasswordvalid",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["isphonenumber",{"_index":747,"title":{},"body":{"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["isphonenumber('pk",{"_index":748,"title":{},"body":{"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["isphonenumberverified",{"_index":177,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["isstring",{"_index":737,"title":{},"body":{"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"classes/MessageDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["issue",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{}}}],["iuser",{"_index":481,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IUser.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iverifycode",{"_index":775,"title":{"interfaces/IVerifyCode.html":{}},"body":{"interfaces/ILogin.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IVerifyCode.html":{},"coverage.html":{}}}],["jane",{"_index":1181,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["jane.smith@example.com",{"_index":1183,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["jane_smith",{"_index":1180,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["jhelum",{"_index":1651,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["john",{"_index":1171,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["john.doe@example.com",{"_index":1173,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["john_doe",{"_index":1170,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["johnson",{"_index":1109,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["jones",{"_index":1191,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["js",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jsonwebtoken",{"_index":1569,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["jwtmodule",{"_index":326,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["jwtmodule.registerasync",{"_index":332,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["jwtservice",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{},"classes/MessagesGateway.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["karachi",{"_index":1633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kevin",{"_index":1127,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["kevin.clark@example.com",{"_index":1129,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["kevin_clark",{"_index":1126,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["khan",{"_index":1660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kindergarten",{"_index":1676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kohat",{"_index":1663,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lahore",{"_index":1634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["languages",{"_index":1707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["last",{"_index":158,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["lastname",{"_index":159,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["later",{"_index":892,"title":{},"body":{"injectables/MailerService.html":{}}}],["law",{"_index":1725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["legend",{"_index":80,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":186,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["license",{"_index":1759,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":243,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UsersService.html":{}}}],["line",{"_index":944,"title":{},"body":{"injectables/MailerService.html":{}}}],["lisa",{"_index":1118,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["lisa.white@example.com",{"_index":1119,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["lisa_white",{"_index":1117,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["list",{"_index":187,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["literal",{"_index":459,"title":{},"body":{"controllers/AuthController.html":{}}}],["literature",{"_index":1706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["local",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["loggedoutuser",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":449,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(logindto",{"_index":453,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":454,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{}}}],["logindto.email",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto.password",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":450,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(undefined",{"_index":458,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(userid",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["m.asadullah@efat.io",{"_index":366,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["m.phil",{"_index":1740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["maildto",{"_index":789,"title":{"classes/MailDto.html":{}},"body":{"classes/MailDto.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["maildto.to",{"_index":900,"title":{},"body":{"injectables/MailerService.html":{}}}],["maildto?.city",{"_index":968,"title":{},"body":{"injectables/MailerService.html":{}}}],["maildto?.firstname",{"_index":964,"title":{},"body":{"injectables/MailerService.html":{}}}],["maildto?.gender",{"_index":969,"title":{},"body":{"injectables/MailerService.html":{}}}],["maildto?.grade",{"_index":966,"title":{},"body":{"injectables/MailerService.html":{}}}],["maildto?.interests",{"_index":967,"title":{},"body":{"injectables/MailerService.html":{}}}],["maildto?.lastname",{"_index":965,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailer.service",{"_index":817,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer/dtos/mail.dto",{"_index":1455,"title":{},"body":{"injectables/UsersService.html":{}}}],["mailer/mailer.module",{"_index":1434,"title":{},"body":{"modules/UsersModule.html":{}}}],["mailer/mailer.service",{"_index":1409,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mailermodule",{"_index":419,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mailerservice",{"_index":814,"title":{"injectables/MailerService.html":{}},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["mailoptions",{"_index":877,"title":{},"body":{"injectables/MailerService.html":{}}}],["male",{"_index":1670,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["managed",{"_index":113,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["management",{"_index":171,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["map",{"_index":844,"title":{},"body":{"injectables/MailerService.html":{},"injectables/TwilioService.html":{}}}],["mardan",{"_index":1665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["margin",{"_index":918,"title":{},"body":{"injectables/MailerService.html":{}}}],["masters",{"_index":1697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["match",{"_index":1461,"title":{},"body":{"injectables/UsersService.html":{}}}],["matching",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mathematics",{"_index":189,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["matric",{"_index":1738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matriculation",{"_index":1694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["max",{"_index":915,"title":{},"body":{"injectables/MailerService.html":{}}}],["medical",{"_index":1726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["message",{"_index":411,"title":{"classes/Message.html":{}},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IMessage.html":{},"interfaces/IResponse.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"modules/MessagesModule.html":{},"injectables/TwilioService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["message.name",{"_index":1050,"title":{},"body":{"modules/MessagesModule.html":{}}}],["message.schema",{"_index":1049,"title":{},"body":{"modules/MessagesModule.html":{}}}],["messagebody",{"_index":1020,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["messagedocument",{"_index":986,"title":{},"body":{"classes/Message.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagedto",{"_index":989,"title":{"classes/MessageDto.html":{}},"body":{"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"coverage.html":{}}}],["messages.gateway",{"_index":1048,"title":{},"body":{"modules/MessagesModule.html":{}}}],["messageschema",{"_index":987,"title":{},"body":{"classes/Message.html":{},"modules/MessagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagesgateway",{"_index":993,"title":{"classes/MessagesGateway.html":{}},"body":{"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"coverage.html":{},"overview.html":{}}}],["messagesmodule",{"_index":420,"title":{"modules/MessagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":347,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["methods",{"_index":225,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/RefreshTokenPipe.html":{},"guards/RolesGuard.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["middlewareconsumer",{"_index":313,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["mike",{"_index":1190,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["mike.jones@example.com",{"_index":1192,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["mike_jones",{"_index":1189,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["minutes",{"_index":884,"title":{},"body":{"injectables/MailerService.html":{}}}],["mirpur",{"_index":1662,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["miscellaneous",{"_index":1595,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1059,"title":{},"body":{"injectables/RefreshTokenPipe.html":{}}}],["model",{"_index":353,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/CommentsService.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":76,"title":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":78,"title":{"modules.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/admin/admin.module",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/admin/admin.schema",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.module",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/comments/comments.module",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/ioredis",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["modules/mailer",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["modules/mailer/mailer.module",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/messages/messages.module",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/seeders/seeders.module",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/twilio/twilio.module",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/user.schema",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["mon",{"_index":1609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mon_1pm_4pm",{"_index":1612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mon_9am_12pm",{"_index":1608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["monday",{"_index":215,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["mongo",{"_index":1571,"title":{},"body":{"dependencies.html":{}}}],["mongoose",{"_index":29,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/IMessage.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/RequestDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":94,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":97,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["monthly",{"_index":208,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mphil",{"_index":1739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["msc",{"_index":204,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["muhammad",{"_index":371,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["multan",{"_index":1638,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["murree",{"_index":1649,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["music",{"_index":1721,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["myphonenumber",{"_index":1288,"title":{},"body":{"injectables/TwilioService.html":{}}}],["name",{"_index":98,"title":{},"body":{"modules/AccountsModule.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/RefreshTokenPipe.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["narowal",{"_index":1664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["naseerabad",{"_index":1667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nestjs",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["nestjs/axios",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":74,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/RefreshTokenPipe.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":330,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/MailerService.html":{},"modules/MessagesModule.html":{},"injectables/TwilioService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1079,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":327,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":26,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"modules/AccountsModule.html":{},"classes/Admin.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/Message.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":272,"title":{},"body":{"controllers/AdminController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["nestjs/websockets",{"_index":1021,"title":{},"body":{"classes/MessagesGateway.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":1481,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["nestmodule",{"_index":317,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["new",{"_index":293,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/RefreshTokenPipe.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"coverage.html":{}}}],["newrefreshtoken",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":1478,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["nextfunction",{"_index":1479,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["nodemailer",{"_index":847,"title":{},"body":{"injectables/MailerService.html":{},"dependencies.html":{}}}],["none",{"_index":960,"title":{},"body":{"injectables/MailerService.html":{}}}],["notfoundexception",{"_index":1275,"title":{},"body":{"injectables/TwilioService.html":{}}}],["notfoundexception('invalid",{"_index":1302,"title":{},"body":{"injectables/TwilioService.html":{}}}],["notfoundexception('user",{"_index":1295,"title":{},"body":{"injectables/TwilioService.html":{}}}],["notfoundexception('verification",{"_index":1301,"title":{},"body":{"injectables/TwilioService.html":{}}}],["null",{"_index":506,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IResponse.html":{}}}],["number",{"_index":162,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["number/send",{"_index":1398,"title":{},"body":{"controllers/UsersController.html":{}}}],["number/verify",{"_index":1402,"title":{},"body":{"controllers/UsersController.html":{}}}],["o",{"_index":185,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["o_level",{"_index":1692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["objectids",{"_index":111,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["okara",{"_index":1655,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["one",{"_index":974,"title":{},"body":{"injectables/MailerService.html":{}}}],["ongatewayconnection",{"_index":996,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["ongatewaydisconnect",{"_index":997,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["ongatewayinit",{"_index":995,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["onmoduleinit",{"_index":230,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["optional",{"_index":107,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/CreateCommentDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IComment.html":{},"interfaces/IMail.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/RefreshTokenPipe.html":{},"guards/RolesGuard.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["options",{"_index":516,"title":{},"body":{"controllers/AuthController.html":{}}}],["origin",{"_index":1025,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["out",{"_index":90,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1753,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":942,"title":{},"body":{"injectables/MailerService.html":{}}}],["package",{"_index":1531,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":912,"title":{},"body":{"injectables/MailerService.html":{}}}],["page",{"_index":242,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UsersService.html":{}}}],["param",{"_index":685,"title":{},"body":{"controllers/CommentsController.html":{},"controllers/UsersController.html":{}}}],["param('userid",{"_index":1412,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":236,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/RefreshTokenPipe.html":{},"guards/RolesGuard.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["parser",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":861,"title":{},"body":{"injectables/MailerService.html":{}}}],["passport",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["passthrough",{"_index":494,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":165,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/ILogin.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["password.pipe",{"_index":477,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.pipe.ts",{"_index":754,"title":{},"body":{"injectables/HashPasswordPipe.html":{},"coverage.html":{}}}],["password.pipe.ts:6",{"_index":756,"title":{},"body":{"injectables/HashPasswordPipe.html":{}}}],["password/hash",{"_index":476,"title":{},"body":{"controllers/AuthController.html":{},"injectables/HashPasswordPipe.html":{},"coverage.html":{}}}],["path",{"_index":345,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["payload",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["per",{"_index":199,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["peshawar",{"_index":1636,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ph.d",{"_index":1741,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["phd",{"_index":1698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["philosophy",{"_index":1714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["phone",{"_index":161,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["phonenumber",{"_index":163,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"classes/EmailDto.html":{},"interfaces/ILogin.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["phonenumberdto",{"_index":750,"title":{"classes/PhoneNumberDto.html":{}},"body":{"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{}}}],["physical",{"_index":1709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["physical_education",{"_index":1708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["physics",{"_index":1717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipetransform",{"_index":757,"title":{},"body":{"injectables/HashPasswordPipe.html":{},"injectables/RefreshTokenPipe.html":{}}}],["pkr",{"_index":198,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["plainpassword",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["please",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{}}}],["pm",{"_index":218,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["political",{"_index":1724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["political_science",{"_index":1723,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["populate('comments",{"_index":716,"title":{},"body":{"injectables/CommentsService.html":{}}}],["port",{"_index":857,"title":{},"body":{"injectables/MailerService.html":{}}}],["post",{"_index":261,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CommentsController.html":{},"controllers/TwilioController.html":{},"controllers/UsersController.html":{}}}],["post('access",{"_index":1229,"title":{},"body":{"controllers/TwilioController.html":{}}}],["post('accounts/requests",{"_index":256,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('accounts/requests/approve",{"_index":234,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('accounts/requests/reject",{"_index":253,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('connect",{"_index":1420,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('connect')@roles(role.student",{"_index":1389,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('email/send",{"_index":1395,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('email/verify",{"_index":1400,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('login",{"_index":456,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":460,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('phone",{"_index":1397,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('register",{"_index":490,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@usepipes(hashpasswordpipe",{"_index":469,"title":{},"body":{"controllers/AuthController.html":{}}}],["potentially",{"_index":972,"title":{},"body":{"injectables/MailerService.html":{}}}],["pre",{"_index":1674,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pre_school",{"_index":1673,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":72,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/CommentsController.html":{},"controllers/TwilioController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":277,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/CommentsService.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["profileimageurl",{"_index":1330,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["project",{"_index":1462,"title":{},"body":{"injectables/UsersService.html":{}}}],["promise",{"_index":462,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenPipe.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"classes/Message.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["prop({type",{"_index":14,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"classes/Message.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["properly",{"_index":1315,"title":{},"body":{"injectables/TwilioService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"properties.html":{}}}],["provided",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{},"classes/MessagesGateway.html":{}}}],["providers",{"_index":83,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["psycholinguistics",{"_index":1731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["psychology",{"_index":1713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["public",{"_index":451,"title":{},"body":{"controllers/AuthController.html":{}}}],["publisheddate",{"_index":654,"title":{},"body":{"classes/Comment.html":{},"interfaces/IComment.html":{}}}],["qualification",{"_index":122,"title":{},"body":{"classes/Admin.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["qualification.diploma",{"_index":1186,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["qualification.masters",{"_index":1204,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["qualification.phd",{"_index":1178,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["query",{"_index":262,"title":{},"body":{"controllers/AdminController.html":{}}}],["query('city",{"_index":284,"title":{},"body":{"controllers/AdminController.html":{}}}],["query('limit",{"_index":287,"title":{},"body":{"controllers/AdminController.html":{}}}],["query('page",{"_index":286,"title":{},"body":{"controllers/AdminController.html":{}}}],["query('role",{"_index":285,"title":{},"body":{"controllers/AdminController.html":{}}}],["quetta",{"_index":1637,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["radius",{"_index":923,"title":{},"body":{"injectables/MailerService.html":{}}}],["rate",{"_index":206,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["rates",{"_index":195,"title":{},"body":{"classes/Admin.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{}}}],["ratetype",{"_index":119,"title":{},"body":{"classes/Admin.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["ratetype.hourly",{"_index":1177,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["ratetype.monthly",{"_index":211,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{}}}],["rawalpindi",{"_index":1635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["readonly",{"_index":278,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["received",{"_index":961,"title":{},"body":{"injectables/MailerService.html":{}}}],["record",{"_index":893,"title":{},"body":{"injectables/MailerService.html":{}}}],["ref",{"_index":16,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"classes/Message.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["referencing",{"_index":112,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["refers",{"_index":210,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["reflect",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1073,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":168,"title":{},"body":{"classes/Admin.html":{},"injectables/AuthService.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["refreshedtoken",{"_index":514,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshedtoken.accesstoken",{"_index":518,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshedtoken.refreshtoken",{"_index":519,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken",{"_index":172,"title":{},"body":{"classes/Admin.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"injectables/RefreshTokenPipe.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["refreshtoken(refreshtoken",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken(request",{"_index":463,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokenfromcookie",{"_index":512,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokenpipe",{"_index":484,"title":{"injectables/RefreshTokenPipe.html":{}},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenPipe.html":{},"coverage.html":{}}}],["refused",{"_index":1039,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["register",{"_index":452,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":492,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":467,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":468,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{}}}],["registerdto.email",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerdto.username",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeringuser",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeringuser.save",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["reject",{"_index":976,"title":{},"body":{"injectables/MailerService.html":{}}}],["rejectaccountactivationrequest",{"_index":231,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["rejectaccountactivationrequest(@body",{"_index":301,"title":{},"body":{"controllers/AdminController.html":{}}}],["rejectaccountactivationrequest(requestdto",{"_index":252,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["religion",{"_index":1732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["req",{"_index":471,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":404,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/MailerService.html":{},"injectables/RefreshTokenPipe.html":{},"controllers/UsersController.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["request.cookies['accesstoken",{"_index":1483,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["request.cookies['refreshtoken",{"_index":513,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenPipe.html":{}}}],["request.save",{"_index":407,"title":{},"body":{"injectables/AdminService.html":{}}}],["request.user",{"_index":1423,"title":{},"body":{"controllers/UsersController.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["requestdto",{"_index":62,"title":{"classes/RequestDto.html":{}},"body":{"classes/AccountActivationRequestDto.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/RequestDto.html":{},"coverage.html":{}}}],["requestid",{"_index":63,"title":{},"body":{"classes/AccountActivationRequestDto.html":{},"classes/RequestDto.html":{}}}],["requestmethod",{"_index":318,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["requestmethod.get",{"_index":348,"title":{},"body":{"modules/AdminModule.html":{}}}],["requestmethod.post",{"_index":1438,"title":{},"body":{"modules/UsersModule.html":{}}}],["requestmodel",{"_index":389,"title":{},"body":{"injectables/AdminService.html":{}}}],["requests",{"_index":108,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["required",{"_index":18,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"injectables/HashPasswordPipe.html":{},"classes/Message.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["requiredroles",{"_index":1083,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1088,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requires",{"_index":657,"title":{},"body":{"classes/Comment.html":{}}}],["res",{"_index":472,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":89,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":455,"title":{},"body":{"controllers/AuthController.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["response.clearcookie('accesstoken",{"_index":522,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.clearcookie('refreshtoken",{"_index":523,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.cookie('accesstoken",{"_index":498,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.cookie('refreshtoken",{"_index":500,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(httpstatus.unauthorized).json",{"_index":508,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsefromauthservice",{"_index":520,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":40,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":140,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.availability",{"_index":148,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.city",{"_index":143,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.experience",{"_index":146,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.gender",{"_index":141,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.grade",{"_index":149,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.interest",{"_index":150,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.qualification",{"_index":147,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.rates",{"_index":145,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.ratetype",{"_index":144,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.students",{"_index":152,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["ret.tutors",{"_index":151,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["retrieve",{"_index":295,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UsersService.html":{}}}],["retrieved",{"_index":1464,"title":{},"body":{"injectables/UsersService.html":{}}}],["return",{"_index":101,"title":{},"body":{"modules/AccountsModule.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"modules/MessagesModule.html":{},"injectables/RefreshTokenPipe.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":237,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"injectables/RefreshTokenPipe.html":{},"guards/RolesGuard.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["reviews",{"_index":1351,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["rgba(0",{"_index":929,"title":{},"body":{"injectables/MailerService.html":{}}}],["role",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"classes/EmailDto.html":{},"interfaces/IUser.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"guards/RolesGuard.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.admin",{"_index":375,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["role.student",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StudentSeeder.html":{},"injectables/UsersService.html":{}}}],["role.tutor",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TutorSeeder.html":{}}}],["role:${role}.\\nplease",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["roles",{"_index":268,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin",{"_index":282,"title":{},"body":{"controllers/AdminController.html":{}}}],["roles(role.student",{"_index":1421,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles_key",{"_index":1081,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":1068,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["room",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TwilioService.html":{}}}],["room.sid",{"_index":1312,"title":{},"body":{"injectables/TwilioService.html":{}}}],["roomname",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{}}}],["runvalidators",{"_index":1469,"title":{},"body":{"injectables/UsersService.html":{}}}],["rural",{"_index":1644,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxjs",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["sans",{"_index":906,"title":{},"body":{"injectables/MailerService.html":{}}}],["sargodha",{"_index":1645,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sat",{"_index":1626,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sat_1pm_4pm",{"_index":1627,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sat_9am_12pm",{"_index":1625,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schema",{"_index":24,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/Comment.html":{},"classes/Message.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema.discriminator(admin.name",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedersModule.html":{},"modules/UsersModule.html":{}}}],["schema.discriminator(student.name",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedersModule.html":{},"modules/UsersModule.html":{}}}],["schema.discriminator(tutor.name",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedersModule.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"classes/Message.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["schemafactory.createforclass",{"_index":54,"title":{},"body":{"classes/AccountActivationRequest.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(account",{"_index":39,"title":{},"body":{"classes/Account.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(admin",{"_index":222,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(comment",{"_index":667,"title":{},"body":{"classes/Comment.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(message",{"_index":988,"title":{},"body":{"classes/Message.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(student",{"_index":194,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tutor",{"_index":220,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":181,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["school",{"_index":1675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["science",{"_index":1700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["secret",{"_index":333,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["secretkey",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["secure",{"_index":517,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailerService.html":{}}}],["seed",{"_index":351,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["seeded",{"_index":379,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["seedersmodule",{"_index":421,"title":{"modules/SeedersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeedersModule.html":{},"modules.html":{},"overview.html":{}}}],["seeding",{"_index":385,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"dependencies.html":{}}}],["select",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["send",{"_index":890,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendaccountactivationrequest",{"_index":232,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["sendaccountactivationrequest(accountactivationrequestdto",{"_index":255,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["sendemailverificationcode",{"_index":827,"title":{},"body":{"injectables/MailerService.html":{},"controllers/UsersController.html":{}}}],["sendemailverificationcode(@body",{"_index":1415,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendemailverificationcode(emaildto",{"_index":837,"title":{},"body":{"injectables/MailerService.html":{},"controllers/UsersController.html":{}}}],["sending",{"_index":887,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendmail",{"_index":828,"title":{},"body":{"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["sendmail(maildto",{"_index":839,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendphonenumberverificationcode",{"_index":1256,"title":{},"body":{"injectables/TwilioService.html":{},"controllers/UsersController.html":{}}}],["sendphonenumberverificationcode(phonenumberdto",{"_index":1271,"title":{},"body":{"injectables/TwilioService.html":{},"controllers/UsersController.html":{}}}],["sent",{"_index":405,"title":{},"body":{"injectables/AdminService.html":{},"injectables/MailerService.html":{},"injectables/TwilioService.html":{},"injectables/UsersService.html":{}}}],["serif",{"_index":907,"title":{},"body":{"injectables/MailerService.html":{}}}],["server",{"_index":998,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["service",{"_index":853,"title":{},"body":{"injectables/MailerService.html":{}}}],["session",{"_index":170,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["setmetadata(roles_key",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadow",{"_index":926,"title":{},"body":{"injectables/MailerService.html":{}}}],["sialkot",{"_index":1641,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["signoptions",{"_index":335,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/MessagesModule.html":{},"modules/UsersModule.html":{}}}],["size",{"_index":939,"title":{},"body":{"injectables/MailerService.html":{}}}],["skardu",{"_index":1653,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["skip",{"_index":1457,"title":{},"body":{"injectables/UsersService.html":{}}}],["slots",{"_index":214,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["smith",{"_index":1182,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["sociology",{"_index":1722,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["socket",{"_index":1009,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["socket.io",{"_index":1022,"title":{},"body":{"classes/MessagesGateway.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"modules/CommentsModule.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"modules/MessagesModule.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["specific",{"_index":785,"title":{},"body":{"interfaces/IUser.html":{}}}],["sports",{"_index":190,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["src/.../account.schema.ts",{"_index":1765,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../admin.schema.ts",{"_index":1764,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../availability.enum.ts",{"_index":1597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../city.enum.ts",{"_index":1598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../comment.schema.ts",{"_index":1766,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../connect.enum.ts",{"_index":1599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../gender.constant.ts",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gender.enum.ts",{"_index":1600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../grade.enum.ts",{"_index":1601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../interest.enum.ts",{"_index":1602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../message.schema.ts",{"_index":1767,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../qualification.enum.ts",{"_index":1603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../rate",{"_index":1604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.constant.ts",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.decorator.ts",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":1606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.schema.ts",{"_index":1768,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/constants/gender.constant.ts",{"_index":1497,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/role.constant",{"_index":1082,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/constants/role.constant.ts",{"_index":1501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/role.decorator",{"_index":269,"title":{},"body":{"controllers/AdminController.html":{},"controllers/UsersController.html":{}}}],["src/common/decorators/role.decorator.ts",{"_index":1502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/enums/availability.enum",{"_index":131,"title":{},"body":{"classes/Admin.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{}}}],["src/common/enums/availability.enum.ts",{"_index":1607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/city.enum",{"_index":125,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["src/common/enums/city.enum.ts",{"_index":1631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/connect.enum",{"_index":729,"title":{},"body":{"classes/ConnectDto.html":{},"interfaces/IConnect.html":{}}}],["src/common/enums/connect.enum.ts",{"_index":1668,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/gender.enum",{"_index":118,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["src/common/enums/gender.enum.ts",{"_index":1669,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/grade.enum",{"_index":127,"title":{},"body":{"classes/Admin.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["src/common/enums/grade.enum.ts",{"_index":1672,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/interest.enum",{"_index":129,"title":{},"body":{"classes/Admin.html":{},"interfaces/IMail.html":{},"interfaces/IUser.html":{},"classes/MailDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["src/common/enums/interest.enum.ts",{"_index":1699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/qualification.enum",{"_index":123,"title":{},"body":{"classes/Admin.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{}}}],["src/common/enums/qualification.enum.ts",{"_index":1737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/rate",{"_index":120,"title":{},"body":{"classes/Admin.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["src/common/enums/role.enum",{"_index":132,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"classes/EmailDto.html":{},"interfaces/IUser.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["src/common/enums/role.enum.ts",{"_index":1744,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/guards/role.guard.ts",{"_index":1070,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guards/role.guard.ts:10",{"_index":1077,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/role.guard.ts:7",{"_index":1074,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/interfaces/response.interface",{"_index":1405,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/common/interfaces/response.interface.ts",{"_index":780,"title":{},"body":{"interfaces/IResponse.html":{},"coverage.html":{}}}],["src/common/middlewares/verify",{"_index":323,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"coverage.html":{}}}],["src/common/pipes/hash",{"_index":475,"title":{},"body":{"controllers/AuthController.html":{},"injectables/HashPasswordPipe.html":{},"coverage.html":{}}}],["src/common/pipes/refresh",{"_index":485,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenPipe.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1506,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/accounts/account.schema.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/accounts/account.schema.ts:10",{"_index":21,"title":{},"body":{"classes/Account.html":{}}}],["src/modules/accounts/accounts.controller.ts",{"_index":71,"title":{},"body":{"controllers/AccountsController.html":{},"coverage.html":{}}}],["src/modules/accounts/accounts.module.ts",{"_index":91,"title":{},"body":{"modules/AccountsModule.html":{}}}],["src/modules/accounts/accounts.service.ts",{"_index":104,"title":{},"body":{"injectables/AccountsService.html":{},"coverage.html":{}}}],["src/modules/accounts/dtos/account.dto.ts",{"_index":65,"title":{},"body":{"classes/AccountDto.html":{},"coverage.html":{}}}],["src/modules/accounts/dtos/account.dto.ts:6",{"_index":67,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/modules/accounts/interfaces/account.interface.ts",{"_index":766,"title":{},"body":{"interfaces/IAccount.html":{},"coverage.html":{}}}],["src/modules/admin/admin.controller.ts",{"_index":224,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/modules/admin/admin.controller.ts:27",{"_index":250,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/modules/admin/admin.controller.ts:34",{"_index":246,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/modules/admin/admin.controller.ts:51",{"_index":240,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/modules/admin/admin.controller.ts:56",{"_index":257,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/modules/admin/admin.controller.ts:65",{"_index":235,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/modules/admin/admin.controller.ts:70",{"_index":254,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/modules/admin/admin.module.ts",{"_index":310,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.module.ts:59",{"_index":316,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.module.ts:63",{"_index":314,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/modules/admin/admin.schema.ts",{"_index":43,"title":{},"body":{"classes/AccountActivationRequest.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/admin/admin.schema.ts:12",{"_index":49,"title":{},"body":{"classes/AccountActivationRequest.html":{}}}],["src/modules/admin/admin.schema.ts:15",{"_index":48,"title":{},"body":{"classes/AccountActivationRequest.html":{}}}],["src/modules/admin/admin.service.ts",{"_index":386,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/modules/admin/admin.service.ts:12",{"_index":388,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/admin.service.ts:19",{"_index":392,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/admin.service.ts:23",{"_index":394,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/admin.service.ts:48",{"_index":390,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/admin.service.ts:66",{"_index":393,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/admin.service.ts:76",{"_index":391,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/modules/admin/dtos/admin.dto.ts",{"_index":56,"title":{},"body":{"classes/AccountActivationRequestDto.html":{},"classes/RequestDto.html":{},"coverage.html":{}}}],["src/modules/admin/dtos/admin.dto.ts:13",{"_index":1066,"title":{},"body":{"classes/RequestDto.html":{}}}],["src/modules/admin/dtos/admin.dto.ts:7",{"_index":58,"title":{},"body":{"classes/AccountActivationRequestDto.html":{}}}],["src/modules/admin/interfaces/admin.interface.ts",{"_index":767,"title":{},"body":{"interfaces/IAccountActivationRequest.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":447,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:24",{"_index":470,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:29",{"_index":457,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:59",{"_index":466,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:84",{"_index":461,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":527,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service",{"_index":1482,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:112",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:119",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:160",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:20",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:207",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:28",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:32",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:39",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:62",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:73",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:78",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:83",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:88",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:93",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dtos/auth.dto.ts",{"_index":741,"title":{},"body":{"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:13",{"_index":1065,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:18",{"_index":1061,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:23",{"_index":1063,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:27",{"_index":1062,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:32",{"_index":1064,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:39",{"_index":787,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:43",{"_index":788,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:50",{"_index":1053,"title":{},"body":{"classes/PhoneNumberDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:55",{"_index":1054,"title":{},"body":{"classes/PhoneNumberDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:62",{"_index":1491,"title":{},"body":{"classes/VerifyPhoneNumberCodeDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:66",{"_index":1490,"title":{},"body":{"classes/VerifyPhoneNumberCodeDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:71",{"_index":1492,"title":{},"body":{"classes/VerifyPhoneNumberCodeDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:78",{"_index":743,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:83",{"_index":745,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:90",{"_index":1488,"title":{},"body":{"classes/VerifyEmailCodeDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:94",{"_index":1487,"title":{},"body":{"classes/VerifyEmailCodeDto.html":{}}}],["src/modules/auth/dtos/auth.dto.ts:99",{"_index":1489,"title":{},"body":{"classes/VerifyEmailCodeDto.html":{}}}],["src/modules/auth/interfaces/auth.interface.ts",{"_index":772,"title":{},"body":{"interfaces/ILogin.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IVerifyCode.html":{},"coverage.html":{}}}],["src/modules/comments/comment.schema.ts",{"_index":651,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/comments/comment.schema.ts:10",{"_index":662,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/comments/comment.schema.ts:16",{"_index":659,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/comments/comment.schema.ts:22",{"_index":661,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/comments/comment.schema.ts:29",{"_index":655,"title":{},"body":{"classes/Comment.html":{}}}],["src/modules/comments/comments.controller.ts",{"_index":669,"title":{},"body":{"controllers/CommentsController.html":{},"coverage.html":{}}}],["src/modules/comments/comments.controller.ts:11",{"_index":681,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/modules/comments/comments.controller.ts:16",{"_index":684,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/modules/comments/comments.controller.ts:21",{"_index":676,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/modules/comments/comments.controller.ts:26",{"_index":679,"title":{},"body":{"controllers/CommentsController.html":{}}}],["src/modules/comments/comments.module.ts",{"_index":700,"title":{},"body":{"modules/CommentsModule.html":{}}}],["src/modules/comments/comments.service.ts",{"_index":704,"title":{},"body":{"injectables/CommentsService.html":{},"coverage.html":{}}}],["src/modules/comments/comments.service.ts:14",{"_index":710,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/modules/comments/comments.service.ts:19",{"_index":711,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/modules/comments/comments.service.ts:30",{"_index":708,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/modules/comments/comments.service.ts:36",{"_index":709,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/modules/comments/comments.service.ts:8",{"_index":706,"title":{},"body":{"injectables/CommentsService.html":{}}}],["src/modules/comments/dtos/comment.dto.ts",{"_index":731,"title":{},"body":{"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["src/modules/comments/dtos/comment.dto.ts:13",{"_index":736,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["src/modules/comments/dtos/comment.dto.ts:17",{"_index":735,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["src/modules/comments/dtos/comment.dto.ts:21",{"_index":733,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["src/modules/comments/interfaces/comment.interface.ts",{"_index":768,"title":{},"body":{"interfaces/IComment.html":{},"coverage.html":{}}}],["src/modules/mailer/dtos/mail.dto.ts",{"_index":790,"title":{},"body":{"classes/MailDto.html":{},"coverage.html":{}}}],["src/modules/mailer/dtos/mail.dto.ts:17",{"_index":805,"title":{},"body":{"classes/MailDto.html":{}}}],["src/modules/mailer/dtos/mail.dto.ts:21",{"_index":794,"title":{},"body":{"classes/MailDto.html":{}}}],["src/modules/mailer/dtos/mail.dto.ts:25",{"_index":803,"title":{},"body":{"classes/MailDto.html":{}}}],["src/modules/mailer/dtos/mail.dto.ts:29",{"_index":798,"title":{},"body":{"classes/MailDto.html":{}}}],["src/modules/mailer/dtos/mail.dto.ts:34",{"_index":802,"title":{},"body":{"classes/MailDto.html":{}}}],["src/modules/mailer/dtos/mail.dto.ts:38",{"_index":792,"title":{},"body":{"classes/MailDto.html":{}}}],["src/modules/mailer/dtos/mail.dto.ts:42",{"_index":796,"title":{},"body":{"classes/MailDto.html":{}}}],["src/modules/mailer/interfaces/mail.interface.ts",{"_index":777,"title":{},"body":{"interfaces/IMail.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.module.ts",{"_index":815,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/modules/mailer/mailer.service.ts",{"_index":818,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["src/modules/mailer/mailer.service.ts:112",{"_index":842,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:143",{"_index":840,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:16",{"_index":843,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:17",{"_index":845,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:20",{"_index":830,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:44",{"_index":836,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:48",{"_index":833,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:52",{"_index":834,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:56",{"_index":835,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:60",{"_index":832,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:64",{"_index":831,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/mailer/mailer.service.ts:68",{"_index":838,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/modules/messages/dtos/message.dto.ts",{"_index":990,"title":{},"body":{"classes/MessageDto.html":{},"coverage.html":{}}}],["src/modules/messages/dtos/message.dto.ts:12",{"_index":991,"title":{},"body":{"classes/MessageDto.html":{}}}],["src/modules/messages/dtos/message.dto.ts:8",{"_index":992,"title":{},"body":{"classes/MessageDto.html":{}}}],["src/modules/messages/interfaces/message.interface.ts",{"_index":779,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{}}}],["src/modules/messages/message.schema.ts",{"_index":982,"title":{},"body":{"classes/Message.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/messages/message.schema.ts:12",{"_index":984,"title":{},"body":{"classes/Message.html":{}}}],["src/modules/messages/message.schema.ts:15",{"_index":983,"title":{},"body":{"classes/Message.html":{}}}],["src/modules/messages/messages.gateway.ts",{"_index":994,"title":{},"body":{"classes/MessagesGateway.html":{},"coverage.html":{}}}],["src/modules/messages/messages.gateway.ts:25",{"_index":1004,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/modules/messages/messages.gateway.ts:32",{"_index":1017,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/modules/messages/messages.gateway.ts:36",{"_index":1007,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/modules/messages/messages.gateway.ts:40",{"_index":1010,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/modules/messages/messages.gateway.ts:65",{"_index":1013,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/modules/messages/messages.gateway.ts:70",{"_index":1016,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["src/modules/messages/messages.module.ts",{"_index":1046,"title":{},"body":{"modules/MessagesModule.html":{}}}],["src/modules/messages/messages.module.ts:35",{"_index":1047,"title":{},"body":{"modules/MessagesModule.html":{}}}],["src/modules/seeders/admin.seeder.ts",{"_index":350,"title":{},"body":{"injectables/AdminSeeder.html":{},"coverage.html":{}}}],["src/modules/seeders/admin.seeder.ts:10",{"_index":354,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["src/modules/seeders/admin.seeder.ts:15",{"_index":356,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["src/modules/seeders/admin.seeder.ts:19",{"_index":357,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["src/modules/seeders/seeders.module.ts",{"_index":1095,"title":{},"body":{"modules/SeedersModule.html":{}}}],["src/modules/seeders/student.seeder.ts",{"_index":1102,"title":{},"body":{"injectables/StudentSeeder.html":{},"coverage.html":{}}}],["src/modules/seeders/student.seeder.ts:13",{"_index":1103,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["src/modules/seeders/student.seeder.ts:18",{"_index":1104,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["src/modules/seeders/student.seeder.ts:21",{"_index":1105,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["src/modules/seeders/tutor.seeder.ts",{"_index":1165,"title":{},"body":{"injectables/TutorSeeder.html":{},"coverage.html":{}}}],["src/modules/seeders/tutor.seeder.ts:15",{"_index":1166,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["src/modules/seeders/tutor.seeder.ts:20",{"_index":1167,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["src/modules/seeders/tutor.seeder.ts:23",{"_index":1168,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["src/modules/twilio/twilio.controller.ts",{"_index":1225,"title":{},"body":{"controllers/TwilioController.html":{},"coverage.html":{}}}],["src/modules/twilio/twilio.controller.ts:13",{"_index":1230,"title":{},"body":{"controllers/TwilioController.html":{}}}],["src/modules/twilio/twilio.controller.ts:8",{"_index":1232,"title":{},"body":{"controllers/TwilioController.html":{}}}],["src/modules/twilio/twilio.module.ts",{"_index":1242,"title":{},"body":{"modules/TwilioModule.html":{}}}],["src/modules/twilio/twilio.module.ts:14",{"_index":1243,"title":{},"body":{"modules/TwilioModule.html":{}}}],["src/modules/twilio/twilio.service.ts",{"_index":1246,"title":{},"body":{"injectables/TwilioService.html":{},"coverage.html":{}}}],["src/modules/twilio/twilio.service.ts:103",{"_index":1274,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:130",{"_index":1260,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:140",{"_index":1261,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:152",{"_index":1262,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:20",{"_index":1259,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:31",{"_index":1270,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:35",{"_index":1263,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:40",{"_index":1264,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:45",{"_index":1266,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:49",{"_index":1267,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:54",{"_index":1269,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:61",{"_index":1265,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:68",{"_index":1268,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/twilio/twilio.service.ts:74",{"_index":1272,"title":{},"body":{"injectables/TwilioService.html":{}}}],["src/modules/users/dtos/connect.dto.ts",{"_index":723,"title":{},"body":{"classes/ConnectDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/connect.dto.ts:12",{"_index":726,"title":{},"body":{"classes/ConnectDto.html":{}}}],["src/modules/users/dtos/connect.dto.ts:8",{"_index":727,"title":{},"body":{"classes/ConnectDto.html":{}}}],["src/modules/users/dtos/user.dto.ts",{"_index":1327,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dtos/user.dto.ts:100",{"_index":1332,"title":{},"body":{"classes/UpdateAdminDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:17",{"_index":1370,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:21",{"_index":1362,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:25",{"_index":1368,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:29",{"_index":1367,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:33",{"_index":1363,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:37",{"_index":1369,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:41",{"_index":1364,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:45",{"_index":1366,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:49",{"_index":1365,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:55",{"_index":1352,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:59",{"_index":1353,"title":{},"body":{"classes/UpdateStudentDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:65",{"_index":1357,"title":{},"body":{"classes/UpdateTutorDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:69",{"_index":1361,"title":{},"body":{"classes/UpdateTutorDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:73",{"_index":1355,"title":{},"body":{"classes/UpdateTutorDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:78",{"_index":1360,"title":{},"body":{"classes/UpdateTutorDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:82",{"_index":1354,"title":{},"body":{"classes/UpdateTutorDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:86",{"_index":1358,"title":{},"body":{"classes/UpdateTutorDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:92",{"_index":1333,"title":{},"body":{"classes/UpdateAdminDto.html":{}}}],["src/modules/users/dtos/user.dto.ts:96",{"_index":1331,"title":{},"body":{"classes/UpdateAdminDto.html":{}}}],["src/modules/users/interfaces/connect.interface.ts",{"_index":770,"title":{},"body":{"interfaces/IConnect.html":{},"coverage.html":{}}}],["src/modules/users/interfaces/user.interface.ts",{"_index":782,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/modules/users/user.schema.ts",{"_index":106,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/user.schema.ts:105",{"_index":1383,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:111",{"_index":1373,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:117",{"_index":1378,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:123",{"_index":1372,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:129",{"_index":1380,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:135",{"_index":1379,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:141",{"_index":1374,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:147",{"_index":1371,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:153",{"_index":1382,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:159",{"_index":1381,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:165",{"_index":1375,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:171",{"_index":1377,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:177",{"_index":1376,"title":{},"body":{"classes/User.html":{}}}],["src/modules/users/user.schema.ts:194",{"_index":1099,"title":{},"body":{"classes/Student.html":{}}}],["src/modules/users/user.schema.ts:200",{"_index":1100,"title":{},"body":{"classes/Student.html":{}}}],["src/modules/users/user.schema.ts:206",{"_index":1101,"title":{},"body":{"classes/Student.html":{}}}],["src/modules/users/user.schema.ts:223",{"_index":1161,"title":{},"body":{"classes/Tutor.html":{}}}],["src/modules/users/user.schema.ts:229",{"_index":1159,"title":{},"body":{"classes/Tutor.html":{}}}],["src/modules/users/user.schema.ts:235",{"_index":1160,"title":{},"body":{"classes/Tutor.html":{}}}],["src/modules/users/user.schema.ts:238",{"_index":1164,"title":{},"body":{"classes/Tutor.html":{}}}],["src/modules/users/user.schema.ts:245",{"_index":1162,"title":{},"body":{"classes/Tutor.html":{}}}],["src/modules/users/user.schema.ts:251",{"_index":1163,"title":{},"body":{"classes/Tutor.html":{}}}],["src/modules/users/user.schema.ts:257",{"_index":1158,"title":{},"body":{"classes/Tutor.html":{}}}],["src/modules/users/user.schema.ts:274",{"_index":114,"title":{},"body":{"classes/Admin.html":{}}}],["src/modules/users/user.schema.ts:280",{"_index":109,"title":{},"body":{"classes/Admin.html":{}}}],["src/modules/users/users.controller.ts",{"_index":1385,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:39",{"_index":1394,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:44",{"_index":1393,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:51",{"_index":1399,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:60",{"_index":1396,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:65",{"_index":1401,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:70",{"_index":1403,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:80",{"_index":1390,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":1429,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.module.ts:72",{"_index":1431,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.module.ts:76",{"_index":1430,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":1439,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:109",{"_index":1452,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:131",{"_index":1444,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:18",{"_index":1443,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:25",{"_index":1453,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:29",{"_index":1445,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:71",{"_index":1450,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:85",{"_index":1449,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:97",{"_index":1447,"title":{},"body":{"injectables/UsersService.html":{}}}],["started",{"_index":1748,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":1719,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":502,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IResponse.html":{},"injectables/UsersService.html":{}}}],["storedcode",{"_index":896,"title":{},"body":{"injectables/MailerService.html":{},"injectables/TwilioService.html":{}}}],["string",{"_index":66,"title":{},"body":{"classes/AccountDto.html":{},"classes/Admin.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"interfaces/IComment.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":135,"title":{"classes/Student.html":{}},"body":{"classes/Admin.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/MailerService.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["student.save",{"_index":1155,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["student.seeder",{"_index":1098,"title":{},"body":{"modules/SeedersModule.html":{}}}],["studentdata",{"_index":1144,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["studentdata.city",{"_index":1153,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["studentdata.email",{"_index":1146,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["studentdata.firstname",{"_index":1149,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["studentdata.gender",{"_index":1152,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["studentdata.grade",{"_index":1154,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["studentdata.lastname",{"_index":1150,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["studentdata.phonenumber",{"_index":1151,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["studentdata.username",{"_index":1148,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["studentexists",{"_index":1145,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["studentpassword123",{"_index":1112,"title":{},"body":{"injectables/StudentSeeder.html":{}}}],["students",{"_index":212,"title":{},"body":{"classes/Admin.html":{},"injectables/MailerService.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["studentschema",{"_index":193,"title":{},"body":{"classes/Admin.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentseeder",{"_index":1093,"title":{"injectables/StudentSeeder.html":{}},"body":{"modules/SeedersModule.html":{},"injectables/StudentSeeder.html":{},"coverage.html":{},"overview.html":{}}}],["studies",{"_index":1733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subject",{"_index":879,"title":{},"body":{"injectables/MailerService.html":{}}}],["subjects",{"_index":205,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["subscribemessage",{"_index":1019,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["subscribemessage('message",{"_index":1015,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["substring(0",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["successful",{"_index":504,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TwilioService.html":{}}}],["successfully",{"_index":380,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"injectables/UsersService.html":{}}}],["sukkur",{"_index":1648,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["summary",{"_index":283,"title":{},"body":{"controllers/AdminController.html":{}}}],["sun",{"_index":1629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sun_1pm_4pm",{"_index":1630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sun_9am_12pm",{"_index":1628,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":1750,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1751,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["swat",{"_index":1666,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["switch",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["t",{"_index":781,"title":{},"body":{"interfaces/IResponse.html":{}}}],["table",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["taught",{"_index":213,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["teaching",{"_index":202,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["team",{"_index":979,"title":{},"body":{"injectables/MailerService.html":{}}}],["text",{"_index":881,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.adminservice.approveaccountactivationrequest(requestdto",{"_index":300,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findallaverificationrequests",{"_index":297,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.rejectaccountactivationrequest(requestdto",{"_index":302,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.sendaccountactivationrequest",{"_index":298,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.authservice.generateverificationcode",{"_index":873,"title":{},"body":{"injectables/MailerService.html":{},"injectables/TwilioService.html":{}}}],["this.authservice.getaccesstoken",{"_index":1033,"title":{},"body":{"classes/MessagesGateway.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["this.authservice.login(logindto",{"_index":495,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(userid",{"_index":521,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtoken",{"_index":515,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registerdto",{"_index":493,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.commentmodel",{"_index":714,"title":{},"body":{"injectables/CommentsService.html":{}}}],["this.commentmodel.find().populate('comments').exec",{"_index":713,"title":{},"body":{"injectables/CommentsService.html":{}}}],["this.commentmodel.findbyidanddelete(commentid).exec",{"_index":721,"title":{},"body":{"injectables/CommentsService.html":{}}}],["this.commentsservice.createcomment(createcommentdto",{"_index":694,"title":{},"body":{"controllers/CommentsController.html":{}}}],["this.commentsservice.deletecomment(commentid",{"_index":696,"title":{},"body":{"controllers/CommentsController.html":{}}}],["this.commentsservice.findallcomments",{"_index":690,"title":{},"body":{"controllers/CommentsController.html":{}}}],["this.commentsservice.findonecomment(commentid",{"_index":692,"title":{},"body":{"controllers/CommentsController.html":{}}}],["this.configservice.get",{"_index":1286,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.configservice.get('access_token_expiry",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('access_token_secret",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('refresh_token_expiry",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('refresh_token_secret",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('smtp_host",{"_index":865,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.configservice.get('smtp_pass",{"_index":869,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.configservice.get('smtp_port",{"_index":866,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.configservice.get('smtp_secure",{"_index":867,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.configservice.get('smtp_service",{"_index":864,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.configservice.get('smtp_user",{"_index":868,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.configservice.get('twilio_account_sid",{"_index":1278,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.configservice.get('twilio_api_key",{"_index":1282,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.configservice.get('twilio_api_secret",{"_index":1284,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.configservice.get('twilio_auth_token",{"_index":1280,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.generateaccesstoken(user",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generaterefreshtoken(user",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getaccesstoken",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getaccesstokenexpiry",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getaccountsid",{"_index":1290,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.getauthtoken",{"_index":1291,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.getrefreshtoken",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getrefreshtokenexpiry",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getsmtpauthpass",{"_index":862,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.getsmtpauthuser",{"_index":860,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.getsmtphost",{"_index":856,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.getsmtpport",{"_index":858,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.getsmtpsecure",{"_index":859,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.getsmtpservice",{"_index":854,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.gettwilioapikey",{"_index":1313,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.gettwilioapisecret",{"_index":1314,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.gettwilioclient",{"_index":1296,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.gettwiliophonenumber",{"_index":1297,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(refreshtoken",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":1034,"title":{},"body":{"classes/MessagesGateway.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["this.mailerservice.sendemailverificationcode(emaildto",{"_index":1416,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.mailerservice.sendmail(maildto",{"_index":1471,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.mailerservice.verifyemailcode(verifyemailcodedto",{"_index":1418,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1084,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.requestmodel",{"_index":406,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.requestmodel.find().populate('userid').exec",{"_index":414,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.requestmodel.findbyid(requestdto.requestid",{"_index":408,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.requestmodel.findbyidanddelete(requestdto.requestid",{"_index":410,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.requestmodel.findone",{"_index":402,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.roomservice.createroom(user._id",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.server.emit('message",{"_index":1042,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["this.transporter",{"_index":852,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":885,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.twilioservice.createroom(roomname",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.twilioservice.generatetwilioaccesstoken(identity",{"_index":1237,"title":{},"body":{"controllers/TwilioController.html":{}}}],["this.twilioservice.generatetwilioaccesstoken(user.email",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.twilioservice.sendphonenumberverificationcode",{"_index":1414,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.twilioservice.verifyphonenumbercode",{"_index":1419,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usermodel",{"_index":369,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["this.usermodel.aggregate",{"_index":1460,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.countdocuments",{"_index":1459,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(decodedtoken.userid",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findbyid(userid",{"_index":1466,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate",{"_index":1468,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":365,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/UsersService.html":{}}}],["this.usermodel.findoneandupdate",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.connectuser",{"_index":1424,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findallusers(city",{"_index":290,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.usersservice.finduserbyemail(email",{"_index":870,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.usersservice.finduserbyphonenumber(phonenumber",{"_index":1294,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.usersservice.getuserbyid",{"_index":397,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.usersservice.getuserbyid(userid",{"_index":1413,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getuserbyidandupdate(request.userid",{"_index":409,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.validatepassword",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verificationstore",{"_index":863,"title":{},"body":{"injectables/MailerService.html":{},"injectables/TwilioService.html":{}}}],["this.verificationstore.delete(email",{"_index":897,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.verificationstore.delete(phonenumber",{"_index":1303,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.verificationstore.get(email",{"_index":894,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.verificationstore.get(phonenumber",{"_index":1300,"title":{},"body":{"injectables/TwilioService.html":{}}}],["this.verificationstore.set(email",{"_index":876,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.verificationstore.set(phonenumber",{"_index":1298,"title":{},"body":{"injectables/TwilioService.html":{}}}],["throw",{"_index":292,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/RefreshTokenPipe.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["thu",{"_index":1620,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["thu_1pm_4pm",{"_index":1621,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["thu_9am_12pm",{"_index":1619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["time",{"_index":658,"title":{},"body":{"classes/Comment.html":{}}}],["timestamps",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"classes/Message.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["tojson",{"_index":137,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["token",{"_index":169,"title":{},"body":{"classes/Admin.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/MessagesGateway.html":{},"injectables/RefreshTokenPipe.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"classes/User.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["token')@usepipes(refreshtokenpipe",{"_index":465,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.addgrant(videogrant",{"_index":1323,"title":{},"body":{"injectables/TwilioService.html":{}}}],["token.middleware",{"_index":325,"title":{},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{}}}],["token.middleware.ts",{"_index":1474,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{},"coverage.html":{}}}],["token.middleware.ts:13",{"_index":1480,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["token.middleware.ts:7",{"_index":1476,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["token.pipe",{"_index":487,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.pipe.ts",{"_index":1055,"title":{},"body":{"injectables/RefreshTokenPipe.html":{},"coverage.html":{}}}],["token.pipe.ts:6",{"_index":1057,"title":{},"body":{"injectables/RefreshTokenPipe.html":{}}}],["token.tojwt",{"_index":1325,"title":{},"body":{"injectables/TwilioService.html":{}}}],["token/refresh",{"_index":486,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenPipe.html":{},"coverage.html":{}}}],["tokens",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["tolowercase",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["toobject",{"_index":153,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["top",{"_index":941,"title":{},"body":{"injectables/MailerService.html":{}}}],["tostring(cryptojs.enc.hex",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["transform",{"_index":138,"title":{},"body":{"classes/Admin.html":{},"injectables/HashPasswordPipe.html":{},"injectables/RefreshTokenPipe.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["transform(request",{"_index":1056,"title":{},"body":{"injectables/RefreshTokenPipe.html":{}}}],["transform(value",{"_index":755,"title":{},"body":{"injectables/HashPasswordPipe.html":{}}}],["transformer",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["transporter",{"_index":819,"title":{},"body":{"injectables/MailerService.html":{}}}],["true",{"_index":19,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"classes/MailDto.html":{},"classes/Message.html":{},"guards/RolesGuard.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["true})@isarray({each",{"_index":801,"title":{},"body":{"classes/MailDto.html":{}}}],["try",{"_index":288,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminSeeder.html":{},"controllers/AuthController.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{}}}],["tue",{"_index":1614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tue_1pm_4pm",{"_index":1615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tue_9am_12pm",{"_index":1613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tutor",{"_index":134,"title":{"classes/Tutor.html":{}},"body":{"classes/Admin.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/MailerService.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["tutor.save",{"_index":1222,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutor.seeder",{"_index":1097,"title":{},"body":{"modules/SeedersModule.html":{}}}],["tutordata",{"_index":1206,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.availability",{"_index":1221,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.city",{"_index":1215,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.email",{"_index":1208,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.experience",{"_index":1218,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.firstname",{"_index":1211,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.gender",{"_index":1214,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.lastname",{"_index":1212,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.phonenumber",{"_index":1213,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.qualification",{"_index":1219,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.rates",{"_index":1217,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.ratetype",{"_index":1216,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.subjects",{"_index":1220,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutordata.username",{"_index":1210,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutorexists",{"_index":1207,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutorpassword123",{"_index":1175,"title":{},"body":{"injectables/TutorSeeder.html":{}}}],["tutors",{"_index":191,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{}}}],["tutorschema",{"_index":219,"title":{},"body":{"classes/Admin.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tutorseeder",{"_index":1094,"title":{"injectables/TutorSeeder.html":{}},"body":{"modules/SeedersModule.html":{},"injectables/TutorSeeder.html":{},"coverage.html":{},"overview.html":{}}}],["twilio",{"_index":1226,"title":{},"body":{"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"dependencies.html":{}}}],["twilio.controller",{"_index":1244,"title":{},"body":{"modules/TwilioModule.html":{}}}],["twilio.jwt.accesstoken",{"_index":1319,"title":{},"body":{"injectables/TwilioService.html":{}}}],["twilio.service",{"_index":1234,"title":{},"body":{"controllers/TwilioController.html":{},"modules/TwilioModule.html":{}}}],["twilio.twilio(accountsid",{"_index":1292,"title":{},"body":{"injectables/TwilioService.html":{}}}],["twilio/twilio.module",{"_index":1435,"title":{},"body":{"modules/UsersModule.html":{}}}],["twilio/twilio.service",{"_index":1407,"title":{},"body":{"controllers/UsersController.html":{}}}],["twilio_phone_number",{"_index":1287,"title":{},"body":{"injectables/TwilioService.html":{}}}],["twilio_user_phone_number",{"_index":1289,"title":{},"body":{"injectables/TwilioService.html":{}}}],["twiliocontroller",{"_index":1224,"title":{"controllers/TwilioController.html":{}},"body":{"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"coverage.html":{}}}],["twiliomodule",{"_index":422,"title":{"modules/TwilioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["twiliophonenumber",{"_index":1285,"title":{},"body":{"injectables/TwilioService.html":{}}}],["twilioservice",{"_index":1233,"title":{"injectables/TwilioService.html":{}},"body":{"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["type",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"injectables/HashPasswordPipe.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/ILogin.html":{},"interfaces/IMail.html":{},"interfaces/IMessage.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IResponse.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/MessagesGateway.html":{},"classes/PhoneNumberDto.html":{},"injectables/RefreshTokenPipe.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"guards/RolesGuard.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":121,"title":{},"body":{"classes/Admin.html":{},"interfaces/IUser.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{}}}],["type.enum.ts",{"_index":1605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":1762,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/IMessage.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/RequestDto.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":12,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/IMessage.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/RequestDto.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ui",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["ullah",{"_index":373,"title":{},"body":{"injectables/AdminSeeder.html":{}}}],["unable",{"_index":294,"title":{},"body":{"controllers/AdminController.html":{}}}],["unauthorizedexception",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{},"classes/MessagesGateway.html":{}}}],["unauthorizedexception('invalid",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('no",{"_index":1032,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["unauthorizedexception('user",{"_index":871,"title":{},"body":{"injectables/MailerService.html":{}}}],["undefined",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"classes/Comment.html":{},"classes/Message.html":{},"classes/Student.html":{},"classes/Tutor.html":{}}}],["unique",{"_index":154,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["uniquename",{"_index":1308,"title":{},"body":{"injectables/TwilioService.html":{}}}],["unknown",{"_index":238,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CommentsController.html":{},"injectables/CommentsService.html":{},"injectables/HashPasswordPipe.html":{},"injectables/MailerService.html":{},"controllers/TwilioController.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":1760,"title":{},"body":{"properties.html":{}}}],["unset",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateadmindto",{"_index":1326,"title":{"classes/UpdateAdminDto.html":{}},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["updated",{"_index":1470,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedat",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateduser",{"_index":1467,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatestudentdto",{"_index":1348,"title":{"classes/UpdateStudentDto.html":{}},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["updatetutordto",{"_index":1349,"title":{"classes/UpdateTutorDto.html":{}},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1328,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto:17",{"_index":1345,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["updateuserdto:21",{"_index":1336,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["updateuserdto:25",{"_index":1343,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["updateuserdto:29",{"_index":1342,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["updateuserdto:33",{"_index":1337,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["updateuserdto:37",{"_index":1344,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["updateuserdto:41",{"_index":1339,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["updateuserdto:45",{"_index":1341,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["updateuserdto:49",{"_index":1340,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{}}}],["uri",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":1475,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["use(request",{"_index":1477,"title":{},"body":{"injectables/VerifyAccessTokenMiddleware.html":{}}}],["usefactory",{"_index":100,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/UsersModule.html":{}}}],["usepipes",{"_index":473,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes(hashpasswordpipe",{"_index":491,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes(refreshtokenpipe",{"_index":511,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":17,"title":{"classes/User.html":{}},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"injectables/MailerService.html":{},"classes/Message.html":{},"classes/MessagesGateway.html":{},"guards/RolesGuard.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"injectables/TwilioService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user._id",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.accesstoken",{"_index":499,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.email",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.isactive",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.isphonenumberverified",{"_index":1305,"title":{},"body":{"injectables/TwilioService.html":{}}}],["user.name",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedersModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.phonenumber",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.refreshtoken",{"_index":501,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.role",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.save",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TwilioService.html":{}}}],["user.schema",{"_index":1433,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.username",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.city",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.firstname",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.gender",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.grade",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.interests",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.lastname",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.roles?.includes(role",{"_index":1089,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userdetails",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdocument",{"_index":133,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":9,"title":{},"body":{"classes/Account.html":{},"classes/AccountActivationRequest.html":{},"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Comment.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"interfaces/IAccount.html":{},"interfaces/IAccountActivationRequest.html":{},"interfaces/IComment.html":{},"interfaces/IConnect.html":{},"interfaces/IMessage.html":{},"classes/Message.html":{},"classes/MessageDto.html":{},"classes/RequestDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usermodel",{"_index":355,"title":{},"body":{"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":155,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminSeeder.html":{},"injectables/AuthService.html":{},"classes/EmailDto.html":{},"interfaces/ILogin.html":{},"interfaces/IPhoneNumber.html":{},"interfaces/IRegister.html":{},"interfaces/IUser.html":{},"interfaces/IVerifyCode.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/Student.html":{},"injectables/StudentSeeder.html":{},"classes/Tutor.html":{},"injectables/TutorSeeder.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{}}}],["users",{"_index":245,"title":{},"body":{"controllers/AdminController.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":1432,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1404,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/connect",{"_index":1437,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/interfaces/user.interface",{"_index":482,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["users/user.schema",{"_index":361,"title":{},"body":{"injectables/AdminSeeder.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/SeedersModule.html":{},"injectables/StudentSeeder.html":{},"injectables/TutorSeeder.html":{}}}],["users/users.module",{"_index":320,"title":{},"body":{"modules/AdminModule.html":{},"modules/MailerModule.html":{},"modules/TwilioModule.html":{}}}],["users/users.service",{"_index":264,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/MailerService.html":{},"injectables/TwilioService.html":{}}}],["userschema",{"_index":180,"title":{},"body":{"classes/Admin.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedersModule.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1384,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":309,"title":{"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/MailerModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":263,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/MailerService.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validatepassword",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepassword(plainpassword",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":61,"title":{},"body":{"classes/AccountActivationRequestDto.html":{},"classes/AccountDto.html":{},"classes/ConnectDto.html":{},"classes/CreateCommentDto.html":{},"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/MailDto.html":{},"classes/MessageDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"classes/RequestDto.html":{},"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"dependencies.html":{}}}],["value",{"_index":247,"title":{},"body":{"controllers/AdminController.html":{},"injectables/HashPasswordPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.password",{"_index":759,"title":{},"body":{"injectables/HashPasswordPipe.html":{}}}],["variable",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1318,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/TwilioService.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":880,"title":{},"body":{"injectables/MailerService.html":{},"injectables/TwilioService.html":{}}}],["verificationcode",{"_index":872,"title":{},"body":{"injectables/MailerService.html":{},"injectables/TwilioService.html":{}}}],["verificationstore",{"_index":820,"title":{},"body":{"injectables/MailerService.html":{},"injectables/TwilioService.html":{}}}],["verified",{"_index":176,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["verifyaccesstokenmiddleware",{"_index":322,"title":{"injectables/VerifyAccessTokenMiddleware.html":{}},"body":{"modules/AdminModule.html":{},"modules/UsersModule.html":{},"injectables/VerifyAccessTokenMiddleware.html":{},"coverage.html":{}}}],["verifyemailcode",{"_index":829,"title":{},"body":{"injectables/MailerService.html":{},"controllers/UsersController.html":{}}}],["verifyemailcode(@body",{"_index":1417,"title":{},"body":{"controllers/UsersController.html":{}}}],["verifyemailcode(verifyemailcodedto",{"_index":841,"title":{},"body":{"injectables/MailerService.html":{},"controllers/UsersController.html":{}}}],["verifyemailcodedto",{"_index":753,"title":{"classes/VerifyEmailCodeDto.html":{}},"body":{"classes/EmailDto.html":{},"classes/LoginDto.html":{},"injectables/MailerService.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"controllers/UsersController.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{}}}],["verifyphonenumbercode",{"_index":1257,"title":{},"body":{"injectables/TwilioService.html":{},"controllers/UsersController.html":{}}}],["verifyphonenumbercode(verifyphonenumbercodedto",{"_index":1273,"title":{},"body":{"injectables/TwilioService.html":{},"controllers/UsersController.html":{}}}],["verifyphonenumbercodedto",{"_index":751,"title":{"classes/VerifyPhoneNumberCodeDto.html":{}},"body":{"classes/EmailDto.html":{},"classes/LoginDto.html":{},"classes/PhoneNumberDto.html":{},"classes/RegisterDto.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"classes/VerifyEmailCodeDto.html":{},"classes/VerifyPhoneNumberCodeDto.html":{},"coverage.html":{}}}],["version",{"_index":1756,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1309,"title":{},"body":{"injectables/TwilioService.html":{},"dependencies.html":{}}}],["videogrant",{"_index":1320,"title":{},"body":{"injectables/TwilioService.html":{}}}],["videosdk.live/js",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["view",{"_index":978,"title":{},"body":{"injectables/MailerService.html":{}}}],["void",{"_index":251,"title":{},"body":{"controllers/AdminController.html":{},"modules/MessagesModule.html":{},"controllers/TwilioController.html":{},"modules/TwilioModule.html":{},"injectables/TwilioService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["wait",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["websocketgateway",{"_index":1018,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["websocketserver",{"_index":1005,"title":{},"body":{"classes/MessagesGateway.html":{}}}],["wed",{"_index":1617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wed_1pm_4pm",{"_index":1618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wed_9am_12pm",{"_index":1616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["weight",{"_index":949,"title":{},"body":{"injectables/MailerService.html":{}}}],["whether",{"_index":174,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["white",{"_index":933,"title":{},"body":{"injectables/MailerService.html":{},"injectables/StudentSeeder.html":{}}}],["width",{"_index":916,"title":{},"body":{"injectables/MailerService.html":{}}}],["yargs",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["years",{"_index":201,"title":{},"body":{"classes/Admin.html":{},"classes/Student.html":{},"classes/Tutor.html":{},"classes/User.html":{}}}],["yearsofexperience",{"_index":1350,"title":{},"body":{"classes/UpdateAdminDto.html":{},"classes/UpdateStudentDto.html":{},"classes/UpdateTutorDto.html":{},"classes/UpdateUserDto.html":{}}}],["yes",{"_index":248,"title":{},"body":{"controllers/AdminController.html":{}}}],["zoom",{"_index":88,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommentsModule.html":{},"modules/MailerModule.html":{},"modules/MessagesModule.html":{},"modules/SeedersModule.html":{},"modules/TwilioModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/accounts/account.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/accounts/account.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { IAccount } from './interfaces/account.interface';\n\nexport type AccountDocument = IAccount & Account & Document;\n\n@Schema({ timestamps: true, discriminatorKey: 'role' })\nexport class Account {\n  @Prop({ type: Types.ObjectId, ref: 'User', required: true })\n  userId: Types.ObjectId;\n}\n\nexport const AccountSchema = SchemaFactory.createForClass(Account);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountActivationRequest.html":{"url":"classes/AccountActivationRequest.html","title":"class - AccountActivationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountActivationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/admin/admin.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/admin/admin.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Types, Document } from 'mongoose';\nimport { IAccountActivationRequest } from './interfaces/admin.interface';\n\nexport type AccountActivationRequestDocument = IAccountActivationRequest &\n  AccountActivationRequest &\n  Document;\n\n@Schema({ timestamps: true })\nexport class AccountActivationRequest {\n  @Prop({ type: Types.ObjectId, ref: 'User', required: true })\n  userId: Types.ObjectId;\n\n  @Prop({ type: Boolean, default: false })\n  isActive: boolean;\n}\n\nexport const AccountActivationRequestSchema = SchemaFactory.createForClass(\n  AccountActivationRequest,\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountActivationRequestDto.html":{"url":"classes/AccountActivationRequestDto.html","title":"class - AccountActivationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountActivationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/dtos/admin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/admin/dtos/admin.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport { Types } from 'mongoose';\n\nexport class AccountActivationRequestDto {\n  @IsNotEmpty()\n  @IsMongoId()\n  userId: Types.ObjectId;\n}\n\nexport class RequestDto {\n  @IsNotEmpty()\n  @IsMongoId()\n  requestId: Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountDto.html":{"url":"classes/AccountDto.html","title":"class - AccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/accounts/dtos/account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/accounts/dtos/account.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\n\nexport class AccountDto {\n  @IsNotEmpty()\n  @IsMongoId()\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsController.html":{"url":"controllers/AccountsController.html","title":"controller - AccountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/accounts/accounts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accounts\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('accounts')\nexport class AccountsController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsModule.html":{"url":"modules/AccountsModule.html","title":"module - AccountsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_providers\n\n\n\n\nAccountsService\n\nAccountsService\n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsModule -->\n\nAccountsService->AccountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/accounts/accounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountsService } from './accounts.service';\nimport { AccountsController } from './accounts.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Account, AccountSchema } from './account.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Account.name,\n        useFactory: () => {\n          return AccountSchema;\n        },\n      },\n    ]),\n  ],\n  providers: [AccountsService],\n  controllers: [AccountsController],\n})\nexport class AccountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsService.html":{"url":"injectables/AccountsService.html","title":"injectable - AccountsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/accounts/accounts.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AccountsService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Admin.html":{"url":"classes/Admin.html","title":"class - Admin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                accounts\n                            \n                            \n                                    \n                                    Optional\n                                requests\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:280\n                        \n                    \n\n            \n                \n                    Array of ObjectIds referencing user accounts managed by the admin\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        requests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'AccountActivationRequest'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:274\n                        \n                    \n\n            \n                \n                    Array of ObjectIds referencing account activation requests handled by the admin\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { RateType } from 'src/common/enums/rate-type.enum';\nimport { Qualification } from 'src/common/enums/qualification.enum';\nimport { City } from 'src/common/enums/city.enum';\nimport { Grade } from 'src/common/enums/grade.enum';\nimport { Interest } from 'src/common/enums/interest.enum';\nimport { Availability } from 'src/common/enums/availability.enum';\nimport { Role } from 'src/common/enums/role.enum';\n\n// Type for User Document\nexport type UserDocument = Tutor & Student & User & Document;\n\n//\n// ==============================\n// BASE USER SCHEMA\n// ==============================\n//\n@Schema({\n  timestamps: true,\n  discriminatorKey: 'type',\n  // toJSON: {\n  //   transform: (doc, ret) => {\n  //     if (!ret.gender) {\n  //       delete ret.gender;\n  //     }\n  //     if (!ret.city) {\n  //       delete ret.city;\n  //     }\n  //     // if (!ret.rateType) {\n  //     //   delete ret.rateType;\n  //     // }\n  //     // if (!ret.rates) {\n  //     //   delete ret.rates;\n  //     // }\n  //     // if (!ret.experience) {\n  //     //   delete ret.experience;\n  //     // }\n  //     // if (!ret.qualification) {\n  //     //   delete ret.qualification;\n  //     // }\n  //     // if (!ret.availability) {\n  //     //   delete ret.availability;\n  //     // }\n  //     if (!ret.grade) {\n  //       delete ret.grade;\n  //     }\n  //     if (!ret.interest) {\n  //       delete ret.interest;\n  //     }\n  //     if (!ret.tutors) {\n  //       delete ret.tutors;\n  //     }\n  //     if (!ret.students) {\n  //       delete ret.students;\n  //     }\n  //     return ret;\n  //   },\n  // },\n  // toObject: {\n  //   transform: (doc, ret) => {\n  //     if (!ret.gender) {\n  //       delete ret.gender;\n  //     }\n  //     if (!ret.city) {\n  //       delete ret.city;\n  //     }\n  //     // if (!ret.rateType) {\n  //     //   delete ret.rateType;\n  //     // }\n  //     // if (!ret.rates) {\n  //     //   delete ret.rates;\n  //     // }\n  //     // if (!ret.experience) {\n  //     //   delete ret.experience;\n  //     // }\n  //     // if (!ret.qualification) {\n  //     //   delete ret.qualification;\n  //     // }\n  //     // if (!ret.availability) {\n  //     //   delete ret.availability;\n  //     // }\n  //     if (!ret.grade) {\n  //       delete ret.grade;\n  //     }\n  //     if (!ret.interest) {\n  //       delete ret.interest;\n  //     }\n  //     if (!ret.tutors) {\n  //       delete ret.tutors;\n  //     }\n  //     if (!ret.students) {\n  //       delete ret.students;\n  //     }\n  //     return ret;\n  //   },\n  // },\n})\nexport class User {\n  /**\n   * Unique username for the user\n   */\n  @Prop({ type: String, required: true, unique: true, index: true })\n  username: string;\n\n  /**\n   * FIrst name for the user\n   */\n  @Prop({ type: String })\n  firstName?: string;\n\n  /**\n   * Last name for the user\n   */\n  @Prop({ type: String })\n  lastName?: string;\n\n  /**\n   * Unique email for the user\n   */\n  @Prop({ type: String, required: true, unique: true, index: true })\n  email: string;\n\n  /**\n   * Unique phone number for the user\n   */\n  @Prop({ type: String, required: true, unique: true })\n  phoneNumber: string;\n\n  /**\n   * Encrypted password for authentication\n   */\n  @Prop({ type: String, required: true })\n  password: string;\n\n  /**\n   * Gender of the user (optional)\n   */\n  @Prop({ type: String, enum: Gender })\n  gender?: Gender;\n\n  /**\n   * City of the user (optional)\n   */\n  @Prop({ type: String, enum: City })\n  city?: City;\n\n  /**\n   * Role of the user\n   */\n  @Prop({ type: String, enum: Role })\n  role: Role;\n\n  /**\n   * Refresh token for session management\n   */\n  @Prop({ type: String })\n  refreshToken?: string;\n\n  /**\n   * Indicates whether the account is active\n   */\n  @Prop({ type: Boolean, default: false })\n  isActive: boolean;\n\n  /**\n   * Indicates whether the phone number is verified\n   */\n  @Prop({ type: Boolean, default: false })\n  isPhoneNumberVerified: boolean;\n\n  /**\n   * Indicates whether the email is verified\n   */\n  @Prop({ type: Boolean, default: false })\n  isEmailVerified: boolean;\n}\n\n// Create schema for the base User class\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n//\n// ==============================\n// STUDENT SCHEMA\n// ==============================\n//\n@Schema()\nexport class Student extends User {\n  /**\n   * Grade of the student (e.g., Grade 10, O-Level)\n   */\n  @Prop({ type: String, enum: Grade, required: true })\n  grade: Grade;\n\n  /**\n   * List of student interests (e.g., Mathematics, Sports)\n   */\n  @Prop({ type: [String], enum: Interest, required: true })\n  interests: Interest[];\n\n  /**\n   * Array of ObjectIds referencing the tutors associated with the student\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'Tutor' })\n  tutors?: Types.ObjectId[];\n}\n\n// Create schema for the Student class\nexport const StudentSchema = SchemaFactory.createForClass(Student);\n\n//\n// ==============================\n// TUTOR SCHEMA\n// ==============================\n//\n@Schema()\nexport class Tutor extends User {\n  /**\n   * Rates charged by the tutor (e.g., 1000 PKR per hour)\n   */\n  @Prop({ type: Number, required: true })\n  rates: number;\n\n  /**\n   * Number of years of teaching experience\n   */\n  @Prop({ type: Number, required: true })\n  experience: number;\n\n  /**\n   * Qualification of the tutor (e.g., MSc in Mathematics)\n   */\n  @Prop({ type: String, enum: Qualification, required: true })\n  qualification: Qualification;\n\n  @Prop({ type: [String], enum: Interest })\n  subjects?: Interest[];\n\n  /**\n   * Rate type (Hourly, Monthly, etc.)\n   * Refers to the RateType enum\n   */\n  @Prop({ type: String, enum: RateType, default: RateType.MONTHLY })\n  rateType: RateType;\n\n  /**\n   * Array of ObjectIds referencing the students taught by the tutor\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'Student' })\n  students?: Types.ObjectId[];\n\n  /**\n   * Array of availability slots (e.g., 'Monday 2-4 PM')\n   */\n  @Prop({ type: [String], enum: Availability, required: true })\n  availability: Availability[];\n}\n\n// Create schema for the Tutor class\nexport const TutorSchema = SchemaFactory.createForClass(Tutor);\n\n//\n// ==============================\n// ADMIN SCHEMA\n// ==============================\n//\n@Schema()\nexport class Admin extends User {\n  /**\n   * Array of ObjectIds referencing account activation requests handled by the admin\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'AccountActivationRequest' })\n  requests?: Types.ObjectId[];\n\n  /**\n   * Array of ObjectIds referencing user accounts managed by the admin\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'User' })\n  accounts?: Types.ObjectId[];\n}\n\n// Create schema for the Admin class\nexport const AdminSchema = SchemaFactory.createForClass(Admin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                approveAccountActivationRequest\n                            \n                            \n                                    \n                                findAllAVerificationRequests\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllUsers\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    \n                                    Async\n                                rejectAccountActivationRequest\n                            \n                            \n                                    \n                                sendAccountActivationRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        approveAccountActivationRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    approveAccountActivationRequest(requestDto: RequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('accounts/requests/approve')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/admin/admin.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestDto\n                                            \n                                                            RequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllAVerificationRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllAVerificationRequests()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('accounts/requests')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/admin/admin.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers(city?: City, role?: Role, page: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('accounts/users')@Roles(Role.ADMIN)@ApiOperation({summary: 'Get all users'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/admin/admin.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                city\n                                            \n                                                            City\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/admin/admin.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        rejectAccountActivationRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    rejectAccountActivationRequest(requestDto: RequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('accounts/requests/reject')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/admin/admin.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestDto\n                                            \n                                                            RequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sendAccountActivationRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendAccountActivationRequest(accountActivationRequestDto: AccountActivationRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('accounts/requests')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/admin/admin.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountActivationRequestDto\n                                            \n                                                            AccountActivationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpException,\n  HttpStatus,\n  OnModuleInit,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { AccountActivationRequestDto, RequestDto } from './dtos/admin.dto';\nimport { AdminService } from './admin.service';\nimport { Roles } from 'src/common/decorators/role.decorator';\nimport { Role } from 'src/common/enums/role.enum';\nimport { City } from 'src/common/enums/city.enum';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\n\n@Controller('admin')\n@ApiTags('admin')\nexport class AdminController implements OnModuleInit {\n  constructor(\n    private readonly adminService: AdminService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  onModuleInit() {\n    console.log('AdminController initialized');\n  }\n\n  @Get('accounts/users')\n  @Roles(Role.ADMIN)\n  @ApiOperation({ summary: 'Get all users' })\n  async findAllUsers(\n    @Query('city') city?: City,\n    @Query('role') role?: Role,\n    @Query('page') page: number = 1,\n    @Query('limit') limit: number = 10,\n  ) {\n    try {\n      return await this.usersService.findAllUsers(city, role, page, limit);\n    } catch {\n      throw new HttpException(\n        'Unable to retrieve users',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  @Get('accounts/requests')\n  findAllAVerificationRequests() {\n    return this.adminService.findAllAVerificationRequests();\n  }\n\n  @Post('accounts/requests')\n  sendAccountActivationRequest(\n    @Body() accountActivationRequestDto: AccountActivationRequestDto,\n  ) {\n    return this.adminService.sendAccountActivationRequest(\n      accountActivationRequestDto,\n    );\n  }\n\n  @Post('accounts/requests/approve')\n  async approveAccountActivationRequest(@Body() requestDto: RequestDto) {\n    return await this.adminService.approveAccountActivationRequest(requestDto);\n  }\n\n  @Post('accounts/requests/reject')\n  async rejectAccountActivationRequest(@Body() requestDto: RequestDto) {\n    return await this.adminService.rejectAccountActivationRequest(requestDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AdminModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAuthModule->AdminModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAdminModule -->\n\nUsersModule->AdminModule\n\n\n\n\n\nAdminService \n\nAdminService \n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        configure\n                        \n                    \n                \n            \n            \n                \n                        \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/admin/admin.module.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/admin/admin.module.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  OnModuleInit,\n  RequestMethod,\n} from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AdminService } from './admin.service';\nimport { UsersModule } from '../users/users.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  AccountActivationRequest,\n  AccountActivationRequestSchema,\n} from './admin.schema';\nimport { VerifyAccessTokenMiddleware } from 'src/common/middlewares/verify-access-token.middleware';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: configService.get('ACCESS_TOKEN_EXPIRY'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('REFRESH_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: configService.get('REFRESH_TOKEN_EXPIRY'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeatureAsync([\n      {\n        name: AccountActivationRequest.name,\n        useFactory: () => {\n          return AccountActivationRequestSchema;\n        },\n      },\n    ]),\n    UsersModule,\n    AuthModule,\n  ],\n  controllers: [AdminController],\n  providers: [AdminService],\n  exports: [AdminService],\n})\nexport class AdminModule implements OnModuleInit, NestModule {\n  async onModuleInit() {\n    console.log('AdminModule initialized');\n  }\n\n  async configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(VerifyAccessTokenMiddleware)\n      .forRoutes({ path: '/admin/accounts/users', method: RequestMethod.GET });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminSeeder.html":{"url":"injectables/AdminSeeder.html","title":"injectable - AdminSeeder","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminSeeder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/seeders/admin.seeder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/seeders/admin.seeder.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/seeders/admin.seeder.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/seeders/admin.seeder.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport * as bcrypt from 'bcryptjs';\nimport { Role } from 'src/common/enums/role.enum';\nimport { User, UserDocument } from '../users/user.schema';\nimport { Gender } from 'src/common/enums/gender.enum';\n\n@Injectable()\nexport class AdminSeeder implements OnModuleInit {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model,\n  ) {}\n\n  async onModuleInit() {\n    console.log('AdminSeeder initialized');\n  }\n\n  async seed() {\n    try {\n      const adminExists = await this.userModel.findOne({\n        email: 'm.asadullah@efat.io',\n      });\n\n      if (!adminExists) {\n        const hashedPassword = await bcrypt.hash('adminPassword123', 10);\n\n        const admin = new this.userModel({\n          username: 'asadullah',\n          firstName: 'Muhammad',\n          lastName: 'Asad Ullah',\n          email: 'm.asadullah@efat.io',\n          phoneNumber: '+923390113141',\n          password: hashedPassword,\n          role: Role.ADMIN,\n          type: 'Admin',\n          gender: Gender.MALE,\n          isActive: true,\n          isPhoneNumberVerified: true,\n          isEmailVerified: true,\n        });\n\n        await admin.save();\n        console.log('Admin user has been seeded successfully');\n      } else {\n        console.log('Admin user already exists');\n      }\n    } catch (error) {\n      console.error('Error seeding admin user:', error);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                approveAccountActivationRequest\n                            \n                            \n                                    Async\n                                findAllAVerificationRequests\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                rejectAccountActivationRequest\n                            \n                            \n                                    Async\n                                sendAccountActivationRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(requestModel: Model, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/admin/admin.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        approveAccountActivationRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    approveAccountActivationRequest(requestDto: RequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/admin/admin.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestDto\n                                            \n                                                            RequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllAVerificationRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllAVerificationRequests()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/admin/admin.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/admin/admin.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        rejectAccountActivationRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    rejectAccountActivationRequest(requestDto: RequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/admin/admin.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestDto\n                                            \n                                                            RequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendAccountActivationRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendAccountActivationRequest(accountActivationRequestDto: AccountActivationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/admin/admin.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountActivationRequestDto\n                                            \n                                                            AccountActivationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport {\n  AccountActivationRequest,\n  AccountActivationRequestDocument,\n} from './admin.schema';\nimport { UsersService } from '../users/users.service';\nimport { AccountActivationRequestDto, RequestDto } from './dtos/admin.dto';\n\n@Injectable()\nexport class AdminService implements OnModuleInit {\n  constructor(\n    @InjectModel(AccountActivationRequest.name)\n    private readonly requestModel: Model,\n    private readonly usersService: UsersService,\n  ) {}\n\n  async onModuleInit() {\n    console.log('AdminService initialized');\n  }\n\n  async sendAccountActivationRequest(\n    accountActivationRequestDto: AccountActivationRequestDto,\n  ) {\n    const user = await this.usersService.getUserById(\n      accountActivationRequestDto.userId,\n    );\n\n    if (!user) {\n      throw new Error('User not found');\n    }\n\n    const existingRequest = await this.requestModel.findOne({\n      userId: accountActivationRequestDto.userId,\n    });\n\n    if (existingRequest) {\n      throw new Error('Verification request already sent');\n    }\n\n    const request = new this.requestModel({ ...accountActivationRequestDto });\n    await request.save();\n\n    return request;\n  }\n\n  async approveAccountActivationRequest(requestDto: RequestDto) {\n    const request = await this.requestModel.findById(requestDto.requestId);\n\n    if (!request) {\n      throw new Error('Verification request not found');\n    }\n\n    await this.usersService.getUserByIdAndUpdate(request.userId, {\n      isActive: true,\n    });\n\n    await this.requestModel.findByIdAndDelete(requestDto.requestId);\n\n    return {\n      message: 'Account activation request approved successfully',\n    };\n  }\n\n  async rejectAccountActivationRequest(requestDto: RequestDto) {\n    const request = await this.requestModel.findById(requestDto.requestId);\n\n    if (!request) {\n      throw new Error('Activation request not found');\n    }\n\n    return this.requestModel.findByIdAndDelete(requestDto.requestId);\n  }\n\n  async findAllAVerificationRequests() {\n    return this.requestModel.find().populate('userId').exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCommentsModule\n\nCommentsModule\n\nAppModule -->\n\nCommentsModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMessagesModule\n\nMessagesModule\n\nAppModule -->\n\nMessagesModule->AppModule\n\n\n\n\n\nSeedersModule\n\nSeedersModule\n\nAppModule -->\n\nSeedersModule->AppModule\n\n\n\n\n\nTwilioModule\n\nTwilioModule\n\nAppModule -->\n\nTwilioModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CommentsModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            MessagesModule\n                        \n                        \n                            SeedersModule\n                        \n                        \n                            TwilioModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SeedersModule } from './modules/seeders/seeders.module';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { UsersModule } from './modules/users/users.module';\nimport { AdminModule } from './modules/admin/admin.module';\n\nimport {\n  Admin,\n  AdminSchema,\n  Student,\n  StudentSchema,\n  Tutor,\n  TutorSchema,\n  User,\n  UserSchema,\n} from './modules/users/user.schema';\nimport { TwilioModule } from './modules/twilio/twilio.module';\nimport {\n  AccountActivationRequest,\n  AccountActivationRequestSchema,\n} from './modules/admin/admin.schema';\nimport { MailerModule } from './modules/mailer/mailer.module';\nimport { MessagesModule } from './modules/messages/messages.module';\nimport { CommentsModule } from './modules/comments/comments.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n      cache: true,\n    }),\n\n    MongooseModule.forRootAsync({\n      useFactory: (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n      }),\n      inject: [ConfigService],\n    }),\n\n    MongooseModule.forFeatureAsync([\n      {\n        name: User.name,\n        useFactory: () => {\n          const schema = UserSchema;\n          schema.discriminator(Student.name, StudentSchema);\n          schema.discriminator(Tutor.name, TutorSchema);\n          schema.discriminator(Admin.name, AdminSchema);\n          return schema;\n        },\n      },\n      {\n        name: AccountActivationRequest.name,\n        useFactory: () => {\n          return AccountActivationRequestSchema;\n        },\n      },\n    ]),\n    AuthModule,\n    UsersModule,\n    AdminModule,\n    SeedersModule,\n    TwilioModule,\n    MailerModule,\n    MessagesModule,\n    CommentsModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(undefined: literal type, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('refresh-token')@UsePipes(RefreshTokenPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@UsePipes(HashPasswordPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  Post,\n  Req,\n  Res,\n  UsePipes,\n} from '@nestjs/common';\nimport { HashPasswordPipe } from 'src/common/pipes/hash-password/hash-password.pipe';\nimport { LoginDto, RegisterDto } from './dtos/auth.dto';\nimport { AuthService } from './auth.service';\nimport { IUser } from '../users/interfaces/user.interface';\nimport { Response, Request } from 'express';\nimport { RefreshTokenPipe } from 'src/common/pipes/refresh-token/refresh-token.pipe';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('register')\n  @UsePipes(HashPasswordPipe)\n  async register(@Body() registerDto: RegisterDto) {\n    return await this.authService.register(registerDto);\n  }\n\n  @Post('login')\n  async login(\n    @Body() loginDto: LoginDto,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    try {\n      const user = await this.authService.login(loginDto);\n\n      const cookieOptions = {\n        httpOnly: true,\n      };\n\n      response.cookie('accessToken', user.accessToken, cookieOptions);\n      response.cookie('refreshToken', user.refreshToken, cookieOptions);\n\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'Login successful',\n        data: null,\n        accessToken: user.accessToken,\n        refreshToken: user.refreshToken,\n      };\n    } catch {\n      response.status(HttpStatus.UNAUTHORIZED).json({\n        message: 'Invalid credentials or login error',\n      });\n    }\n  }\n\n  @Get('refresh-token')\n  @UsePipes(RefreshTokenPipe)\n  public async refreshToken(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ): Promise {\n    const refreshTokenFromCookie = request.cookies['refreshToken'];\n\n    const refreshedToken = await this.authService.refreshToken(\n      refreshTokenFromCookie,\n    );\n\n    const Options = {\n      httpOnly: true,\n      secure: true,\n    };\n\n    response.cookie('accessToken', refreshedToken.accessToken, Options);\n    response.cookie('refreshToken', refreshedToken.refreshToken, Options);\n\n    return {\n      accessToken: refreshedToken.accessToken,\n      refreshToken: refreshedToken.refreshToken,\n    };\n  }\n\n  @Post('logout')\n  async logout(\n    @Body() { userId }: { userId: string },\n    @Res({ passthrough: true }) response: Response,\n  ): Promise {\n    const responseFromAuthService = await this.authService.logout(userId);\n\n    const cookieOptions = {\n      httpOnly: true,\n      secure: true,\n    };\n\n    if (responseFromAuthService) {\n      {\n        response.clearCookie('accessToken', cookieOptions);\n        response.clearCookie('refreshToken', cookieOptions);\n      }\n      return responseFromAuthService;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  Admin,\n  AdminSchema,\n  Student,\n  StudentSchema,\n  Tutor,\n  TutorSchema,\n  User,\n  UserSchema,\n} from '../users/user.schema';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: configService.get('ACCESS_TOKEN_EXPIRY'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('REFRESH_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: configService.get('REFRESH_TOKEN_EXPIRY'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n\n    MongooseModule.forFeatureAsync([\n      {\n        name: User.name,\n        useFactory: () => {\n          const schema = UserSchema;\n          schema.discriminator(Student.name, StudentSchema);\n          schema.discriminator(Tutor.name, TutorSchema);\n          schema.discriminator(Admin.name, AdminSchema);\n          return schema;\n        },\n      },\n    ]),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                generateAccessToken\n                            \n                            \n                                    Private\n                                    Async\n                                generateRefreshToken\n                            \n                            \n                                    Async\n                                generateVerificationCode\n                            \n                            \n                                    Async\n                                getAccessToken\n                            \n                            \n                                    Async\n                                getAccessTokenExpiry\n                            \n                            \n                                    Async\n                                getRefreshToken\n                            \n                            \n                                    Async\n                                getRefreshTokenExpiry\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Private\n                                    Async\n                                validatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, jwtService: JwtService, userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAccessToken(user)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRefreshToken(user)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateVerificationCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateVerificationCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccessToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAccessTokenExpiry\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccessTokenExpiry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRefreshTokenExpiry\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshTokenExpiry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    validatePassword(plainPassword: string, hashedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                plainPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  Injectable,\n  OnModuleInit,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { LoginDto, RegisterDto } from './dtos/auth.dto';\nimport { IResponse } from '../../common/interfaces/response.interface';\nimport { IUser } from '../users/interfaces/user.interface';\nimport { User, UserDocument } from '../users/user.schema';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcryptjs';\nimport * as cryptojs from 'crypto-js';\nimport { Role } from 'src/common/enums/role.enum';\n\n@Injectable()\nexport class AuthService implements OnModuleInit {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly jwtService: JwtService,\n\n    @InjectModel(User.name) private readonly userModel: Model,\n  ) {}\n\n  async onModuleInit() {\n    console.log('AuthService initialized');\n  }\n\n  async generateVerificationCode(): Promise {\n    return cryptojs.lib.WordArray.random(4)\n      .toString(cryptojs.enc.Hex)\n      .substring(0, 6)\n      .toLowerCase();\n  }\n\n  private async generateAccessToken(user): Promise {\n    const payload = {\n      userId: user._id,\n      username: user.username,\n      firstName: user?.firstName,\n      lastName: user?.lastName,\n      email: user.email,\n      role: user.role,\n      phoneNumber: user.phoneNumber,\n      city: user?.city,\n      gender: user?.gender,\n      grade: user?.grade,\n      interests: user?.interests,\n    };\n    const secretKey = await this.getAccessToken();\n    const expiresIn = await this.getAccessTokenExpiry();\n    const accessToken = await this.jwtService.signAsync(payload, {\n      secret: secretKey,\n      expiresIn,\n    });\n    return accessToken;\n  }\n\n  private async generateRefreshToken(user): Promise {\n    const payload = { userId: user._id };\n    const secretKey = await this.getRefreshToken();\n    const expiresIn = await this.getRefreshTokenExpiry();\n    const refreshToken = await this.jwtService.signAsync(payload, {\n      secret: secretKey,\n      expiresIn,\n    });\n    return refreshToken;\n  }\n\n  async getAccessToken(): Promise {\n    const token = this.configService.get('ACCESS_TOKEN_SECRET');\n    return token;\n  }\n\n  async getAccessTokenExpiry(): Promise {\n    const expiry = this.configService.get('ACCESS_TOKEN_EXPIRY');\n    return expiry;\n  }\n\n  async getRefreshToken(): Promise {\n    const token = this.configService.get('REFRESH_TOKEN_SECRET');\n    return token;\n  }\n\n  async getRefreshTokenExpiry(): Promise {\n    const expiry = this.configService.get('REFRESH_TOKEN_EXPIRY');\n    return expiry;\n  }\n\n  async logout(userId: string): Promise {\n    const user = await this.userModel.findOneAndUpdate(\n      { _id: userId },\n      { $unset: { refreshToken: 1 } },\n      { new: true },\n    );\n\n    if (!user) {\n      throw new Error('user not found');\n    }\n    const loggedOutUser = await this.userModel\n      .findById(user._id)\n      .select('-password -refreshToken -createdAt -updatedAt -__v');\n\n    return {\n      user: loggedOutUser,\n    };\n  }\n\n  private async validatePassword(\n    plainPassword: string,\n    hashedPassword: string,\n  ): Promise {\n    return await bcrypt.compare(plainPassword, hashedPassword);\n  }\n\n  async register(registerDto: RegisterDto): Promise>> {\n    const existingUser = await this.userModel.findOne({\n      email: registerDto.email,\n      username: registerDto.username,\n    });\n\n    if (existingUser) {\n      throw new Error(\n        `User already exists with this ${registerDto.email} or ${registerDto.username}.`,\n      );\n    }\n\n    const { role, ...userDetails } = registerDto;\n\n    let type: string;\n    switch (role) {\n      case Role.TUTOR:\n        type = 'Tutor';\n        break;\n      case Role.STUDENT:\n        type = 'Student';\n        break;\n      default:\n        throw new Error('Invalid role provided.');\n    }\n\n    const registeringUser = new this.userModel({\n      type,\n      role,\n      ...userDetails,\n    });\n\n    await registeringUser.save();\n\n    return {\n      statusCode: 200,\n      message: `User registered successfully with the role:${role}.\\nPlease wait for the admin to approve your account.`,\n      data: null,\n    };\n  }\n\n  async login(loginDto: LoginDto) {\n    const user = await this.userModel.findOne({\n      email: loginDto.email,\n    });\n\n    if (!user) {\n      console.log('Invalid credentials');\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    if (!user.isActive) {\n      throw new UnauthorizedException(\n        'Your account is not active\\n Please wait for your account activation',\n      );\n    }\n\n    const isPasswordValid = await this.validatePassword(\n      loginDto.password,\n      user.password,\n    );\n\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    //   const roomName = `room-${user._id}-${Date.now()}`;\n    //   const room = await this.twilioService.createRoom(roomName);\n    //   const token = await this.twilioService.generateTwilioAccessToken(user.email, roomName);\n    //   await this.roomService.createRoom(user._id, roomName);\n\n    const accessToken = await this.generateAccessToken(user);\n    const refreshToken = await this.generateRefreshToken(user);\n\n    user.refreshToken = refreshToken;\n\n    await user.save();\n\n    return {\n      statusCode: 200,\n      message: 'Login successful',\n      // roomName:\n      data: user,\n      accessToken,\n      refreshToken,\n    };\n  }\n\n  async refreshToken(\n    refreshToken: string,\n  ): Promise {\n    const secretKey = await this.getRefreshToken();\n    const decodedToken = await this.jwtService.verifyAsync(refreshToken, {\n      secret: secretKey,\n    });\n    const user = await this.userModel.findById(decodedToken.userId);\n\n    if (!user || user.refreshToken !== refreshToken) {\n      throw new UnauthorizedException('Invalid refresh token');\n    }\n\n    const accessToken = await this.generateAccessToken(user);\n    const newRefreshToken = await this.generateRefreshToken(user);\n\n    if (!accessToken || !newRefreshToken) {\n      throw new ForbiddenException('there is an issue with tokens');\n    }\n\n    user.refreshToken = newRefreshToken;\n\n    await user.save();\n\n    return {\n      accessToken,\n      refreshToken: newRefreshToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/comment.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                publishedDate\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Comment'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/comment.schema.ts:29\n                        \n                    \n\n            \n                \n                    comment in comment\nwill be implemented. it requires time.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/comment.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/comment.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: true, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/comment.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { IComment } from './interfaces/comment.interface';\n\nexport type CommentDocument = IComment & Comment & Document;\n\n@Schema({ timestamps: true })\nexport class Comment {\n  @Prop({ type: Types.ObjectId, ref: 'User', required: true, index: true })\n  userId: Types.ObjectId;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  content: string;\n\n  @Prop({\n    type: Date,\n    default: Date.now,\n  })\n  publishedDate: Date;\n\n  /**\n   * comment in comment\n   * will be implemented. it requires time.\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'Comment' })\n  comments?: Types.ObjectId[];\n}\n\nexport const CommentSchema = SchemaFactory.createForClass(Comment);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommentsController.html":{"url":"controllers/CommentsController.html","title":"controller - CommentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/comments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                comments\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createComment\n                            \n                            \n                                    \n                                    Async\n                                deleteComment\n                            \n                            \n                                    \n                                    Async\n                                findAllComments\n                            \n                            \n                                    \n                                    Async\n                                findOneComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createComment(createCommentDto: CreateCommentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/comments/comments.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCommentDto\n                                            \n                                                            CreateCommentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteComment(commentId: Types.ObjectId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':commentId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/comments/comments.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commentId\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllComments\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllComments()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/comments/comments.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOneComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneComment(commentId: Types.ObjectId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':commentId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/comments/comments.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commentId\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Param, Body, Delete } from '@nestjs/common';\nimport { CommentsService } from './comments.service';\nimport { CreateCommentDto } from './dtos/comment.dto';\nimport { Types } from 'mongoose';\n\n@Controller('comments')\nexport class CommentsController {\n  constructor(private readonly commentsService: CommentsService) {}\n\n  @Get()\n  async findAllComments() {\n    return await this.commentsService.findAllComments();\n  }\n\n  @Get(':commentId')\n  async findOneComment(@Param('commentId') commentId: Types.ObjectId) {\n    return await this.commentsService.findOneComment(commentId);\n  }\n\n  @Post()\n  async createComment(@Body() createCommentDto: CreateCommentDto) {\n    return await this.commentsService.createComment(createCommentDto);\n  }\n\n  @Delete(':commentId')\n  async deleteComment(@Param('commentId') commentId: Types.ObjectId) {\n    return await this.commentsService.deleteComment(commentId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommentsModule.html":{"url":"modules/CommentsModule.html","title":"module - CommentsModule","body":"\n                   \n\n\n\n\n    Modules\n    CommentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommentsModule\n\n\n\ncluster_CommentsModule_exports\n\n\n\ncluster_CommentsModule_providers\n\n\n\n\nCommentsService \n\nCommentsService \n\n\n\nCommentsModule\n\nCommentsModule\n\nCommentsService  -->\n\nCommentsModule->CommentsService \n\n\n\n\n\nCommentsService\n\nCommentsService\n\nCommentsModule -->\n\nCommentsService->CommentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/comments/comments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CommentsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommentsService } from './comments.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Comment, CommentSchema } from './comment.schema';\nimport { CommentsController } from './comments.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Comment.name,\n        useFactory: () => {\n          return CommentSchema;\n        },\n      },\n    ]),\n  ],\n  controllers: [CommentsController],\n  providers: [CommentsService],\n  exports: [CommentsService],\n})\nexport class CommentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentsService.html":{"url":"injectables/CommentsService.html","title":"injectable - CommentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/comments.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createComment\n                            \n                            \n                                    Async\n                                deleteComment\n                            \n                            \n                                    Async\n                                findAllComments\n                            \n                            \n                                    Async\n                                findOneComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commentModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/comments/comments.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createComment(createCommentDto: CreateCommentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/comments/comments.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCommentDto\n                                            \n                                                            CreateCommentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteComment(commentId: Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/comments/comments.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commentId\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllComments\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllComments()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/comments/comments.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneComment(commentId: Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/comments/comments.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commentId\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { Comment, CommentDocument } from './comment.schema';\nimport { CreateCommentDto } from './dtos/comment.dto';\n\n@Injectable()\nexport class CommentsService {\n  constructor(\n    @InjectModel(Comment.name)\n    private readonly commentModel: Model,\n  ) {}\n\n  async findAllComments() {\n    const comments = await this.commentModel.find().populate('comments').exec();\n    return comments;\n  }\n\n  async findOneComment(commentId: Types.ObjectId) {\n    const comments = await this.commentModel\n      .findById(commentId)\n      .populate('comments')\n      .exec();\n    if (!comments) {\n      throw new Error(`Comment with ID ${commentId} not found`);\n    }\n    return comments;\n  }\n\n  async createComment(createCommentDto: CreateCommentDto) {\n    const comment = new this.commentModel({ ...createCommentDto });\n    await comment.save();\n    return comment;\n  }\n\n  async deleteComment(commentId: Types.ObjectId) {\n    const comment = await this.commentModel.findByIdAndDelete(commentId).exec();\n    if (!comment) {\n      throw new Error(`Comment with ID ${commentId} not found`);\n    }\n    return comment;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectDto.html":{"url":"classes/ConnectDto.html","title":"class - ConnectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/connect.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                connect\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        connect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Connect\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Connect)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/connect.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/connect.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsNotEmpty } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { Connect } from 'src/common/enums/connect.enum';\n\nexport class ConnectDto {\n  @IsNotEmpty()\n  @IsMongoId()\n  userId: Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEnum(Connect)\n  connect: Connect;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCommentDto.html":{"url":"classes/CreateCommentDto.html","title":"class - CreateCommentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCommentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/dtos/comment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/dtos/comment.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/dtos/comment.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/comments/dtos/comment.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsString,\n  IsOptional,\n  IsArray,\n  IsMongoId,\n} from 'class-validator';\nimport { Types } from 'mongoose';\n\nexport class CreateCommentDto {\n  @IsNotEmpty()\n  @IsMongoId()\n  userId: Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsString()\n  content: string;\n\n  @IsOptional()\n  @IsArray()\n  comments?: Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailDto.html":{"url":"classes/EmailDto.html","title":"class - EmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\nimport { Role } from 'src/common/enums/role.enum';\n\nexport class RegisterDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\nexport class PhoneNumberDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyPhoneNumberCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class EmailDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyEmailCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashPasswordPipe.html":{"url":"injectables/HashPasswordPipe.html","title":"injectable - HashPasswordPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HashPasswordPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/hash-password/hash-password.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pipes/hash-password/hash-password.pipe.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport * as bcrypt from 'bcryptjs';\n\n@Injectable()\nexport class HashPasswordPipe implements PipeTransform {\n  async transform(value: any) {\n    if (value.password) {\n      try {\n        const hashedPassword = await bcrypt.hash(value.password, 10);\n        value.password = hashedPassword;\n      } catch {\n        throw new BadRequestException('Error hashing password');\n      }\n    } else {\n      throw new BadRequestException('Password is required');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccount.html":{"url":"interfaces/IAccount.html","title":"interface - IAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/accounts/interfaces/account.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Types } from 'mongoose';\n\nexport interface IAccount {\n  userId: Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccountActivationRequest.html":{"url":"interfaces/IAccountActivationRequest.html","title":"interface - IAccountActivationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccountActivationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/interfaces/admin.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Types } from 'mongoose';\n\nexport interface IAccountActivationRequest {\n  userId: Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IComment.html":{"url":"interfaces/IComment.html","title":"interface - IComment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IComment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/comments/interfaces/comment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            comments\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            publishedDate\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comments:     Types.ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publishedDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publishedDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Types } from 'mongoose';\n\nexport interface IComment {\n  userId: Types.ObjectId;\n  content: string;\n  publishedDate: Date;\n  comments?: Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConnect.html":{"url":"interfaces/IConnect.html","title":"interface - IConnect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConnect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/interfaces/connect.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connect\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connect:         Connect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Connect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Types } from 'mongoose';\nimport { Connect } from 'src/common/enums/connect.enum';\n\nexport interface IConnect {\n  userId: Types.ObjectId;\n  connect: Connect;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogin.html":{"url":"interfaces/ILogin.html","title":"interface - ILogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRegister {\n  username: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n}\n\nexport interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IPhoneNumber {\n  phoneNumber: string;\n}\n\nexport interface IVerifyCode {\n  phoneNumber: string;\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMail.html":{"url":"interfaces/IMail.html","title":"interface - IMail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/interfaces/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gender\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            interests\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         City\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         City\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         Gender\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gender\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         Grade\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Grade\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interests\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interests:         Interest[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Interest[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { City } from 'src/common/enums/city.enum';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { Grade } from 'src/common/enums/grade.enum';\nimport { Interest } from 'src/common/enums/interest.enum';\n\nexport interface IMail {\n  to: string;\n  firstName?: string;\n  lastName?: string;\n  grade?: Grade;\n  interests?: Interest[];\n  city?: City;\n  gender?: Gender;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/messages/interfaces/message.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Types } from 'mongoose';\n\nexport interface IMessage {\n  userId: Types.ObjectId;\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPhoneNumber.html":{"url":"interfaces/IPhoneNumber.html","title":"interface - IPhoneNumber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPhoneNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRegister {\n  username: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n}\n\nexport interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IPhoneNumber {\n  phoneNumber: string;\n}\n\nexport interface IVerifyCode {\n  phoneNumber: string;\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRegister.html":{"url":"interfaces/IRegister.html","title":"interface - IRegister","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRegister\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRegister {\n  username: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n}\n\nexport interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IPhoneNumber {\n  phoneNumber: string;\n}\n\nexport interface IVerifyCode {\n  phoneNumber: string;\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResponse.html":{"url":"interfaces/IResponse.html","title":"interface - IResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T | T[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T | T[] | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IResponse {\n  statusCode?: number;\n  message?: string;\n  data?: T | T[] | null;\n  accessToken?: string;\n  refreshToken?: string;\n  phoneNumber?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            availability\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            experience\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gender\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            interests\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            isEmailVerified\n                                        \n                                \n                                \n                                        \n                                            isPhoneNumberVerified\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            qualification\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rates\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rateType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availability\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availability:         Availability[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Availability[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         City\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         City\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        experience\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        experience:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         Gender\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gender\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         Grade\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Grade\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interests\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interests:         Interest[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Interest[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEmailVerified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isEmailVerified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPhoneNumberVerified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPhoneNumberVerified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qualification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qualification:         Qualification\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Qualification\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rates:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rateType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rateType:         RateType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RateType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Availability } from 'src/common/enums/availability.enum';\nimport { City } from 'src/common/enums/city.enum';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { Grade } from 'src/common/enums/grade.enum';\nimport { Interest } from 'src/common/enums/interest.enum';\nimport { Qualification } from 'src/common/enums/qualification.enum';\nimport { RateType } from 'src/common/enums/rate-type.enum';\nimport { Role } from 'src/common/enums/role.enum';\n\nexport interface IUser {\n  // Basic Information\n  username: string;\n  firstName?: string;\n  lastName?: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n  gender?: Gender;\n  role: Role;\n  city?: City;\n  // Tutor-specific fields\n  rateType?: RateType;\n  rates?: number;\n  experience?: number;\n  qualification?: Qualification;\n  availability?: Availability[];\n  // Student-specific fields\n  grade?: Grade;\n  interests?: Interest[];\n  // auth-specific fields\n  refreshToken?: string;\n  isActive: boolean;\n  isPhoneNumberVerified: boolean;\n  isEmailVerified: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IVerifyCode.html":{"url":"interfaces/IVerifyCode.html","title":"interface - IVerifyCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IVerifyCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRegister {\n  username: string;\n  email: string;\n  phoneNumber: string;\n  password: string;\n}\n\nexport interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IPhoneNumber {\n  phoneNumber: string;\n}\n\nexport interface IVerifyCode {\n  phoneNumber: string;\n  code: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\nimport { Role } from 'src/common/enums/role.enum';\n\nexport class RegisterDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\nexport class PhoneNumberDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyPhoneNumberCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class EmailDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyEmailCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailDto.html":{"url":"classes/MailDto.html","title":"class - MailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/dtos/mail.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                grade\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                interests\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         City\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(City)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/mailer/dtos/mail.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/mailer/dtos/mail.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Gender)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/mailer/dtos/mail.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Grade\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Grade)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/mailer/dtos/mail.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        interests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Interest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Interest, {each: true})@IsArray({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/mailer/dtos/mail.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/mailer/dtos/mail.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/mailer/dtos/mail.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { Grade } from 'src/common/enums/grade.enum';\nimport { Interest } from 'src/common/enums/interest.enum';\nimport { City } from 'src/common/enums/city.enum';\nimport { Gender } from 'src/common/enums/gender.enum';\n\nexport class MailDto {\n  @IsNotEmpty()\n  @IsEmail()\n  to: string;\n\n  @IsOptional()\n  @IsString()\n  firstName?: string;\n\n  @IsOptional()\n  @IsString()\n  lastName?: string;\n\n  @IsOptional()\n  @IsEnum(Grade)\n  grade?: Grade;\n\n  @IsOptional()\n  @IsEnum(Interest, { each: true })\n  @IsArray({ each: true })\n  interests?: Interest[];\n\n  @IsOptional()\n  @IsEnum(City)\n  city?: City;\n\n  @IsOptional()\n  @IsEnum(Gender)\n  gender?: Gender;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_imports\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nMailerModule\n\nMailerModule\n\nMailerModule -->\n\nAuthModule->MailerModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/mailer/mailer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { MailerService } from './mailer.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [forwardRef(() => UsersModule), AuthModule],\n  providers: [MailerService],\n  exports: [MailerService],\n})\nexport class MailerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mailer/mailer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                transporter\n                            \n                            \n                                    Private\n                                    Readonly\n                                verificationStore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSMTPAuthPass\n                            \n                            \n                                getSMTPAuthUser\n                            \n                            \n                                getSMTPHost\n                            \n                            \n                                getSMTPPort\n                            \n                            \n                                getSMTPSecure\n                            \n                            \n                                getSMTPService\n                            \n                            \n                                    Async\n                                sendEmailVerificationCode\n                            \n                            \n                                    Async\n                                sendMail\n                            \n                            \n                                    Async\n                                verifyEmailCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, authService: AuthService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/mailer/mailer.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSMTPAuthPass\n                        \n                    \n                \n            \n            \n                \ngetSMTPAuthPass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/mailer/mailer.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSMTPAuthUser\n                        \n                    \n                \n            \n            \n                \ngetSMTPAuthUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/mailer/mailer.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSMTPHost\n                        \n                    \n                \n            \n            \n                \ngetSMTPHost()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/mailer/mailer.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSMTPPort\n                        \n                    \n                \n            \n            \n                \ngetSMTPPort()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/mailer/mailer.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSMTPSecure\n                        \n                    \n                \n            \n            \n                \ngetSMTPSecure()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/mailer/mailer.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSMTPService\n                        \n                    \n                \n            \n            \n                \ngetSMTPService()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/mailer/mailer.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendEmailVerificationCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailVerificationCode(emailDto: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/mailer/mailer.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailDto\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(mailDto: MailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/mailer/mailer.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mailDto\n                                            \n                                                            MailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyEmailCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmailCode(verifyEmailCodeDto: VerifyEmailCodeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/mailer/mailer.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                verifyEmailCodeDto\n                                            \n                                                            VerifyEmailCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        transporter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transporter\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/mailer/mailer.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        verificationStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/mailer/mailer.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Transporter, createTransport } from 'nodemailer';\nimport { EmailDto, VerifyEmailCodeDto } from '../auth/dtos/auth.dto';\nimport { MailDto } from './dtos/mail.dto';\nimport { AuthService } from '../auth/auth.service';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class MailerService {\n  private readonly transporter: Transporter;\n  private readonly verificationStore: Map;\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly authService: AuthService,\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {\n    this.transporter = createTransport({\n      service: this.getSMTPService(),\n      host: this.getSMTPHost(),\n      port: this.getSMTPPort(),\n      secure: this.getSMTPSecure(),\n      auth: {\n        user: this.getSMTPAuthUser(),\n        pass: this.getSMTPAuthPass(),\n      },\n    });\n    this.verificationStore = new Map();\n  }\n\n  getSMTPService() {\n    return this.configService.get('SMTP_SERVICE');\n  }\n\n  getSMTPHost() {\n    return this.configService.get('SMTP_HOST');\n  }\n\n  getSMTPPort() {\n    return this.configService.get('SMTP_PORT');\n  }\n\n  getSMTPSecure() {\n    return this.configService.get('SMTP_SECURE');\n  }\n\n  getSMTPAuthUser() {\n    return this.configService.get('SMTP_USER');\n  }\n\n  getSMTPAuthPass() {\n    return this.configService.get('SMTP_PASS');\n  }\n\n  async sendEmailVerificationCode(emailDto: EmailDto) {\n    const { email } = emailDto;\n\n    const user = await this.usersService.findUserByEmail(email);\n\n    if (!user) {\n      throw new UnauthorizedException('User not found');\n    }\n\n    const verificationCode = await this.authService.generateVerificationCode();\n\n    const expiry = Date.now() + 3 * 60 * 1000;\n\n    this.verificationStore.set(email, {\n      code: verificationCode,\n      expiry: expiry,\n    });\n\n    const mailOptions = {\n      from: 'Find A Tutor ',\n      to: email,\n      subject: 'Email Verification Code',\n      text: `Your email verification code is: ${verificationCode}`,\n      html: `\n        \n          Email Verification\n          Your email verification code is:\n          ${verificationCode}\n          This code will expire in 10 minutes.\n        \n      `,\n    };\n\n    try {\n      await this.transporter.sendMail(mailOptions);\n      console.info(`Verification code sent to ${email}`);\n    } catch (error) {\n      console.error('Error sending verification email:', error.message);\n      throw new Error(\n        'Failed to send verification email. Please try again later.',\n      );\n    }\n  }\n\n  async verifyEmailCode(verifyEmailCodeDto: VerifyEmailCodeDto) {\n    const { email, code } = verifyEmailCodeDto;\n\n    const record = this.verificationStore.get(email);\n\n    if (!record) {\n      console.warn(`No verification record found for email: ${email}`);\n      return false;\n    }\n\n    const { code: storedCode, expiry } = record;\n\n    if (storedCode === code && Date.now() = expiry) {\n      this.verificationStore.delete(email);\n      console.warn(`Verification code expired for email: ${email}`);\n    }\n\n    console.warn(`Verification failed for email: ${email}`);\n    return false;\n  }\n\n  async sendMail(mailDto: MailDto) {\n    const mailOptions = {\n      from: 'find A Tutor ',\n      to: mailDto.to,\n      subject: 'New Connection Request from a Student',\n      text: `Hello, You have a new connection request from a student!`,\n      html: `\n    \n      \n        \n          body {\n            font-family: Arial, sans-serif;\n            background-color: #f4f7fa;\n            color: #333;\n            padding: 20px;\n          }\n          .email-container {\n            max-width: 600px;\n            margin: 0 auto;\n            background-color: #fff;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n          }\n          .email-header {\n            background-color: #4CAF50;\n            color: white;\n            padding: 10px 0;\n            text-align: center;\n            border-radius: 5px;\n          }\n          .email-header h1 {\n            margin: 0;\n            font-size: 24px;\n          }\n          .email-body {\n            margin-top: 20px;\n          }\n          .email-body p {\n            font-size: 16px;\n            line-height: 1.6;\n          }\n          .student-info {\n            background-color: #f1f1f1;\n            padding: 15px;\n            border-radius: 5px;\n            margin-top: 20px;\n          }\n          .student-info p {\n            margin: 8px 0;\n            font-weight: bold;\n          }\n          .footer {\n            margin-top: 30px;\n            font-size: 12px;\n            text-align: center;\n            color: #999;\n          }\n          .button {\n            display: inline-block;\n            background-color: #4CAF50;\n            color: white;\n            padding: 10px 20px;\n            font-size: 16px;\n            text-decoration: none;\n            border-radius: 5px;\n            margin-top: 20px;\n          }\n        \n      \n      \n        \n          \n            New Connection Request\n          \n          \n            Dear Tutor,\n            You have received a connection request from a student! Please find their details below:\n            \n            \n              Student Name: ${mailDto?.firstName} ${mailDto?.lastName} \n              Grade: ${mailDto?.grade}\n              Interests: ${mailDto?.interests}\n              City: ${mailDto?.city}\n              Gender: ${mailDto?.gender}\n              \n            \n\n            The student is interested in connecting with you and potentially becoming one of your students. To accept or reject the request, please click the button below.\n\n            View Request\n          \n          \n          \n            Find A Tutor Team\n            If you did not request this, please ignore this email.\n          \n        \n      \n    \n  `,\n    };\n\n    try {\n      const info = await this.transporter.sendMail(mailOptions);\n      console.info(info);\n    } catch {\n      throw new Error();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/messages/message.schema.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IMessage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/messages/message.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/messages/message.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { IMessage } from './interfaces/message.interface';\n\nexport type MessageDocument = Message & Document;\n\n@Schema({\n  timestamps: true,\n})\nexport class Message implements IMessage {\n  @Prop({ type: Types.ObjectId, ref: 'User', required: true })\n  userId: Types.ObjectId;\n\n  @Prop({ type: String, required: true })\n  message: string;\n}\n\nexport const MessageSchema = SchemaFactory.createForClass(Message);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageDto.html":{"url":"classes/MessageDto.html","title":"class - MessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/messages/dtos/message.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IMessage\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                message\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/messages/dtos/message.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/messages/dtos/message.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { IMessage } from '../interfaces/message.interface';\nimport { Types } from 'mongoose';\n\nexport class MessageDto implements IMessage {\n  @IsNotEmpty()\n  @IsMongoId()\n  userId: Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsString()\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessagesGateway.html":{"url":"classes/MessagesGateway.html","title":"class - MessagesGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessagesGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/messages/messages.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnModuleInit\n                        OnGatewayInit\n                            OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                afterInit\n                            \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                    Async\n                                handleDisconnect\n                            \n                            \n                                    \n                                    Async\n                                handleMessage\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/messages/messages.gateway.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/messages/messages.gateway.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        afterInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterInit(server: Server)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/messages/messages.gateway.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                        Server\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleConnection(client: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/messages/messages.gateway.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleDisconnect(client: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/messages/messages.gateway.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleMessage(messageDto: MessageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('message')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/messages/messages.gateway.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messageDto\n                                            \n                                                            MessageDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/messages/messages.gateway.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  WebSocketServer,\n  OnGatewayInit,\n} from '@nestjs/websockets';\nimport { Server, Socket } from 'socket.io';\nimport { MessageDto } from './dtos/message.dto';\nimport { OnModuleInit, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { AuthService } from '../auth/auth.service';\n\n@WebSocketGateway({ cors: { origin: '*' } })\nexport class MessagesGateway\n  implements\n    OnModuleInit,\n    OnGatewayInit,\n    OnGatewayConnection,\n    OnGatewayDisconnect\n{\n  @WebSocketServer()\n  server: Server;\n\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly authService: AuthService,\n  ) {}\n\n  async onModuleInit() {\n    console.log('MessagesGateway initialized');\n  }\n\n  async afterInit(server: Server) {\n    console.log('WebSocket server initialized', server);\n  }\n\n  async handleConnection(client: Socket) {\n    console.log(`Client connected: ${client.id}`);\n\n    try {\n      const token = client.handshake.auth.token;\n\n      if (!token) {\n        throw new UnauthorizedException('No token provided');\n      }\n\n      const accessToken = await this.authService.getAccessToken();\n\n      const user = await this.jwtService.verifyAsync(token, {\n        secret: accessToken,\n      });\n\n      client.data.user = user;\n\n      console.log('user', user);\n    } catch (error) {\n      client.disconnect();\n      console.error('Connection refused: Invalid token', error.message);\n    }\n  }\n\n  async handleDisconnect(client: Socket) {\n    console.log(`Client disconnected: ${client.id}`);\n  }\n\n  @SubscribeMessage('message')\n  async handleMessage(@MessageBody() messageDto: MessageDto) {\n    this.server.emit('message', messageDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesModule.html":{"url":"modules/MessagesModule.html","title":"module - MessagesModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_exports\n\n\n\ncluster_MessagesModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nAuthModule->MessagesModule\n\n\n\n\n\nMessagesGateway \n\nMessagesGateway \n\nMessagesGateway  -->\n\nMessagesModule->MessagesGateway \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/messages/messages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MessagesGateway\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/messages/messages.module.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, OnModuleInit } from '@nestjs/common';\nimport { MessagesGateway } from './messages.gateway';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Message, MessageSchema } from './message.schema';\nimport { AuthModule } from '../auth/auth.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: configService.get('ACCESS_TOKEN_EXPIRY'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeatureAsync([\n      {\n        name: Message.name,\n        useFactory: () => {\n          return MessageSchema;\n        },\n      },\n    ]),\n    AuthModule,\n  ],\n  providers: [MessagesGateway],\n  exports: [MessagesGateway],\n})\nexport class MessagesModule implements OnModuleInit {\n  onModuleInit() {\n    console.log('MessagesModule initialized');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PhoneNumberDto.html":{"url":"classes/PhoneNumberDto.html","title":"class - PhoneNumberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PhoneNumberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsPhoneNumber('PK')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\nimport { Role } from 'src/common/enums/role.enum';\n\nexport class RegisterDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\nexport class PhoneNumberDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyPhoneNumberCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class EmailDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyEmailCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenPipe.html":{"url":"injectables/RefreshTokenPipe.html","title":"injectable - RefreshTokenPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/refresh-token/refresh-token.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pipes/refresh-token/refresh-token.pipe.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, PipeTransform, BadRequestException } from '@nestjs/common';\nimport { Request } from 'express';\n\n@Injectable()\nexport class RefreshTokenPipe implements PipeTransform {\n  async transform(request: Request): Promise {\n    const refreshToken = request.cookies['refreshToken'];\n\n    if (!refreshToken) {\n      throw new BadRequestException('Refresh token is missing in cookies');\n    }\n    return refreshToken;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsPhoneNumber('PK')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\nimport { Role } from 'src/common/enums/role.enum';\n\nexport class RegisterDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\nexport class PhoneNumberDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyPhoneNumberCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class EmailDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyEmailCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestDto.html":{"url":"classes/RequestDto.html","title":"class - RequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/admin/dtos/admin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                requestId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        requestId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/admin/dtos/admin.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty } from 'class-validator';\nimport { Types } from 'mongoose';\n\nexport class AccountActivationRequestDto {\n  @IsNotEmpty()\n  @IsMongoId()\n  userId: Types.ObjectId;\n}\n\nexport class RequestDto {\n  @IsNotEmpty()\n  @IsMongoId()\n  requestId: Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/role.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guards/role.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Role } from '../enums/role.enum';\nimport { ROLES_KEY } from 'src/common/constants/role.constant';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user?.roles?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeedersModule.html":{"url":"modules/SeedersModule.html","title":"module - SeedersModule","body":"\n                   \n\n\n\n\n    Modules\n    SeedersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeedersModule\n\n\n\ncluster_SeedersModule_exports\n\n\n\ncluster_SeedersModule_providers\n\n\n\n\nAdminSeeder \n\nAdminSeeder \n\n\n\nStudentSeeder \n\nStudentSeeder \n\n\n\nTutorSeeder \n\nTutorSeeder \n\n\n\nSeedersModule\n\nSeedersModule\n\nAdminSeeder  -->\n\nSeedersModule->AdminSeeder \n\n\n\nStudentSeeder  -->\n\nSeedersModule->StudentSeeder \n\n\n\nTutorSeeder  -->\n\nSeedersModule->TutorSeeder \n\n\n\n\n\nAdminSeeder\n\nAdminSeeder\n\nSeedersModule -->\n\nAdminSeeder->SeedersModule\n\n\n\n\n\nStudentSeeder\n\nStudentSeeder\n\nSeedersModule -->\n\nStudentSeeder->SeedersModule\n\n\n\n\n\nTutorSeeder\n\nTutorSeeder\n\nSeedersModule -->\n\nTutorSeeder->SeedersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/seeders/seeders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminSeeder\n                        \n                        \n                            StudentSeeder\n                        \n                        \n                            TutorSeeder\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminSeeder\n                        \n                        \n                            StudentSeeder\n                        \n                        \n                            TutorSeeder\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport {\n  Admin,\n  AdminSchema,\n  Student,\n  StudentSchema,\n  Tutor,\n  TutorSchema,\n  User,\n  UserSchema,\n} from '../users/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AdminSeeder } from './admin.seeder';\nimport { TutorSeeder } from './tutor.seeder';\nimport { StudentSeeder } from './student.seeder';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: User.name,\n        useFactory: () => {\n          const schema = UserSchema;\n          schema.discriminator(Student.name, StudentSchema);\n          schema.discriminator(Tutor.name, TutorSchema);\n          schema.discriminator(Admin.name, AdminSchema);\n          return schema;\n        },\n      },\n    ]),\n  ],\n  providers: [AdminSeeder, TutorSeeder, StudentSeeder],\n  exports: [AdminSeeder, TutorSeeder, StudentSeeder],\n})\nexport class SeedersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                grade\n                            \n                            \n                                    \n                                interests\n                            \n                            \n                                    \n                                    Optional\n                                tutors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Grade\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: Grade, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:194\n                        \n                    \n\n            \n                \n                    Grade of the student (e.g., Grade 10, O-Level)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        interests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Interest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, enum: Interest, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:200\n                        \n                    \n\n            \n                \n                    List of student interests (e.g., Mathematics, Sports)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tutors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Tutor'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:206\n                        \n                    \n\n            \n                \n                    Array of ObjectIds referencing the tutors associated with the student\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { RateType } from 'src/common/enums/rate-type.enum';\nimport { Qualification } from 'src/common/enums/qualification.enum';\nimport { City } from 'src/common/enums/city.enum';\nimport { Grade } from 'src/common/enums/grade.enum';\nimport { Interest } from 'src/common/enums/interest.enum';\nimport { Availability } from 'src/common/enums/availability.enum';\nimport { Role } from 'src/common/enums/role.enum';\n\n// Type for User Document\nexport type UserDocument = Tutor & Student & User & Document;\n\n//\n// ==============================\n// BASE USER SCHEMA\n// ==============================\n//\n@Schema({\n  timestamps: true,\n  discriminatorKey: 'type',\n  // toJSON: {\n  //   transform: (doc, ret) => {\n  //     if (!ret.gender) {\n  //       delete ret.gender;\n  //     }\n  //     if (!ret.city) {\n  //       delete ret.city;\n  //     }\n  //     // if (!ret.rateType) {\n  //     //   delete ret.rateType;\n  //     // }\n  //     // if (!ret.rates) {\n  //     //   delete ret.rates;\n  //     // }\n  //     // if (!ret.experience) {\n  //     //   delete ret.experience;\n  //     // }\n  //     // if (!ret.qualification) {\n  //     //   delete ret.qualification;\n  //     // }\n  //     // if (!ret.availability) {\n  //     //   delete ret.availability;\n  //     // }\n  //     if (!ret.grade) {\n  //       delete ret.grade;\n  //     }\n  //     if (!ret.interest) {\n  //       delete ret.interest;\n  //     }\n  //     if (!ret.tutors) {\n  //       delete ret.tutors;\n  //     }\n  //     if (!ret.students) {\n  //       delete ret.students;\n  //     }\n  //     return ret;\n  //   },\n  // },\n  // toObject: {\n  //   transform: (doc, ret) => {\n  //     if (!ret.gender) {\n  //       delete ret.gender;\n  //     }\n  //     if (!ret.city) {\n  //       delete ret.city;\n  //     }\n  //     // if (!ret.rateType) {\n  //     //   delete ret.rateType;\n  //     // }\n  //     // if (!ret.rates) {\n  //     //   delete ret.rates;\n  //     // }\n  //     // if (!ret.experience) {\n  //     //   delete ret.experience;\n  //     // }\n  //     // if (!ret.qualification) {\n  //     //   delete ret.qualification;\n  //     // }\n  //     // if (!ret.availability) {\n  //     //   delete ret.availability;\n  //     // }\n  //     if (!ret.grade) {\n  //       delete ret.grade;\n  //     }\n  //     if (!ret.interest) {\n  //       delete ret.interest;\n  //     }\n  //     if (!ret.tutors) {\n  //       delete ret.tutors;\n  //     }\n  //     if (!ret.students) {\n  //       delete ret.students;\n  //     }\n  //     return ret;\n  //   },\n  // },\n})\nexport class User {\n  /**\n   * Unique username for the user\n   */\n  @Prop({ type: String, required: true, unique: true, index: true })\n  username: string;\n\n  /**\n   * FIrst name for the user\n   */\n  @Prop({ type: String })\n  firstName?: string;\n\n  /**\n   * Last name for the user\n   */\n  @Prop({ type: String })\n  lastName?: string;\n\n  /**\n   * Unique email for the user\n   */\n  @Prop({ type: String, required: true, unique: true, index: true })\n  email: string;\n\n  /**\n   * Unique phone number for the user\n   */\n  @Prop({ type: String, required: true, unique: true })\n  phoneNumber: string;\n\n  /**\n   * Encrypted password for authentication\n   */\n  @Prop({ type: String, required: true })\n  password: string;\n\n  /**\n   * Gender of the user (optional)\n   */\n  @Prop({ type: String, enum: Gender })\n  gender?: Gender;\n\n  /**\n   * City of the user (optional)\n   */\n  @Prop({ type: String, enum: City })\n  city?: City;\n\n  /**\n   * Role of the user\n   */\n  @Prop({ type: String, enum: Role })\n  role: Role;\n\n  /**\n   * Refresh token for session management\n   */\n  @Prop({ type: String })\n  refreshToken?: string;\n\n  /**\n   * Indicates whether the account is active\n   */\n  @Prop({ type: Boolean, default: false })\n  isActive: boolean;\n\n  /**\n   * Indicates whether the phone number is verified\n   */\n  @Prop({ type: Boolean, default: false })\n  isPhoneNumberVerified: boolean;\n\n  /**\n   * Indicates whether the email is verified\n   */\n  @Prop({ type: Boolean, default: false })\n  isEmailVerified: boolean;\n}\n\n// Create schema for the base User class\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n//\n// ==============================\n// STUDENT SCHEMA\n// ==============================\n//\n@Schema()\nexport class Student extends User {\n  /**\n   * Grade of the student (e.g., Grade 10, O-Level)\n   */\n  @Prop({ type: String, enum: Grade, required: true })\n  grade: Grade;\n\n  /**\n   * List of student interests (e.g., Mathematics, Sports)\n   */\n  @Prop({ type: [String], enum: Interest, required: true })\n  interests: Interest[];\n\n  /**\n   * Array of ObjectIds referencing the tutors associated with the student\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'Tutor' })\n  tutors?: Types.ObjectId[];\n}\n\n// Create schema for the Student class\nexport const StudentSchema = SchemaFactory.createForClass(Student);\n\n//\n// ==============================\n// TUTOR SCHEMA\n// ==============================\n//\n@Schema()\nexport class Tutor extends User {\n  /**\n   * Rates charged by the tutor (e.g., 1000 PKR per hour)\n   */\n  @Prop({ type: Number, required: true })\n  rates: number;\n\n  /**\n   * Number of years of teaching experience\n   */\n  @Prop({ type: Number, required: true })\n  experience: number;\n\n  /**\n   * Qualification of the tutor (e.g., MSc in Mathematics)\n   */\n  @Prop({ type: String, enum: Qualification, required: true })\n  qualification: Qualification;\n\n  @Prop({ type: [String], enum: Interest })\n  subjects?: Interest[];\n\n  /**\n   * Rate type (Hourly, Monthly, etc.)\n   * Refers to the RateType enum\n   */\n  @Prop({ type: String, enum: RateType, default: RateType.MONTHLY })\n  rateType: RateType;\n\n  /**\n   * Array of ObjectIds referencing the students taught by the tutor\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'Student' })\n  students?: Types.ObjectId[];\n\n  /**\n   * Array of availability slots (e.g., 'Monday 2-4 PM')\n   */\n  @Prop({ type: [String], enum: Availability, required: true })\n  availability: Availability[];\n}\n\n// Create schema for the Tutor class\nexport const TutorSchema = SchemaFactory.createForClass(Tutor);\n\n//\n// ==============================\n// ADMIN SCHEMA\n// ==============================\n//\n@Schema()\nexport class Admin extends User {\n  /**\n   * Array of ObjectIds referencing account activation requests handled by the admin\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'AccountActivationRequest' })\n  requests?: Types.ObjectId[];\n\n  /**\n   * Array of ObjectIds referencing user accounts managed by the admin\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'User' })\n  accounts?: Types.ObjectId[];\n}\n\n// Create schema for the Admin class\nexport const AdminSchema = SchemaFactory.createForClass(Admin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentSeeder.html":{"url":"injectables/StudentSeeder.html","title":"injectable - StudentSeeder","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentSeeder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/seeders/student.seeder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/seeders/student.seeder.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/seeders/student.seeder.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/seeders/student.seeder.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport * as bcrypt from 'bcryptjs';\nimport { Role } from 'src/common/enums/role.enum';\nimport { User, UserDocument } from '../users/user.schema';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { City } from 'src/common/enums/city.enum';\nimport { Grade } from 'src/common/enums/grade.enum';\nimport { Interest } from 'src/common/enums/interest.enum';\n\n@Injectable()\nexport class StudentSeeder implements OnModuleInit {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model,\n  ) {}\n\n  async onModuleInit() {\n    console.log('StudentSeeder initialized');\n  }\n  async seed() {\n    try {\n      const students = [\n        {\n          username: 'alex_johnson',\n          firstName: 'Alex',\n          lastName: 'Johnson',\n          email: 'alex.johnson@example.com',\n          phoneNumber: '+92300100100',\n          password: 'studentPassword123',\n          gender: Gender.MALE,\n          city: City.ISLAMABAD,\n          grade: Grade.GRADE_10,\n          interests: [Interest.MATHEMATICS, Interest.SCIENCE],\n        },\n        {\n          username: 'lisa_white',\n          firstName: 'Lisa',\n          lastName: 'White',\n          email: 'lisa.white@example.com',\n          phoneNumber: '+92300200200',\n          password: 'studentPassword123',\n          gender: Gender.FEMALE,\n          city: City.KARACHI,\n          grade: Grade.GRADE_12,\n          interests: [Interest.SOCIOLOGY, Interest.ART],\n        },\n        {\n          username: 'kevin_clark',\n          firstName: 'Kevin',\n          lastName: 'Clark',\n          email: 'kevin.clark@example.com',\n          phoneNumber: '+92300300301',\n          password: 'studentPassword123',\n          gender: Gender.MALE,\n          city: City.LAHORE,\n          grade: Grade.O_LEVEL,\n          interests: [Interest.MUSIC, Interest.HISTORY],\n        },\n        {\n          username: 'emma_davis',\n          firstName: 'Emma',\n          lastName: 'Davis',\n          email: 'emma.davis@example.com',\n          phoneNumber: '+92300400401',\n          password: 'studentPassword123',\n          gender: Gender.FEMALE,\n          city: City.PESHAWAR,\n          grade: Grade.GRADE_8,\n          interests: [Interest.BIOLOGY, Interest.PHYSICS],\n        },\n      ];\n\n      for (const studentData of students) {\n        const studentExists = await this.userModel.findOne({\n          email: studentData.email,\n        });\n\n        if (!studentExists) {\n          const hashedPassword = await bcrypt.hash(studentData.password, 10);\n\n          const student = new this.userModel({\n            username: studentData.username,\n            firstName: studentData.firstName,\n            lastName: studentData.lastName,\n            email: studentData.email,\n            phoneNumber: studentData.phoneNumber,\n            password: hashedPassword,\n            role: Role.STUDENT,\n            type: 'Student',\n            gender: studentData.gender,\n            city: studentData.city,\n            grade: studentData.grade,\n            interests: [Interest.BIOLOGY, Interest.PHYSICS],\n            isActive: true,\n            isPhoneNumberVerified: true,\n            isEmailVerified: true,\n          });\n\n          await student.save();\n          console.log(\n            `student ${studentData.username} has been seeded successfully`,\n          );\n        } else {\n          console.log(`Student ${studentData.username} already exists`);\n        }\n      }\n    } catch (error) {\n      console.error('Error seeding student users:', error);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tutor.html":{"url":"classes/Tutor.html","title":"class - Tutor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tutor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                availability\n                            \n                            \n                                    \n                                experience\n                            \n                            \n                                    \n                                qualification\n                            \n                            \n                                    \n                                rates\n                            \n                            \n                                    \n                                rateType\n                            \n                            \n                                    \n                                    Optional\n                                students\n                            \n                            \n                                    \n                                    Optional\n                                subjects\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        availability\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Availability[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, enum: Availability, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:257\n                        \n                    \n\n            \n                \n                    Array of availability slots (e.g., 'Monday 2-4 PM')\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        experience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:229\n                        \n                    \n\n            \n                \n                    Number of years of teaching experience\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        qualification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Qualification\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: Qualification, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:235\n                        \n                    \n\n            \n                \n                    Qualification of the tutor (e.g., MSc in Mathematics)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:223\n                        \n                    \n\n            \n                \n                    Rates charged by the tutor (e.g., 1000 PKR per hour)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rateType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RateType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: RateType, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:245\n                        \n                    \n\n            \n                \n                    Rate type (Hourly, Monthly, etc.)\nRefers to the RateType enum\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Student'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:251\n                        \n                    \n\n            \n                \n                    Array of ObjectIds referencing the students taught by the tutor\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        subjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Interest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, enum: Interest})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:238\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { RateType } from 'src/common/enums/rate-type.enum';\nimport { Qualification } from 'src/common/enums/qualification.enum';\nimport { City } from 'src/common/enums/city.enum';\nimport { Grade } from 'src/common/enums/grade.enum';\nimport { Interest } from 'src/common/enums/interest.enum';\nimport { Availability } from 'src/common/enums/availability.enum';\nimport { Role } from 'src/common/enums/role.enum';\n\n// Type for User Document\nexport type UserDocument = Tutor & Student & User & Document;\n\n//\n// ==============================\n// BASE USER SCHEMA\n// ==============================\n//\n@Schema({\n  timestamps: true,\n  discriminatorKey: 'type',\n  // toJSON: {\n  //   transform: (doc, ret) => {\n  //     if (!ret.gender) {\n  //       delete ret.gender;\n  //     }\n  //     if (!ret.city) {\n  //       delete ret.city;\n  //     }\n  //     // if (!ret.rateType) {\n  //     //   delete ret.rateType;\n  //     // }\n  //     // if (!ret.rates) {\n  //     //   delete ret.rates;\n  //     // }\n  //     // if (!ret.experience) {\n  //     //   delete ret.experience;\n  //     // }\n  //     // if (!ret.qualification) {\n  //     //   delete ret.qualification;\n  //     // }\n  //     // if (!ret.availability) {\n  //     //   delete ret.availability;\n  //     // }\n  //     if (!ret.grade) {\n  //       delete ret.grade;\n  //     }\n  //     if (!ret.interest) {\n  //       delete ret.interest;\n  //     }\n  //     if (!ret.tutors) {\n  //       delete ret.tutors;\n  //     }\n  //     if (!ret.students) {\n  //       delete ret.students;\n  //     }\n  //     return ret;\n  //   },\n  // },\n  // toObject: {\n  //   transform: (doc, ret) => {\n  //     if (!ret.gender) {\n  //       delete ret.gender;\n  //     }\n  //     if (!ret.city) {\n  //       delete ret.city;\n  //     }\n  //     // if (!ret.rateType) {\n  //     //   delete ret.rateType;\n  //     // }\n  //     // if (!ret.rates) {\n  //     //   delete ret.rates;\n  //     // }\n  //     // if (!ret.experience) {\n  //     //   delete ret.experience;\n  //     // }\n  //     // if (!ret.qualification) {\n  //     //   delete ret.qualification;\n  //     // }\n  //     // if (!ret.availability) {\n  //     //   delete ret.availability;\n  //     // }\n  //     if (!ret.grade) {\n  //       delete ret.grade;\n  //     }\n  //     if (!ret.interest) {\n  //       delete ret.interest;\n  //     }\n  //     if (!ret.tutors) {\n  //       delete ret.tutors;\n  //     }\n  //     if (!ret.students) {\n  //       delete ret.students;\n  //     }\n  //     return ret;\n  //   },\n  // },\n})\nexport class User {\n  /**\n   * Unique username for the user\n   */\n  @Prop({ type: String, required: true, unique: true, index: true })\n  username: string;\n\n  /**\n   * FIrst name for the user\n   */\n  @Prop({ type: String })\n  firstName?: string;\n\n  /**\n   * Last name for the user\n   */\n  @Prop({ type: String })\n  lastName?: string;\n\n  /**\n   * Unique email for the user\n   */\n  @Prop({ type: String, required: true, unique: true, index: true })\n  email: string;\n\n  /**\n   * Unique phone number for the user\n   */\n  @Prop({ type: String, required: true, unique: true })\n  phoneNumber: string;\n\n  /**\n   * Encrypted password for authentication\n   */\n  @Prop({ type: String, required: true })\n  password: string;\n\n  /**\n   * Gender of the user (optional)\n   */\n  @Prop({ type: String, enum: Gender })\n  gender?: Gender;\n\n  /**\n   * City of the user (optional)\n   */\n  @Prop({ type: String, enum: City })\n  city?: City;\n\n  /**\n   * Role of the user\n   */\n  @Prop({ type: String, enum: Role })\n  role: Role;\n\n  /**\n   * Refresh token for session management\n   */\n  @Prop({ type: String })\n  refreshToken?: string;\n\n  /**\n   * Indicates whether the account is active\n   */\n  @Prop({ type: Boolean, default: false })\n  isActive: boolean;\n\n  /**\n   * Indicates whether the phone number is verified\n   */\n  @Prop({ type: Boolean, default: false })\n  isPhoneNumberVerified: boolean;\n\n  /**\n   * Indicates whether the email is verified\n   */\n  @Prop({ type: Boolean, default: false })\n  isEmailVerified: boolean;\n}\n\n// Create schema for the base User class\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n//\n// ==============================\n// STUDENT SCHEMA\n// ==============================\n//\n@Schema()\nexport class Student extends User {\n  /**\n   * Grade of the student (e.g., Grade 10, O-Level)\n   */\n  @Prop({ type: String, enum: Grade, required: true })\n  grade: Grade;\n\n  /**\n   * List of student interests (e.g., Mathematics, Sports)\n   */\n  @Prop({ type: [String], enum: Interest, required: true })\n  interests: Interest[];\n\n  /**\n   * Array of ObjectIds referencing the tutors associated with the student\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'Tutor' })\n  tutors?: Types.ObjectId[];\n}\n\n// Create schema for the Student class\nexport const StudentSchema = SchemaFactory.createForClass(Student);\n\n//\n// ==============================\n// TUTOR SCHEMA\n// ==============================\n//\n@Schema()\nexport class Tutor extends User {\n  /**\n   * Rates charged by the tutor (e.g., 1000 PKR per hour)\n   */\n  @Prop({ type: Number, required: true })\n  rates: number;\n\n  /**\n   * Number of years of teaching experience\n   */\n  @Prop({ type: Number, required: true })\n  experience: number;\n\n  /**\n   * Qualification of the tutor (e.g., MSc in Mathematics)\n   */\n  @Prop({ type: String, enum: Qualification, required: true })\n  qualification: Qualification;\n\n  @Prop({ type: [String], enum: Interest })\n  subjects?: Interest[];\n\n  /**\n   * Rate type (Hourly, Monthly, etc.)\n   * Refers to the RateType enum\n   */\n  @Prop({ type: String, enum: RateType, default: RateType.MONTHLY })\n  rateType: RateType;\n\n  /**\n   * Array of ObjectIds referencing the students taught by the tutor\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'Student' })\n  students?: Types.ObjectId[];\n\n  /**\n   * Array of availability slots (e.g., 'Monday 2-4 PM')\n   */\n  @Prop({ type: [String], enum: Availability, required: true })\n  availability: Availability[];\n}\n\n// Create schema for the Tutor class\nexport const TutorSchema = SchemaFactory.createForClass(Tutor);\n\n//\n// ==============================\n// ADMIN SCHEMA\n// ==============================\n//\n@Schema()\nexport class Admin extends User {\n  /**\n   * Array of ObjectIds referencing account activation requests handled by the admin\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'AccountActivationRequest' })\n  requests?: Types.ObjectId[];\n\n  /**\n   * Array of ObjectIds referencing user accounts managed by the admin\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'User' })\n  accounts?: Types.ObjectId[];\n}\n\n// Create schema for the Admin class\nexport const AdminSchema = SchemaFactory.createForClass(Admin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TutorSeeder.html":{"url":"injectables/TutorSeeder.html","title":"injectable - TutorSeeder","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TutorSeeder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/seeders/tutor.seeder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/seeders/tutor.seeder.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/seeders/tutor.seeder.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/seeders/tutor.seeder.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport * as bcrypt from 'bcryptjs';\nimport { Role } from 'src/common/enums/role.enum';\nimport { User, UserDocument } from '../users/user.schema';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { Availability } from 'src/common/enums/availability.enum';\nimport { Qualification } from 'src/common/enums/qualification.enum';\nimport { RateType } from 'src/common/enums/rate-type.enum';\nimport { City } from 'src/common/enums/city.enum';\nimport { Interest } from 'src/common/enums/interest.enum';\n\n@Injectable()\nexport class TutorSeeder implements OnModuleInit {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model,\n  ) {}\n\n  async onModuleInit() {\n    console.log('TutorSeeder initialized');\n  }\n  async seed() {\n    try {\n      const tutors = [\n        {\n          username: 'john_doe',\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'john.doe@example.com',\n          phoneNumber: '+92300300300',\n          password: 'tutorPassword123',\n          gender: Gender.MALE,\n          city: City.GUJRANWALA,\n          rateType: RateType.HOURLY,\n          rates: 200,\n          experience: 4,\n          qualification: Qualification.PHD,\n          subjects: [Interest.SOCIOLOGY, Interest.ART],\n          availability: [Availability.MON_1PM_4PM],\n        },\n        {\n          username: 'jane_smith',\n          firstName: 'Jane',\n          lastName: 'Smith',\n          email: 'jane.smith@example.com',\n          phoneNumber: '+92300400400',\n          password: 'tutorPassword123',\n          gender: Gender.FEMALE,\n          city: City.KARACHI,\n          rateType: RateType.MONTHLY,\n          rates: 15000,\n          experience: 4,\n          qualification: Qualification.DIPLOMA,\n          subjects: [Interest.SOCIOLOGY, Interest.ART],\n          availability: [Availability.TUE_9AM_12PM, Availability.TUE_1PM_4PM],\n        },\n        {\n          username: 'mike_jones',\n          firstName: 'Mike',\n          lastName: 'Jones',\n          email: 'mike.jones@example.com',\n          phoneNumber: '+92300500500',\n          password: 'tutorPassword123',\n          gender: Gender.MALE,\n          city: City.LAHORE,\n          rateType: RateType.HOURLY,\n          rates: 150,\n          experience: 2,\n          qualification: Qualification.PHD,\n          subjects: [Interest.SOCIOLOGY, Interest.ART],\n          availability: [Availability.MON_9AM_12PM, Availability.FRI_1PM_4PM],\n        },\n        {\n          username: 'anna_brown',\n          firstName: 'Anna',\n          lastName: 'Brown',\n          email: 'anna.brown@example.com',\n          phoneNumber: '+92300600600',\n          password: 'tutorPassword123',\n          gender: Gender.FEMALE,\n          city: City.GUJRANWALA,\n          rateType: RateType.MONTHLY,\n          rates: 17000,\n          experience: 5,\n          qualification: Qualification.MASTERS,\n          subjects: [Interest.SOCIOLOGY, Interest.ART],\n          availability: [Availability.MON_9AM_12PM, Availability.SUN_9AM_12PM],\n        },\n      ];\n\n      for (const tutorData of tutors) {\n        const tutorExists = await this.userModel.findOne({\n          email: tutorData.email,\n        });\n\n        if (!tutorExists) {\n          const hashedPassword = await bcrypt.hash(tutorData.password, 10);\n\n          const tutor = new this.userModel({\n            username: tutorData.username,\n            firstName: tutorData.firstName,\n            lastName: tutorData.lastName,\n            email: tutorData.email,\n            phoneNumber: tutorData.phoneNumber,\n            password: hashedPassword,\n            role: Role.TUTOR,\n            type: 'Tutor',\n            gender: tutorData.gender,\n            city: tutorData.city,\n            rateType: tutorData.rateType,\n            rates: tutorData.rates,\n            experience: tutorData.experience,\n            qualification: tutorData.qualification,\n            subjects: tutorData.subjects,\n            availability: tutorData.availability,\n            isActive: true,\n            isPhoneNumberVerified: true,\n            isEmailVerified: true,\n          });\n\n          await tutor.save();\n          console.log(\n            `Tutor ${tutorData.username} has been seeded successfully`,\n          );\n        } else {\n          console.log(`Tutor ${tutorData.username} already exists`);\n        }\n      }\n    } catch (error) {\n      console.error('Error seeding tutor users:', error);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TwilioController.html":{"url":"controllers/TwilioController.html","title":"controller - TwilioController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TwilioController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/twilio/twilio.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                twilio\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                generateTwilioAccessToken\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        generateTwilioAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTwilioAccessToken(identity: string, roomName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('access-token')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                roomName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.controller.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, OnModuleInit, Post } from '@nestjs/common';\nimport { TwilioService } from './twilio.service';\n\n@Controller('twilio')\nexport class TwilioController implements OnModuleInit {\n  constructor(private readonly twilioService: TwilioService) {}\n\n  onModuleInit() {\n    console.log('TwilioController initialized');\n  }\n\n  @Post('access-token')\n  async generateTwilioAccessToken(\n    @Body() identity: string,\n    @Body() roomName: string,\n  ) {\n    return this.twilioService.generateTwilioAccessToken(identity, roomName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TwilioModule.html":{"url":"modules/TwilioModule.html","title":"module - TwilioModule","body":"\n                   \n\n\n\n\n    Modules\n    TwilioModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TwilioModule\n\n\n\ncluster_TwilioModule_imports\n\n\n\ncluster_TwilioModule_exports\n\n\n\ncluster_TwilioModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nTwilioModule\n\nTwilioModule\n\nTwilioModule -->\n\nAuthModule->TwilioModule\n\n\n\n\n\nTwilioService \n\nTwilioService \n\nTwilioService  -->\n\nTwilioModule->TwilioService \n\n\n\n\n\nTwilioService\n\nTwilioService\n\nTwilioModule -->\n\nTwilioService->TwilioModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/twilio/twilio.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TwilioService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TwilioController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TwilioService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { forwardRef, Module, OnModuleInit } from '@nestjs/common';\nimport { TwilioService } from './twilio.service';\nimport { AuthModule } from '../auth/auth.module';\nimport { UsersModule } from '../users/users.module';\nimport { TwilioController } from './twilio.controller';\n\n@Module({\n  imports: [AuthModule, forwardRef(() => UsersModule)],\n  controllers: [TwilioController],\n  providers: [TwilioService],\n  exports: [TwilioService],\n})\nexport class TwilioModule implements OnModuleInit {\n  onModuleInit() {\n    console.log('TwilioModule initialized');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwilioService.html":{"url":"injectables/TwilioService.html","title":"injectable - TwilioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TwilioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/twilio/twilio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                verificationStore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRoom\n                            \n                            \n                                    Async\n                                fetchRoom\n                            \n                            \n                                    Async\n                                generateTwilioAccessToken\n                            \n                            \n                                    Private\n                                    Async\n                                getAccountSid\n                            \n                            \n                                    Private\n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Private\n                                    Async\n                                getMyPhoneNumber\n                            \n                            \n                                    Private\n                                    Async\n                                getTwilioApiKey\n                            \n                            \n                                    Private\n                                    Async\n                                getTwilioApiSecret\n                            \n                            \n                                    Private\n                                    Async\n                                getTwilioClient\n                            \n                            \n                                    Private\n                                    Async\n                                getTwilioPhoneNumber\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    Async\n                                sendPhoneNumberVerificationCode\n                            \n                            \n                                    Async\n                                verifyPhoneNumberCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, usersService: UsersService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/twilio/twilio.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createRoom\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRoom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchRoom\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchRoom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateTwilioAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTwilioAccessToken(identity: string, roomName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                roomName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getAccountSid\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccountSid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getAuthToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getMyPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyPhoneNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getTwilioApiKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTwilioApiKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getTwilioApiSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTwilioApiSecret()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getTwilioClient\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTwilioClient()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getTwilioPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTwilioPhoneNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendPhoneNumberVerificationCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendPhoneNumberVerificationCode(phoneNumberDto: PhoneNumberDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phoneNumberDto\n                                            \n                                                            PhoneNumberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyPhoneNumberCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyPhoneNumberCode(verifyPhoneNumberCodeDto: VerifyPhoneNumberCodeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/twilio/twilio.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                verifyPhoneNumberCodeDto\n                                            \n                                                            VerifyPhoneNumberCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        verificationStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/twilio/twilio.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  NotFoundException,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport * as Twilio from 'twilio';\n\nimport { AuthService } from '../auth/auth.service';\nimport { UsersService } from '../users/users.service';\nimport {\n  PhoneNumberDto,\n  VerifyPhoneNumberCodeDto,\n} from '../auth/dtos/auth.dto';\n\n@Injectable()\nexport class TwilioService implements OnModuleInit {\n  private readonly verificationStore: Map;\n\n  constructor(\n    private readonly authService: AuthService,\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n    private readonly configService: ConfigService,\n  ) {\n    this.verificationStore = new Map();\n  }\n\n  onModuleInit() {\n    console.log('TwilioService initialized');\n  }\n\n  private async getAccountSid(): Promise {\n    const accountSid = this.configService.get('TWILIO_ACCOUNT_SID');\n    return accountSid;\n  }\n\n  private async getAuthToken(): Promise {\n    const authToken = this.configService.get('TWILIO_AUTH_TOKEN');\n    return authToken;\n  }\n\n  private async getTwilioApiKey() {\n    const apiKey = this.configService.get('TWILIO_API_KEY');\n    return apiKey;\n  }\n  private async getTwilioApiSecret() {\n    const apiSecret = this.configService.get('TWILIO_API_SECRET');\n    return apiSecret;\n  }\n\n  private async getTwilioPhoneNumber(): Promise {\n    const twilioPhoneNumber = this.configService.get(\n      'TWILIO_PHONE_NUMBER',\n    );\n    return twilioPhoneNumber;\n  }\n\n  private async getMyPhoneNumber(): Promise {\n    const myPhoneNumber = this.configService.get(\n      'TWILIO_USER_PHONE_NUMBER',\n    );\n    return myPhoneNumber;\n  }\n\n  private async getTwilioClient(): Promise {\n    const accountSid = await this.getAccountSid();\n    const authToken = await this.getAuthToken();\n    return new Twilio.Twilio(accountSid, authToken);\n  }\n\n  async sendPhoneNumberVerificationCode(phoneNumberDto: PhoneNumberDto) {\n    console.log('Sending verification code to:', phoneNumberDto);\n    const { phoneNumber } = phoneNumberDto;\n\n    const user = await this.usersService.findUserByPhoneNumber(phoneNumber);\n\n    console.log('User phoneNumber:', phoneNumber);\n\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const client = await this.getTwilioClient();\n    const twilioPhoneNumber = await this.getTwilioPhoneNumber();\n    const verificationCode = await this.authService.generateVerificationCode();\n\n    this.verificationStore.set(phoneNumber, verificationCode);\n\n    await client.messages.create({\n      body: `Your verification code is: ${verificationCode}`,\n      from: twilioPhoneNumber,\n      to: phoneNumber,\n    });\n\n    return {\n      message: 'Verification code sent successfully',\n    };\n  }\n\n  async verifyPhoneNumberCode(\n    verifyPhoneNumberCodeDto: VerifyPhoneNumberCodeDto,\n  ) {\n    const { phoneNumber, code } = verifyPhoneNumberCodeDto;\n\n    const storedCode = this.verificationStore.get(phoneNumber);\n\n    if (!storedCode) {\n      throw new NotFoundException('Verification code not found or expired');\n    }\n\n    if (storedCode !== code) {\n      throw new NotFoundException('Invalid verification code');\n    }\n\n    this.verificationStore.delete(phoneNumber);\n\n    console.info(`Phone Number verification successful for: ${phoneNumber}`);\n\n    const user = await this.usersService.findUserByPhoneNumber(phoneNumber);\n\n    user.isPhoneNumberVerified = true;\n    await user.save();\n\n    return user;\n  }\n\n  async createRoom() {\n    const client = await this.getTwilioClient();\n    const room = await client.video.v1.rooms.create({\n      type: 'go',\n      uniqueName: 'My First Video Room',\n    });\n\n    console.log(room.sid);\n  }\n\n  async fetchRoom() {\n    const client = await this.getTwilioClient();\n\n    const room = await client.video.v1.rooms('DailyStandup').fetch();\n\n    console.log(room.sid);\n\n    return {\n      message: room.sid,\n    };\n  }\n\n  async generateTwilioAccessToken(identity: string, roomName: string) {\n    const accountSid = await this.getAccountSid();\n    const apiKey = await this.getTwilioApiKey();\n    const apiSecret = await this.getTwilioApiSecret();\n\n    if (!accountSid || !apiKey || !apiSecret) {\n      throw new Error(\n        'Twilio credentials are not properly configured in environment variables',\n      );\n    }\n\n    const accessToken = Twilio.jwt.AccessToken;\n\n    const videoGrant = new accessToken.VideoGrant({\n      room: roomName,\n    });\n\n    const token = new accessToken(accountSid, apiKey, apiSecret, { identity });\n\n    token.addGrant(videoGrant);\n\n    console.log(token.toJwt());\n\n    token.toJwt();\n\n    return {\n      token: token.toJwt(),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAdminDto.html":{"url":"classes/UpdateAdminDto.html","title":"class - UpdateAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UpdateUserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                profileImageUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isEmailVerified\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isPhoneNumberVerified\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        profileImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Gender)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:49\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isPhoneNumberVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:17\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsEmail,\n  IsEnum,\n  IsNumber,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n} from 'class-validator';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { Types } from 'mongoose';\n\nexport class UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  username?: string;\n\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @IsOptional()\n  @IsString()\n  password?: string;\n\n  @IsOptional()\n  @IsEnum(Gender)\n  gender?: Gender;\n\n  @IsOptional()\n  @IsString()\n  refreshToken?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  isActive?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isPhoneNumberVerified?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isEmailVerified?: boolean;\n}\n\nexport class UpdateStudentDto extends UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  grade?: string;\n\n  @IsOptional()\n  @IsArray()\n  interests?: string[];\n}\n\nexport class UpdateTutorDto extends UpdateUserDto {\n  @IsOptional()\n  @IsNumber()\n  rate?: number;\n\n  @IsOptional()\n  @IsNumber()\n  yearsOfExperience?: number;\n\n  @IsOptional()\n  @IsString()\n  qualification?: string;\n\n  @IsOptional()\n  @IsArray()\n  @IsMongoId({ each: true })\n  subjects?: Types.ObjectId[];\n\n  @IsOptional()\n  @IsArray()\n  availability?: string[];\n\n  @IsOptional()\n  @IsArray()\n  reviews?: string[];\n}\n\nexport class UpdateAdminDto extends UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  profileImageUrl?: string;\n\n  @IsOptional()\n  @IsString()\n  address?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStudentDto.html":{"url":"classes/UpdateStudentDto.html","title":"class - UpdateStudentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStudentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UpdateUserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                grade\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                interests\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isEmailVerified\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isPhoneNumberVerified\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        interests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Gender)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:49\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isPhoneNumberVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:17\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsEmail,\n  IsEnum,\n  IsNumber,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n} from 'class-validator';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { Types } from 'mongoose';\n\nexport class UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  username?: string;\n\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @IsOptional()\n  @IsString()\n  password?: string;\n\n  @IsOptional()\n  @IsEnum(Gender)\n  gender?: Gender;\n\n  @IsOptional()\n  @IsString()\n  refreshToken?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  isActive?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isPhoneNumberVerified?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isEmailVerified?: boolean;\n}\n\nexport class UpdateStudentDto extends UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  grade?: string;\n\n  @IsOptional()\n  @IsArray()\n  interests?: string[];\n}\n\nexport class UpdateTutorDto extends UpdateUserDto {\n  @IsOptional()\n  @IsNumber()\n  rate?: number;\n\n  @IsOptional()\n  @IsNumber()\n  yearsOfExperience?: number;\n\n  @IsOptional()\n  @IsString()\n  qualification?: string;\n\n  @IsOptional()\n  @IsArray()\n  @IsMongoId({ each: true })\n  subjects?: Types.ObjectId[];\n\n  @IsOptional()\n  @IsArray()\n  availability?: string[];\n\n  @IsOptional()\n  @IsArray()\n  reviews?: string[];\n}\n\nexport class UpdateAdminDto extends UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  profileImageUrl?: string;\n\n  @IsOptional()\n  @IsString()\n  address?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTutorDto.html":{"url":"classes/UpdateTutorDto.html","title":"class - UpdateTutorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTutorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UpdateUserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                availability\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                qualification\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                rate\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                reviews\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                subjects\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                yearsOfExperience\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isEmailVerified\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isPhoneNumberVerified\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        availability\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        qualification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        rate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        subjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@IsMongoId({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        yearsOfExperience\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Gender)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:49\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isPhoneNumberVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateUserDto:17\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsEmail,\n  IsEnum,\n  IsNumber,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n} from 'class-validator';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { Types } from 'mongoose';\n\nexport class UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  username?: string;\n\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @IsOptional()\n  @IsString()\n  password?: string;\n\n  @IsOptional()\n  @IsEnum(Gender)\n  gender?: Gender;\n\n  @IsOptional()\n  @IsString()\n  refreshToken?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  isActive?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isPhoneNumberVerified?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isEmailVerified?: boolean;\n}\n\nexport class UpdateStudentDto extends UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  grade?: string;\n\n  @IsOptional()\n  @IsArray()\n  interests?: string[];\n}\n\nexport class UpdateTutorDto extends UpdateUserDto {\n  @IsOptional()\n  @IsNumber()\n  rate?: number;\n\n  @IsOptional()\n  @IsNumber()\n  yearsOfExperience?: number;\n\n  @IsOptional()\n  @IsString()\n  qualification?: string;\n\n  @IsOptional()\n  @IsArray()\n  @IsMongoId({ each: true })\n  subjects?: Types.ObjectId[];\n\n  @IsOptional()\n  @IsArray()\n  availability?: string[];\n\n  @IsOptional()\n  @IsArray()\n  reviews?: string[];\n}\n\nexport class UpdateAdminDto extends UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  profileImageUrl?: string;\n\n  @IsOptional()\n  @IsString()\n  address?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isEmailVerified\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isPhoneNumberVerified\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Gender)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isPhoneNumberVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dtos/user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsEmail,\n  IsEnum,\n  IsNumber,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n} from 'class-validator';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { Types } from 'mongoose';\n\nexport class UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  username?: string;\n\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @IsOptional()\n  @IsString()\n  phoneNumber?: string;\n\n  @IsOptional()\n  @IsString()\n  password?: string;\n\n  @IsOptional()\n  @IsEnum(Gender)\n  gender?: Gender;\n\n  @IsOptional()\n  @IsString()\n  refreshToken?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  isActive?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isPhoneNumberVerified?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  isEmailVerified?: boolean;\n}\n\nexport class UpdateStudentDto extends UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  grade?: string;\n\n  @IsOptional()\n  @IsArray()\n  interests?: string[];\n}\n\nexport class UpdateTutorDto extends UpdateUserDto {\n  @IsOptional()\n  @IsNumber()\n  rate?: number;\n\n  @IsOptional()\n  @IsNumber()\n  yearsOfExperience?: number;\n\n  @IsOptional()\n  @IsString()\n  qualification?: string;\n\n  @IsOptional()\n  @IsArray()\n  @IsMongoId({ each: true })\n  subjects?: Types.ObjectId[];\n\n  @IsOptional()\n  @IsArray()\n  availability?: string[];\n\n  @IsOptional()\n  @IsArray()\n  reviews?: string[];\n}\n\nexport class UpdateAdminDto extends UpdateUserDto {\n  @IsOptional()\n  @IsString()\n  profileImageUrl?: string;\n\n  @IsOptional()\n  @IsString()\n  address?: string;\n\n  @IsOptional()\n  @IsString()\n  city?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isEmailVerified\n                            \n                            \n                                    \n                                isPhoneNumberVerified\n                            \n                            \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         City\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: City})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:147\n                        \n                    \n\n            \n                \n                    City of the user (optional)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:123\n                        \n                    \n\n            \n                \n                    Unique email for the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:111\n                        \n                    \n\n            \n                \n                    FIrst name for the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: Gender})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:141\n                        \n                    \n\n            \n                \n                    Gender of the user (optional)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:165\n                        \n                    \n\n            \n                \n                    Indicates whether the account is active\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:177\n                        \n                    \n\n            \n                \n                    Indicates whether the email is verified\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isPhoneNumberVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:171\n                        \n                    \n\n            \n                \n                    Indicates whether the phone number is verified\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:117\n                        \n                    \n\n            \n                \n                    Last name for the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:135\n                        \n                    \n\n            \n                \n                    Encrypted password for authentication\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:129\n                        \n                    \n\n            \n                \n                    Unique phone number for the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:159\n                        \n                    \n\n            \n                \n                    Refresh token for session management\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: Role})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:153\n                        \n                    \n\n            \n                \n                    Role of the user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/user.schema.ts:105\n                        \n                    \n\n            \n                \n                    Unique username for the user\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { RateType } from 'src/common/enums/rate-type.enum';\nimport { Qualification } from 'src/common/enums/qualification.enum';\nimport { City } from 'src/common/enums/city.enum';\nimport { Grade } from 'src/common/enums/grade.enum';\nimport { Interest } from 'src/common/enums/interest.enum';\nimport { Availability } from 'src/common/enums/availability.enum';\nimport { Role } from 'src/common/enums/role.enum';\n\n// Type for User Document\nexport type UserDocument = Tutor & Student & User & Document;\n\n//\n// ==============================\n// BASE USER SCHEMA\n// ==============================\n//\n@Schema({\n  timestamps: true,\n  discriminatorKey: 'type',\n  // toJSON: {\n  //   transform: (doc, ret) => {\n  //     if (!ret.gender) {\n  //       delete ret.gender;\n  //     }\n  //     if (!ret.city) {\n  //       delete ret.city;\n  //     }\n  //     // if (!ret.rateType) {\n  //     //   delete ret.rateType;\n  //     // }\n  //     // if (!ret.rates) {\n  //     //   delete ret.rates;\n  //     // }\n  //     // if (!ret.experience) {\n  //     //   delete ret.experience;\n  //     // }\n  //     // if (!ret.qualification) {\n  //     //   delete ret.qualification;\n  //     // }\n  //     // if (!ret.availability) {\n  //     //   delete ret.availability;\n  //     // }\n  //     if (!ret.grade) {\n  //       delete ret.grade;\n  //     }\n  //     if (!ret.interest) {\n  //       delete ret.interest;\n  //     }\n  //     if (!ret.tutors) {\n  //       delete ret.tutors;\n  //     }\n  //     if (!ret.students) {\n  //       delete ret.students;\n  //     }\n  //     return ret;\n  //   },\n  // },\n  // toObject: {\n  //   transform: (doc, ret) => {\n  //     if (!ret.gender) {\n  //       delete ret.gender;\n  //     }\n  //     if (!ret.city) {\n  //       delete ret.city;\n  //     }\n  //     // if (!ret.rateType) {\n  //     //   delete ret.rateType;\n  //     // }\n  //     // if (!ret.rates) {\n  //     //   delete ret.rates;\n  //     // }\n  //     // if (!ret.experience) {\n  //     //   delete ret.experience;\n  //     // }\n  //     // if (!ret.qualification) {\n  //     //   delete ret.qualification;\n  //     // }\n  //     // if (!ret.availability) {\n  //     //   delete ret.availability;\n  //     // }\n  //     if (!ret.grade) {\n  //       delete ret.grade;\n  //     }\n  //     if (!ret.interest) {\n  //       delete ret.interest;\n  //     }\n  //     if (!ret.tutors) {\n  //       delete ret.tutors;\n  //     }\n  //     if (!ret.students) {\n  //       delete ret.students;\n  //     }\n  //     return ret;\n  //   },\n  // },\n})\nexport class User {\n  /**\n   * Unique username for the user\n   */\n  @Prop({ type: String, required: true, unique: true, index: true })\n  username: string;\n\n  /**\n   * FIrst name for the user\n   */\n  @Prop({ type: String })\n  firstName?: string;\n\n  /**\n   * Last name for the user\n   */\n  @Prop({ type: String })\n  lastName?: string;\n\n  /**\n   * Unique email for the user\n   */\n  @Prop({ type: String, required: true, unique: true, index: true })\n  email: string;\n\n  /**\n   * Unique phone number for the user\n   */\n  @Prop({ type: String, required: true, unique: true })\n  phoneNumber: string;\n\n  /**\n   * Encrypted password for authentication\n   */\n  @Prop({ type: String, required: true })\n  password: string;\n\n  /**\n   * Gender of the user (optional)\n   */\n  @Prop({ type: String, enum: Gender })\n  gender?: Gender;\n\n  /**\n   * City of the user (optional)\n   */\n  @Prop({ type: String, enum: City })\n  city?: City;\n\n  /**\n   * Role of the user\n   */\n  @Prop({ type: String, enum: Role })\n  role: Role;\n\n  /**\n   * Refresh token for session management\n   */\n  @Prop({ type: String })\n  refreshToken?: string;\n\n  /**\n   * Indicates whether the account is active\n   */\n  @Prop({ type: Boolean, default: false })\n  isActive: boolean;\n\n  /**\n   * Indicates whether the phone number is verified\n   */\n  @Prop({ type: Boolean, default: false })\n  isPhoneNumberVerified: boolean;\n\n  /**\n   * Indicates whether the email is verified\n   */\n  @Prop({ type: Boolean, default: false })\n  isEmailVerified: boolean;\n}\n\n// Create schema for the base User class\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n//\n// ==============================\n// STUDENT SCHEMA\n// ==============================\n//\n@Schema()\nexport class Student extends User {\n  /**\n   * Grade of the student (e.g., Grade 10, O-Level)\n   */\n  @Prop({ type: String, enum: Grade, required: true })\n  grade: Grade;\n\n  /**\n   * List of student interests (e.g., Mathematics, Sports)\n   */\n  @Prop({ type: [String], enum: Interest, required: true })\n  interests: Interest[];\n\n  /**\n   * Array of ObjectIds referencing the tutors associated with the student\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'Tutor' })\n  tutors?: Types.ObjectId[];\n}\n\n// Create schema for the Student class\nexport const StudentSchema = SchemaFactory.createForClass(Student);\n\n//\n// ==============================\n// TUTOR SCHEMA\n// ==============================\n//\n@Schema()\nexport class Tutor extends User {\n  /**\n   * Rates charged by the tutor (e.g., 1000 PKR per hour)\n   */\n  @Prop({ type: Number, required: true })\n  rates: number;\n\n  /**\n   * Number of years of teaching experience\n   */\n  @Prop({ type: Number, required: true })\n  experience: number;\n\n  /**\n   * Qualification of the tutor (e.g., MSc in Mathematics)\n   */\n  @Prop({ type: String, enum: Qualification, required: true })\n  qualification: Qualification;\n\n  @Prop({ type: [String], enum: Interest })\n  subjects?: Interest[];\n\n  /**\n   * Rate type (Hourly, Monthly, etc.)\n   * Refers to the RateType enum\n   */\n  @Prop({ type: String, enum: RateType, default: RateType.MONTHLY })\n  rateType: RateType;\n\n  /**\n   * Array of ObjectIds referencing the students taught by the tutor\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'Student' })\n  students?: Types.ObjectId[];\n\n  /**\n   * Array of availability slots (e.g., 'Monday 2-4 PM')\n   */\n  @Prop({ type: [String], enum: Availability, required: true })\n  availability: Availability[];\n}\n\n// Create schema for the Tutor class\nexport const TutorSchema = SchemaFactory.createForClass(Tutor);\n\n//\n// ==============================\n// ADMIN SCHEMA\n// ==============================\n//\n@Schema()\nexport class Admin extends User {\n  /**\n   * Array of ObjectIds referencing account activation requests handled by the admin\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'AccountActivationRequest' })\n  requests?: Types.ObjectId[];\n\n  /**\n   * Array of ObjectIds referencing user accounts managed by the admin\n   */\n  @Prop({ type: [Types.ObjectId], ref: 'User' })\n  accounts?: Types.ObjectId[];\n}\n\n// Create schema for the Admin class\nexport const AdminSchema = SchemaFactory.createForClass(Admin);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                connectUser\n                            \n                            \n                                    \n                                    Async\n                                getUserById\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    \n                                    Async\n                                sendEmailVerificationCode\n                            \n                            \n                                    \n                                    Async\n                                sendPhoneNumberVerificationCode\n                            \n                            \n                                    \n                                    Async\n                                verifyEmailCode\n                            \n                            \n                                    \n                                    Async\n                                verifyPhoneNumberCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        connectUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    connectUser(connectDto: ConnectDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('connect')@Roles(Role.STUDENT)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                connectDto\n                                            \n                                                            ConnectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(userId: Types.ObjectId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':userId')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendEmailVerificationCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailVerificationCode(emailDto: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('email/send-code')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailDto\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendPhoneNumberVerificationCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendPhoneNumberVerificationCode(phoneNumberDto: PhoneNumberDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('phone-number/send-code')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phoneNumberDto\n                                            \n                                                            PhoneNumberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        verifyEmailCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmailCode(verifyEmailCodeDto: VerifyEmailCodeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('email/verify-code')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                verifyEmailCodeDto\n                                            \n                                                            VerifyEmailCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        verifyPhoneNumberCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyPhoneNumberCode(verifyPhoneNumberCodeDto: VerifyPhoneNumberCodeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('phone-number/verify-code')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                verifyPhoneNumberCodeDto\n                                            \n                                                            VerifyPhoneNumberCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  forwardRef,\n  Get,\n  Inject,\n  OnModuleInit,\n  Param,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { IResponse } from 'src/common/interfaces/response.interface';\nimport { IUser } from './interfaces/user.interface';\nimport { TwilioService } from '../twilio/twilio.service';\nimport { Types } from 'mongoose';\nimport {\n  EmailDto,\n  PhoneNumberDto,\n  VerifyEmailCodeDto,\n  VerifyPhoneNumberCodeDto,\n} from '../auth/dtos/auth.dto';\nimport { ConnectDto } from './dtos/connect.dto';\nimport { Role } from 'src/common/enums/role.enum';\nimport { Roles } from 'src/common/decorators/role.decorator';\nimport { Request } from 'express';\nimport { MailerService } from '../mailer/mailer.service';\n\n@Controller('users')\nexport class UsersController implements OnModuleInit {\n  constructor(\n    @Inject(forwardRef(() => TwilioService))\n    private readonly twilioService: TwilioService,\n    @Inject(forwardRef(() => MailerService))\n    private readonly mailerService: MailerService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  onModuleInit() {\n    console.log('UsersController initialized');\n  }\n\n  @Get(':userId')\n  async getUserById(\n    @Param('userId') userId: Types.ObjectId,\n  ): Promise>> {\n    return await this.usersService.getUserById(userId);\n  }\n\n  @Post('phone-number/send-code')\n  async sendPhoneNumberVerificationCode(\n    @Body() phoneNumberDto: PhoneNumberDto,\n  ) {\n    return await this.twilioService.sendPhoneNumberVerificationCode(\n      phoneNumberDto,\n    );\n  }\n\n  @Post('email/send-code')\n  async sendEmailVerificationCode(@Body() emailDto: EmailDto) {\n    return await this.mailerService.sendEmailVerificationCode(emailDto);\n  }\n\n  @Post('email/verify-code')\n  async verifyEmailCode(@Body() verifyEmailCodeDto: VerifyEmailCodeDto) {\n    return await this.mailerService.verifyEmailCode(verifyEmailCodeDto);\n  }\n\n  @Post('phone-number/verify-code')\n  async verifyPhoneNumberCode(\n    @Body() verifyPhoneNumberCodeDto: VerifyPhoneNumberCodeDto,\n  ) {\n    return await this.twilioService.verifyPhoneNumberCode(\n      verifyPhoneNumberCodeDto,\n    );\n  }\n\n  @Post('connect')\n  @Roles(Role.STUDENT)\n  connectUser(@Body() connectDto: ConnectDto, @Req() request: Request) {\n    const { firstName, lastName, gender, city, interests, grade } =\n      request.user;\n    return this.usersService.connectUser(\n      connectDto,\n      firstName,\n      lastName,\n      gender,\n      city,\n      interests,\n      grade,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.module.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.module.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  forwardRef,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  OnModuleInit,\n  RequestMethod,\n} from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport {\n  Admin,\n  AdminSchema,\n  Student,\n  StudentSchema,\n  Tutor,\n  TutorSchema,\n  User,\n  UserSchema,\n} from './user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { VerifyAccessTokenMiddleware } from 'src/common/middlewares/verify-access-token.middleware';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MailerModule } from '../mailer/mailer.module';\nimport { TwilioModule } from '../twilio/twilio.module';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: configService.get('ACCESS_TOKEN_EXPIRY'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('REFRESH_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: configService.get('REFRESH_TOKEN_EXPIRY'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeatureAsync([\n      {\n        name: User.name,\n        useFactory: () => {\n          const schema = UserSchema;\n          schema.discriminator(Student.name, StudentSchema);\n          schema.discriminator(Tutor.name, TutorSchema);\n          schema.discriminator(Admin.name, AdminSchema);\n          return schema;\n        },\n      },\n    ]),\n    forwardRef(() => MailerModule),\n    forwardRef(() => TwilioModule),\n    AuthModule,\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule implements NestModule, OnModuleInit {\n  onModuleInit() {\n    console.log('UsersModule initialized');\n  }\n\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(VerifyAccessTokenMiddleware)\n      .forRoutes({ path: 'users/connect', method: RequestMethod.POST });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connectUser\n                            \n                            \n                                    Async\n                                findAllUsers\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                findUserByPhoneNumber\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUserByIdAndUpdate\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        connectUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    connectUser(connectDto: ConnectDto, firstName: string, lastName: string, gender: Gender, city: City, interests: Interest[], grade: Grade)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                connectDto\n                                            \n                                                            ConnectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gender\n                                            \n                                                            Gender\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                city\n                                            \n                                                            City\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                interests\n                                            \n                                                            Interest[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                grade\n                                            \n                                                            Grade\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers(city: City, role: Role, page: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                city\n                                            \n                                                            City\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByPhoneNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phoneNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(userId: Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByIdAndUpdate(userId: Types.ObjectId, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable, OnModuleInit } from '@nestjs/common';\nimport { IResponse } from 'src/common/interfaces/response.interface';\nimport { IUser } from './interfaces/user.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User, UserDocument } from './user.schema';\nimport { Model, Types } from 'mongoose';\nimport { UpdateUserDto } from './dtos/user.dto';\nimport { ConnectDto } from './dtos/connect.dto';\nimport { Role } from 'src/common/enums/role.enum';\nimport { MailerService } from '../mailer/mailer.service';\nimport { MailDto } from '../mailer/dtos/mail.dto';\nimport { Gender } from 'src/common/enums/gender.enum';\nimport { Interest } from 'src/common/enums/interest.enum';\nimport { City } from 'src/common/enums/city.enum';\nimport { Grade } from 'src/common/enums/grade.enum';\n\n@Injectable()\nexport class UsersService implements OnModuleInit {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model,\n    @Inject(forwardRef(() => MailerService))\n    private readonly mailerService: MailerService,\n  ) {}\n\n  async onModuleInit() {\n    console.log('UsersService initialized');\n  }\n\n  async findAllUsers(city: City, role: Role, page: number, limit: number) {\n    try {\n      page = page > 0 ? page : 1;\n      limit = limit > 0 ? limit : 10;\n\n      const skip = (page - 1) * limit;\n\n      // const count = await this.userModel.countDocuments();\n\n      const users = await this.userModel.aggregate([\n        {\n          $match: {},\n        },\n        {\n          $project: {\n            _id: 0,\n            password: 0,\n            refreshToken: 0,\n          },\n        },\n        {\n          $skip: skip,\n        },\n        {\n          $limit: limit,\n        },\n      ]);\n\n      if (!users) {\n        throw new Error('No users found');\n      }\n\n      return {\n        statusCode: 200,\n        message: 'Users retrieved successfully',\n        data: users,\n      };\n    } catch {\n      throw new Error('Failed to retrieve users');\n    }\n  }\n\n  async getUserById(\n    userId: Types.ObjectId,\n  ): Promise>> {\n    const user = await this.userModel.findById(userId);\n    if (!user) {\n      throw new Error('User not found');\n    }\n    return {\n      statusCode: 200,\n      message: 'User retrieved successfully',\n      data: user,\n    };\n  }\n\n  async findUserByPhoneNumber(phoneNumber: string) {\n    const user = await this.userModel.findOne({\n      phoneNumber: phoneNumber,\n    });\n\n    if (!user) {\n      throw new Error('User not found');\n    }\n\n    return user;\n  }\n\n  async findUserByEmail(email: string) {\n    const user = await this.userModel.findOne({\n      email: email,\n    });\n\n    if (!user) {\n      throw new Error('User not found');\n    }\n\n    return user;\n  }\n\n  async getUserByIdAndUpdate(\n    userId: Types.ObjectId,\n    updateUserDto: UpdateUserDto,\n  ): Promise>> {\n    const updatedUser = await this.userModel.findByIdAndUpdate(\n      userId,\n      { ...updateUserDto },\n      {\n        new: true,\n        runValidators: true,\n      },\n    );\n    if (!updatedUser) {\n      throw new Error('User not found');\n    }\n    return {\n      statusCode: 200,\n      message: 'User updated successfully',\n      data: updatedUser,\n    };\n  }\n\n  async connectUser(\n    connectDto: ConnectDto,\n    firstName: string,\n    lastName: string,\n    gender: Gender,\n    city: City,\n    interests: Interest[],\n    grade: Grade,\n  ) {\n    try {\n      const { userId } = connectDto;\n\n      const user = await this.userModel.findById(userId);\n\n      const { role } = user;\n\n      if (role && role === Role.STUDENT) {\n        throw new Error(\n          'Only students can connect to tutor not other students',\n        );\n      }\n\n      const { email } = user;\n\n      const mailDto: MailDto = {\n        to: email,\n        firstName: firstName,\n        lastName: lastName,\n        city: city,\n        grade: grade,\n        gender: gender,\n        interests: interests,\n      };\n\n      const sendMail = this.mailerService.sendMail(mailDto);\n\n      return {\n        statusCode: 200,\n        message: 'connection email has been sent to the tutor',\n        data: sendMail,\n      };\n    } catch (error) {\n      console.error(`${error.message}`);\n      throw new Error(`${error.message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyAccessTokenMiddleware.html":{"url":"injectables/VerifyAccessTokenMiddleware.html","title":"injectable - VerifyAccessTokenMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VerifyAccessTokenMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/verify-access-token.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/verify-access-token.middleware.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/middlewares/verify-access-token.middleware.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request, Response, NextFunction } from 'express';\nimport { AuthService } from 'src/modules/auth/auth.service';\n\n@Injectable()\nexport class VerifyAccessTokenMiddleware implements NestMiddleware {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly authService: AuthService,\n  ) {}\n\n  async use(request: Request, response: Response, next: NextFunction) {\n    try {\n      const token = request.cookies['accessToken'];\n\n      if (!token) {\n        throw new Error('Access Token not found in request');\n      }\n\n      const accessTokenSecret = await this.authService.getAccessToken();\n\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: accessTokenSecret,\n      });\n\n      request.user = payload;\n      next();\n    } catch (error) {\n      throw new Error(error?.message || 'Invalid access token');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyEmailCodeDto.html":{"url":"classes/VerifyEmailCodeDto.html","title":"class - VerifyEmailCodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyEmailCodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\nimport { Role } from 'src/common/enums/role.enum';\n\nexport class RegisterDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\nexport class PhoneNumberDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyPhoneNumberCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class EmailDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyEmailCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyPhoneNumberCodeDto.html":{"url":"classes/VerifyPhoneNumberCodeDto.html","title":"class - VerifyPhoneNumberCodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyPhoneNumberCodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsPhoneNumber('PK')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dtos/auth.dto.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsEnum,\n  IsNotEmpty,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\nimport { Role } from 'src/common/enums/role.enum';\n\nexport class RegisterDto {\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\nexport class PhoneNumberDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyPhoneNumberCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('PK')\n  phoneNumber: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class EmailDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\nexport class VerifyEmailCodeDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  code: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(Role)\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/common/constants/gender.constant.ts\n            \n            variable\n            GENDERS_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/constants/role.constant.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/role.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/guards/role.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interfaces/response.interface.ts\n            \n            interface\n            IResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/middlewares/verify-access-token.middleware.ts\n            \n            injectable\n            VerifyAccessTokenMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/pipes/hash-password/hash-password.pipe.ts\n            \n            injectable\n            HashPasswordPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/pipes/refresh-token/refresh-token.pipe.ts\n            \n            injectable\n            RefreshTokenPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/accounts/account.schema.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/modules/accounts/account.schema.ts\n            \n            variable\n            AccountSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/accounts/account.schema.ts\n            \n            type alias\n            AccountDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/accounts/accounts.controller.ts\n            \n            controller\n            AccountsController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/accounts/accounts.service.ts\n            \n            injectable\n            AccountsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/accounts/dtos/account.dto.ts\n            \n            class\n            AccountDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/accounts/interfaces/account.interface.ts\n            \n            interface\n            IAccount\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.schema.ts\n            \n            class\n            AccountActivationRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/admin/admin.schema.ts\n            \n            variable\n            AccountActivationRequestSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/admin/admin.schema.ts\n            \n            type alias\n            AccountActivationRequestDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/admin/dtos/admin.dto.ts\n            \n            class\n            AccountActivationRequestDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/admin/dtos/admin.dto.ts\n            \n            class\n            RequestDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/admin/interfaces/admin.interface.ts\n            \n            interface\n            IAccountActivationRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/auth.dto.ts\n            \n            class\n            EmailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/auth.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/auth.dto.ts\n            \n            class\n            PhoneNumberDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/auth.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/auth.dto.ts\n            \n            class\n            VerifyEmailCodeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dtos/auth.dto.ts\n            \n            class\n            VerifyPhoneNumberCodeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth.interface.ts\n            \n            interface\n            ILogin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth.interface.ts\n            \n            interface\n            IPhoneNumber\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth.interface.ts\n            \n            interface\n            IRegister\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth.interface.ts\n            \n            interface\n            IVerifyCode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/comments/comment.schema.ts\n            \n            class\n            Comment\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/modules/comments/comment.schema.ts\n            \n            variable\n            CommentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/comments/comment.schema.ts\n            \n            type alias\n            CommentDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/comments/comments.controller.ts\n            \n            controller\n            CommentsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/comments/comments.service.ts\n            \n            injectable\n            CommentsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/comments/dtos/comment.dto.ts\n            \n            class\n            CreateCommentDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/comments/interfaces/comment.interface.ts\n            \n            interface\n            IComment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/mailer/dtos/mail.dto.ts\n            \n            class\n            MailDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/mailer/interfaces/mail.interface.ts\n            \n            interface\n            IMail\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/messages/dtos/message.dto.ts\n            \n            class\n            MessageDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/messages/interfaces/message.interface.ts\n            \n            interface\n            IMessage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/messages/message.schema.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/messages/message.schema.ts\n            \n            variable\n            MessageSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/messages/message.schema.ts\n            \n            type alias\n            MessageDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/messages/messages.gateway.ts\n            \n            class\n            MessagesGateway\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/seeders/admin.seeder.ts\n            \n            injectable\n            AdminSeeder\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/seeders/student.seeder.ts\n            \n            injectable\n            StudentSeeder\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/seeders/tutor.seeder.ts\n            \n            injectable\n            TutorSeeder\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/twilio/twilio.controller.ts\n            \n            controller\n            TwilioController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/twilio/twilio.service.ts\n            \n            injectable\n            TwilioService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/connect.dto.ts\n            \n            class\n            ConnectDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/user.dto.ts\n            \n            class\n            UpdateAdminDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/user.dto.ts\n            \n            class\n            UpdateStudentDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/user.dto.ts\n            \n            class\n            UpdateTutorDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/modules/users/dtos/user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/users/interfaces/connect.interface.ts\n            \n            interface\n            IConnect\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/interfaces/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/modules/users/user.schema.ts\n            \n            class\n            Admin\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/modules/users/user.schema.ts\n            \n            class\n            Student\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/modules/users/user.schema.ts\n            \n            class\n            Tutor\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/modules/users/user.schema.ts\n            \n            class\n            User\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                        src/modules/users/user.schema.ts\n            \n            variable\n            AdminSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/users/user.schema.ts\n            \n            variable\n            StudentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/users/user.schema.ts\n            \n            variable\n            TutorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/users/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/users/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/ioredis : ^2.0.2\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/axios : ^3.1.3\n        \n            @nestjs/common : ^10.4.15\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.4.15\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.6\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/platform-socket.io : ^10.4.15\n        \n            @nestjs/swagger : ^8.1.0\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/websockets : ^10.4.15\n        \n            @videosdk.live/js-sdk : ^0.0.100\n        \n            axios : ^1.7.9\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            crypto-js : ^4.2.0\n        \n            dotenv : ^16.4.7\n        \n            ejs : ^3.1.10\n        \n            ioredis : ^5.4.1\n        \n            jsonwebtoken : ^9.0.2\n        \n            mongo-seeding : ^4.0.1\n        \n            mongoose : ^8.9.1\n        \n            nestjs-command : ^3.1.4\n        \n            nodemailer : ^6.9.16\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            socket.io : ^4.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            twilio : ^5.4.0\n        \n            twilio-video : ^2.29.0\n        \n            yargs : ^17.7.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Availability   (src/.../availability.enum.ts)\n                        \n                        \n                            City   (src/.../city.enum.ts)\n                        \n                        \n                            Connect   (src/.../connect.enum.ts)\n                        \n                        \n                            Gender   (src/.../gender.enum.ts)\n                        \n                        \n                            Grade   (src/.../grade.enum.ts)\n                        \n                        \n                            Interest   (src/.../interest.enum.ts)\n                        \n                        \n                            Qualification   (src/.../qualification.enum.ts)\n                        \n                        \n                            RateType   (src/.../rate-type.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/enums/availability.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Availability\n                    \n                \n                        \n                            \n                                 MON_9AM_12PM\n                            \n                        \n                        \n                            \n                                Value : Mon 9 AM - 12 PM\n                            \n                        \n                        \n                            \n                                 MON_1PM_4PM\n                            \n                        \n                        \n                            \n                                Value : Mon 1 PM - 4 PM\n                            \n                        \n                        \n                            \n                                 TUE_9AM_12PM\n                            \n                        \n                        \n                            \n                                Value : Tue 9 AM - 12 PM\n                            \n                        \n                        \n                            \n                                 TUE_1PM_4PM\n                            \n                        \n                        \n                            \n                                Value : Tue 1 PM - 4 PM\n                            \n                        \n                        \n                            \n                                 WED_9AM_12PM\n                            \n                        \n                        \n                            \n                                Value : Wed 9 AM - 12 PM\n                            \n                        \n                        \n                            \n                                 WED_1PM_4PM\n                            \n                        \n                        \n                            \n                                Value : Wed 1 PM - 4 PM\n                            \n                        \n                        \n                            \n                                 THU_9AM_12PM\n                            \n                        \n                        \n                            \n                                Value : Thu 9 AM - 12 PM\n                            \n                        \n                        \n                            \n                                 THU_1PM_4PM\n                            \n                        \n                        \n                            \n                                Value : Thu 1 PM - 4 PM\n                            \n                        \n                        \n                            \n                                 FRI_9AM_12PM\n                            \n                        \n                        \n                            \n                                Value : Fri 9 AM - 12 PM\n                            \n                        \n                        \n                            \n                                 FRI_1PM_4PM\n                            \n                        \n                        \n                            \n                                Value : Fri 1 PM - 4 PM\n                            \n                        \n                        \n                            \n                                 SAT_9AM_12PM\n                            \n                        \n                        \n                            \n                                Value : Sat 9 AM - 12 PM\n                            \n                        \n                        \n                            \n                                 SAT_1PM_4PM\n                            \n                        \n                        \n                            \n                                Value : Sat 1 PM - 4 PM\n                            \n                        \n                        \n                            \n                                 SUN_9AM_12PM\n                            \n                        \n                        \n                            \n                                Value : Sun 9 AM - 12 PM\n                            \n                        \n                        \n                            \n                                 SUN_1PM_4PM\n                            \n                        \n                        \n                            \n                                Value : Sun 1 PM - 4 PM\n                            \n                        \n            \n        \n\n    src/common/enums/city.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        City\n                    \n                \n                        \n                            \n                                 ISLAMABAD\n                            \n                        \n                        \n                            \n                                Value : Islamabad\n                            \n                        \n                        \n                            \n                                 KARACHI\n                            \n                        \n                        \n                            \n                                Value : Karachi\n                            \n                        \n                        \n                            \n                                 LAHORE\n                            \n                        \n                        \n                            \n                                Value : Lahore\n                            \n                        \n                        \n                            \n                                 RAWALPINDI\n                            \n                        \n                        \n                            \n                                Value : Rawalpindi\n                            \n                        \n                        \n                            \n                                 PESHAWAR\n                            \n                        \n                        \n                            \n                                Value : Peshawar\n                            \n                        \n                        \n                            \n                                 QUETTA\n                            \n                        \n                        \n                            \n                                Value : Quetta\n                            \n                        \n                        \n                            \n                                 MULTAN\n                            \n                        \n                        \n                            \n                                Value : Multan\n                            \n                        \n                        \n                            \n                                 FSD\n                            \n                        \n                        \n                            \n                                Value : Faisalabad\n                            \n                        \n                        \n                            \n                                 SIALKOT\n                            \n                        \n                        \n                            \n                                Value : Sialkot\n                            \n                        \n                        \n                            \n                                 GUJRANWALA\n                            \n                        \n                        \n                            \n                                Value : Gujranwala\n                            \n                        \n                        \n                            \n                                 ISLAMABAD_RURAL\n                            \n                        \n                        \n                            \n                                Value : Islamabad Rural\n                            \n                        \n                        \n                            \n                                 SARGODHA\n                            \n                        \n                        \n                            \n                                Value : Sargodha\n                            \n                        \n                        \n                            \n                                 ABBOTTABAD\n                            \n                        \n                        \n                            \n                                Value : Abbottabad\n                            \n                        \n                        \n                            \n                                 BHAKKAR\n                            \n                        \n                        \n                            \n                                Value : Bhakkar\n                            \n                        \n                        \n                            \n                                 SUKKUR\n                            \n                        \n                        \n                            \n                                Value : Sukkur\n                            \n                        \n                        \n                            \n                                 MURREE\n                            \n                        \n                        \n                            \n                                Value : Murree\n                            \n                        \n                        \n                            \n                                 HYDERABAD\n                            \n                        \n                        \n                            \n                                Value : Hyderabad\n                            \n                        \n                        \n                            \n                                 JHELUM\n                            \n                        \n                        \n                            \n                                Value : Jhelum\n                            \n                        \n                        \n                            \n                                 GILGIT\n                            \n                        \n                        \n                            \n                                Value : Gilgit\n                            \n                        \n                        \n                            \n                                 SKARDU\n                            \n                        \n                        \n                            \n                                Value : Skardu\n                            \n                        \n                        \n                            \n                                 BAHAWALPUR\n                            \n                        \n                        \n                            \n                                Value : Bahawalpur\n                            \n                        \n                        \n                            \n                                 OKARA\n                            \n                        \n                        \n                            \n                                Value : Okara\n                            \n                        \n                        \n                            \n                                 CHINIOT\n                            \n                        \n                        \n                            \n                                Value : Chiniot\n                            \n                        \n                        \n                            \n                                 DERA_GHAZI_KHAN\n                            \n                        \n                        \n                            \n                                Value : Dera Ghazi Khan\n                            \n                        \n                        \n                            \n                                 CHAKWAL\n                            \n                        \n                        \n                            \n                                Value : Chakwal\n                            \n                        \n                        \n                            \n                                 MIRPUR\n                            \n                        \n                        \n                            \n                                Value : Mirpur\n                            \n                        \n                        \n                            \n                                 KOHAT\n                            \n                        \n                        \n                            \n                                Value : Kohat\n                            \n                        \n                        \n                            \n                                 NAROWAL\n                            \n                        \n                        \n                            \n                                Value : Narowal\n                            \n                        \n                        \n                            \n                                 MARDAN\n                            \n                        \n                        \n                            \n                                Value : Mardan\n                            \n                        \n                        \n                            \n                                 SWAT\n                            \n                        \n                        \n                            \n                                Value : Swat\n                            \n                        \n                        \n                            \n                                 NASEERABAD\n                            \n                        \n                        \n                            \n                                Value : Naseerabad\n                            \n                        \n            \n        \n\n    src/common/enums/connect.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Connect\n                    \n                \n                        \n                            \n                                 CONNECT\n                            \n                        \n                        \n                            \n                                Value : Connect\n                            \n                        \n            \n        \n\n    src/common/enums/gender.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : Male\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : Female\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : Other\n                            \n                        \n            \n        \n\n    src/common/enums/grade.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Grade\n                    \n                \n                        \n                            \n                                 PRE_SCHOOL\n                            \n                        \n                        \n                            \n                                Value : Pre-School\n                            \n                        \n                        \n                            \n                                 KINDERGARTEN\n                            \n                        \n                        \n                            \n                                Value : Kindergarten\n                            \n                        \n                        \n                            \n                                 GRADE_1\n                            \n                        \n                        \n                            \n                                Value : Grade 1\n                            \n                        \n                        \n                            \n                                 GRADE_2\n                            \n                        \n                        \n                            \n                                Value : Grade 2\n                            \n                        \n                        \n                            \n                                 GRADE_3\n                            \n                        \n                        \n                            \n                                Value : Grade 3\n                            \n                        \n                        \n                            \n                                 GRADE_4\n                            \n                        \n                        \n                            \n                                Value : Grade 4\n                            \n                        \n                        \n                            \n                                 GRADE_5\n                            \n                        \n                        \n                            \n                                Value : Grade 5\n                            \n                        \n                        \n                            \n                                 GRADE_6\n                            \n                        \n                        \n                            \n                                Value : Grade 6\n                            \n                        \n                        \n                            \n                                 GRADE_7\n                            \n                        \n                        \n                            \n                                Value : Grade 7\n                            \n                        \n                        \n                            \n                                 GRADE_8\n                            \n                        \n                        \n                            \n                                Value : Grade 8\n                            \n                        \n                        \n                            \n                                 GRADE_9\n                            \n                        \n                        \n                            \n                                Value : Grade 9\n                            \n                        \n                        \n                            \n                                 GRADE_10\n                            \n                        \n                        \n                            \n                                Value : Grade 10\n                            \n                        \n                        \n                            \n                                 GRADE_11\n                            \n                        \n                        \n                            \n                                Value : Grade 11\n                            \n                        \n                        \n                            \n                                 GRADE_12\n                            \n                        \n                        \n                            \n                                Value : Grade 12\n                            \n                        \n                        \n                            \n                                 O_LEVEL\n                            \n                        \n                        \n                            \n                                Value : O-Level\n                            \n                        \n                        \n                            \n                                 A_LEVEL\n                            \n                        \n                        \n                            \n                                Value : A-Level\n                            \n                        \n                        \n                            \n                                 MATRICULATION\n                            \n                        \n                        \n                            \n                                Value : Matriculation\n                            \n                        \n                        \n                            \n                                 INTERMEDIATE\n                            \n                        \n                        \n                            \n                                Value : Intermediate\n                            \n                        \n                        \n                            \n                                 BACHELORS\n                            \n                        \n                        \n                            \n                                Value : Bachelors\n                            \n                        \n                        \n                            \n                                 MASTERS\n                            \n                        \n                        \n                            \n                                Value : Masters\n                            \n                        \n                        \n                            \n                                 PHD\n                            \n                        \n                        \n                            \n                                Value : PhD\n                            \n                        \n            \n        \n\n    src/common/enums/interest.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Interest\n                    \n                \n                        \n                            \n                                 MATHEMATICS\n                            \n                        \n                        \n                            \n                                Value : Mathematics\n                            \n                        \n                        \n                            \n                                 SCIENCE\n                            \n                        \n                        \n                            \n                                Value : Science\n                            \n                        \n                        \n                            \n                                 ENGLISH\n                            \n                        \n                        \n                            \n                                Value : English\n                            \n                        \n                        \n                            \n                                 COMPUTER_SCIENCE\n                            \n                        \n                        \n                            \n                                Value : Computer Science\n                            \n                        \n                        \n                            \n                                 HISTORY\n                            \n                        \n                        \n                            \n                                Value : History\n                            \n                        \n                        \n                            \n                                 GEOGRAPHY\n                            \n                        \n                        \n                            \n                                Value : Geography\n                            \n                        \n                        \n                            \n                                 LITERATURE\n                            \n                        \n                        \n                            \n                                Value : Literature\n                            \n                        \n                        \n                            \n                                 LANGUAGES\n                            \n                        \n                        \n                            \n                                Value : Languages\n                            \n                        \n                        \n                            \n                                 PHYSICAL_EDUCATION\n                            \n                        \n                        \n                            \n                                Value : Physical Education\n                            \n                        \n                        \n                            \n                                 ECONOMICS\n                            \n                        \n                        \n                            \n                                Value : Economics\n                            \n                        \n                        \n                            \n                                 BUSINESS\n                            \n                        \n                        \n                            \n                                Value : Business\n                            \n                        \n                        \n                            \n                                 PSYCHOLOGY\n                            \n                        \n                        \n                            \n                                Value : Psychology\n                            \n                        \n                        \n                            \n                                 PHILOSOPHY\n                            \n                        \n                        \n                            \n                                Value : Philosophy\n                            \n                        \n                        \n                            \n                                 CHEMISTRY\n                            \n                        \n                        \n                            \n                                Value : Chemistry\n                            \n                        \n                        \n                            \n                                 BIOLOGY\n                            \n                        \n                        \n                            \n                                Value : Biology\n                            \n                        \n                        \n                            \n                                 PHYSICS\n                            \n                        \n                        \n                            \n                                Value : Physics\n                            \n                        \n                        \n                            \n                                 ACCOUNTING\n                            \n                        \n                        \n                            \n                                Value : Accounting\n                            \n                        \n                        \n                            \n                                 STATISTICS\n                            \n                        \n                        \n                            \n                                Value : Statistics\n                            \n                        \n                        \n                            \n                                 ART\n                            \n                        \n                        \n                            \n                                Value : Art\n                            \n                        \n                        \n                            \n                                 MUSIC\n                            \n                        \n                        \n                            \n                                Value : Music\n                            \n                        \n                        \n                            \n                                 SOCIOLOGY\n                            \n                        \n                        \n                            \n                                Value : Sociology\n                            \n                        \n                        \n                            \n                                 POLITICAL_SCIENCE\n                            \n                        \n                        \n                            \n                                Value : Political Science\n                            \n                        \n                        \n                            \n                                 LAW\n                            \n                        \n                        \n                            \n                                Value : Law\n                            \n                        \n                        \n                            \n                                 MEDICAL\n                            \n                        \n                        \n                            \n                                Value : Medical Science\n                            \n                        \n                        \n                            \n                                 ENGINEERING\n                            \n                        \n                        \n                            \n                                Value : Engineering\n                            \n                        \n                        \n                            \n                                 COMPUTER_ENGINEERING\n                            \n                        \n                        \n                            \n                                Value : Computer Engineering\n                            \n                        \n                        \n                            \n                                 ARCHITECTURE\n                            \n                        \n                        \n                            \n                                Value : Architecture\n                            \n                        \n                        \n                            \n                                 AGRICULTURE\n                            \n                        \n                        \n                            \n                                Value : Agriculture\n                            \n                        \n                        \n                            \n                                 PSYCHOLINGUISTICS\n                            \n                        \n                        \n                            \n                                Value : Psycholinguistics\n                            \n                        \n                        \n                            \n                                 RELIGION\n                            \n                        \n                        \n                            \n                                Value : Religion Studies\n                            \n                        \n                        \n                            \n                                 ENVIRONMENTAL_SCIENCE\n                            \n                        \n                        \n                            \n                                Value : Environmental Science\n                            \n                        \n                        \n                            \n                                 ENTREPRENEURSHIP\n                            \n                        \n                        \n                            \n                                Value : Entrepreneurship\n                            \n                        \n            \n        \n\n    src/common/enums/qualification.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Qualification\n                    \n                \n                        \n                            \n                                 MATRIC\n                            \n                        \n                        \n                            \n                                Value : Matriculation\n                            \n                        \n                        \n                            \n                                 INTERMEDIATE\n                            \n                        \n                        \n                            \n                                Value : Intermediate\n                            \n                        \n                        \n                            \n                                 BACHELORS\n                            \n                        \n                        \n                            \n                                Value : Bachelors\n                            \n                        \n                        \n                            \n                                 MASTERS\n                            \n                        \n                        \n                            \n                                Value : Masters\n                            \n                        \n                        \n                            \n                                 MPHIL\n                            \n                        \n                        \n                            \n                                Value : M.Phil\n                            \n                        \n                        \n                            \n                                 PHD\n                            \n                        \n                        \n                            \n                                Value : Ph.D.\n                            \n                        \n                        \n                            \n                                 DIPLOMA\n                            \n                        \n                        \n                            \n                                Value : Diploma/Certification\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : Other\n                            \n                        \n            \n        \n\n    src/common/enums/rate-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RateType\n                    \n                \n                        \n                            \n                                 HOURLY\n                            \n                        \n                        \n                            \n                                Value : Hourly\n                            \n                        \n                        \n                            \n                                 MONTHLY\n                            \n                        \n                        \n                            \n                                Value : Monthly\n                            \n                        \n            \n        \n\n    src/common/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : Admin\n                            \n                        \n                        \n                            \n                                 STUDENT\n                            \n                        \n                        \n                            \n                                Value : Student\n                            \n                        \n                        \n                            \n                                 TUTOR\n                            \n                        \n                        \n                            \n                                Value : Tutor\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeedersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TwilioModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_providers\n\n\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommentsModule\n\n\n\ncluster_CommentsModule_exports\n\n\n\ncluster_CommentsModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_exports\n\n\n\ncluster_SeedersModule\n\n\n\ncluster_SeedersModule_exports\n\n\n\ncluster_SeedersModule_providers\n\n\n\ncluster_TwilioModule\n\n\n\ncluster_TwilioModule_exports\n\n\n\ncluster_TwilioModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAccountsService\n\nAccountsService\n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsModule -->\n\nAccountsService->AccountsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthModule->UsersModule\n\n\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAuthModule->AdminModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nMailerModule -->\n\nAuthModule->MailerModule\n\n\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nAuthModule->MessagesModule\n\n\n\n\n\nTwilioModule\n\nTwilioModule\n\nTwilioModule -->\n\nAuthModule->TwilioModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nAdminModule -->\n\nUsersModule->AdminModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAdminService \n\nAdminService \n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nCommentsModule\n\nCommentsModule\n\nAppModule -->\n\nCommentsModule->AppModule\n\n\n\n\n\nCommentsService \n\nCommentsService \n\nCommentsService  -->\n\nCommentsModule->CommentsService \n\n\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\nAppModule -->\n\nMessagesModule->AppModule\n\n\n\n\n\nMessagesGateway \n\nMessagesGateway \n\nMessagesGateway  -->\n\nMessagesModule->MessagesGateway \n\n\n\n\n\nSeedersModule\n\nSeedersModule\n\nAppModule -->\n\nSeedersModule->AppModule\n\n\n\n\n\nAdminSeeder \n\nAdminSeeder \n\nAdminSeeder  -->\n\nSeedersModule->AdminSeeder \n\n\n\n\n\nStudentSeeder \n\nStudentSeeder \n\nStudentSeeder  -->\n\nSeedersModule->StudentSeeder \n\n\n\n\n\nTutorSeeder \n\nTutorSeeder \n\nTutorSeeder  -->\n\nSeedersModule->TutorSeeder \n\n\n\nAppModule -->\n\nTwilioModule->AppModule\n\n\n\n\n\nTwilioService \n\nTwilioService \n\nTwilioService  -->\n\nTwilioModule->TwilioService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCommentsService\n\nCommentsService\n\nCommentsModule -->\n\nCommentsService->CommentsModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nAdminSeeder\n\nAdminSeeder\n\nSeedersModule -->\n\nAdminSeeder->SeedersModule\n\n\n\n\n\nStudentSeeder\n\nStudentSeeder\n\nSeedersModule -->\n\nStudentSeeder->SeedersModule\n\n\n\n\n\nTutorSeeder\n\nTutorSeeder\n\nSeedersModule -->\n\nTutorSeeder->SeedersModule\n\n\n\n\n\nTwilioService\n\nTwilioService\n\nTwilioModule -->\n\nTwilioService->TwilioModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountActivationRequestDocument   (src/.../admin.schema.ts)\n                        \n                        \n                            AccountDocument   (src/.../account.schema.ts)\n                        \n                        \n                            CommentDocument   (src/.../comment.schema.ts)\n                        \n                        \n                            MessageDocument   (src/.../message.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/admin/admin.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AccountActivationRequestDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/accounts/account.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AccountDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/comments/comment.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CommentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/messages/message.schema.ts\n    \n    \n        \n            \n                \n                    \n                    MessageDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/modules/users/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountActivationRequestSchema   (src/.../admin.schema.ts)\n                        \n                        \n                            AccountSchema   (src/.../account.schema.ts)\n                        \n                        \n                            AdminSchema   (src/.../user.schema.ts)\n                        \n                        \n                            CommentSchema   (src/.../comment.schema.ts)\n                        \n                        \n                            GENDERS_KEY   (src/.../gender.constant.ts)\n                        \n                        \n                            MessageSchema   (src/.../message.schema.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.constant.ts)\n                        \n                        \n                            StudentSchema   (src/.../user.schema.ts)\n                        \n                        \n                            TutorSchema   (src/.../user.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/admin/admin.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccountActivationRequestSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(\n  AccountActivationRequest,\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/accounts/account.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccountSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Account)\n                    \n                \n\n\n        \n    \n\n    src/modules/users/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AdminSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Admin)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StudentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Student)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TutorSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Tutor)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    src/modules/comments/comment.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CommentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Comment)\n                    \n                \n\n\n        \n    \n\n    src/common/constants/gender.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GENDERS_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'genders'\n                    \n                \n\n\n        \n    \n\n    src/modules/messages/message.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MessageSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Message)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n\n    src/common/constants/role.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
